"use strict";(()=>{var e={};e.id=7742,e.ids=[7742],e.modules={11185:e=>{e.exports=require("mongoose")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},16709:(e,t,s)=>{s.r(t),s.d(t,{headerHooks:()=>m,originalPathname:()=>T,requestAsyncStorage:()=>S,routeModule:()=>g,serverHooks:()=>P,staticGenerationAsyncStorage:()=>y,staticGenerationBailout:()=>q});var r={};s.r(r),s.d(r,{POST:()=>POST}),s(95655);var i=s(83323),n=s(54647),a=s(41312),o=s(36794);let l=s(11185),d=new l.Schema({AssestId:{type:String,required:!0},UserId:{type:String,required:!0},AssestTitle:{type:String,required:!0},AssestTotalPrice:{type:String,required:!0},OrginalBuyPrice:{type:String,required:!0},SellPrice:{type:String,required:!0},AssestBuyPrice:{type:String,required:!0},PercentageOwn:{type:String,required:!0},Transactionid:{type:String,required:!0},Transactionamount:{type:String,required:!0}},{timestamps:!0});l.models={};let u=l.model.SellAssests||l.model("SellAssests",d);var p=s(53904),c=s(66886);async function POST(e,t){try{let t=await e.json(),{id:s,price:r}=t;await (0,p.Z)();let i=await o.Z.findOne({_id:s});if(!i)return c.Z.json({status:404,error:"Assest Not Found"});await o.Z.deleteOne({_id:s}),await u.create({AssestId:i.AssestId,UserId:i.AssestId,AssestTitle:i.AssestTitle,AssestTotalPrice:i.AssestTotalPrice,OrginalBuyPrice:i.OrginalBuyPrice,SellPrice:r,AssestBuyPrice:i.AssestBuyPrice,PercentageOwn:i.PercentageOwn,Transactionid:i.Transactionid,Transactionamount:i.Transactionamount});let n=await a.Z.findOne({_id:i.AssestId});if(!n)return c.Z.json({status:404,error:"Invalid Assest "});console.log(n);let l=parseFloat(n.RemainingPrice)+parseFloat(r),d=await a.Z.findOneAndUpdate({_id:i.AssestId},{RemainingPrice:l},{new:!0});return console.log(d),c.Z.json({status:200,error:"Assest Sell Successfully"})}catch(e){return console.log(e),c.Z.json({status:300,error:e.message})}}let A=i.AppRouteRouteModule,g=new A({definition:{kind:n.x.APP_ROUTE,page:"/api/portfolio/Assest/SellAssest/route",pathname:"/api/portfolio/Assest/SellAssest",filename:"route",bundlePath:"app/api/portfolio/Assest/SellAssest/route"},resolvedPagePath:"D:\\Assest-Pooling-and-Fractional-Ownershi\\src\\app\\api\\portfolio\\Assest\\SellAssest\\route.js",nextConfigOutput:"",userland:r}),{requestAsyncStorage:S,staticGenerationAsyncStorage:y,serverHooks:P,headerHooks:m,staticGenerationBailout:q}=g,T="/api/portfolio/Assest/SellAssest/route"},36794:(e,t,s)=>{s.d(t,{Z:()=>n});let r=s(11185),i=new r.Schema({AssestId:{type:String,required:!0},UserId:{type:String,required:!0},AssestTitle:{type:String,required:!0},AssestTotalPrice:{type:String,required:!0},OrginalBuyPrice:{type:String,required:!0},AssestBuyPrice:{type:String,required:!0},PercentageOwn:{type:String,required:!0},Transactionid:{type:String,required:!0},Transactionamount:{type:String,required:!0},Profit:{type:Array}},{timestamps:!0});r.models={};let n=r.model.Assest||r.model("Assests",i)}};var t=require("../../../../../webpack-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),s=t.X(0,[9727,6886,3904,782],()=>__webpack_exec__(16709));module.exports=s})();