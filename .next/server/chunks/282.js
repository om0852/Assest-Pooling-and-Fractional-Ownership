exports.id=282,exports.ids=[282],exports.modules={95974:(e,t)=>{"use strict";function safeSlice(e,t,a){if(a>e.length)throw Error("invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds");return e.slice(t,a)}function decodeLength(e){if(0===e[0])throw Error("invalid RLP: extra zeros");return parseHexByte(function(e){let t="";for(let r=0;r<e.length;r++)t+=a[e[r]];return t}(e))}function encodeLength(e,t){if(e<56)return Uint8Array.from([e+t]);let a=numberToHex(e),r=a.length/2,i=numberToHex(t+55+r);return Uint8Array.from(hexToBytes(i+a))}t.yH=void 0;let a=Array.from({length:256},(e,t)=>t.toString(16).padStart(2,"0"));function parseHexByte(e){let t=Number.parseInt(e,16);if(Number.isNaN(t))throw Error("Invalid byte sequence");return t}function hexToBytes(e){if("string"!=typeof e)throw TypeError("hexToBytes: expected string, got "+typeof e);if(e.length%2)throw Error("hexToBytes: received invalid unpadded hex");let t=new Uint8Array(e.length/2);for(let a=0;a<t.length;a++){let r=2*a;t[a]=parseHexByte(e.slice(r,r+2))}return t}function concatBytes(...e){if(1===e.length)return e[0];let t=e.reduce((e,t)=>e+t.length,0),a=new Uint8Array(t);for(let t=0,r=0;t<e.length;t++){let i=e[t];a.set(i,r),r+=i.length}return a}function numberToHex(e){if(e<0)throw Error("Invalid integer as argument, must be unsigned!");let t=e.toString(16);return t.length%2?`0${t}`:t}function isHexPrefixed(e){return e.length>=2&&"0"===e[0]&&"x"===e[1]}function toBytes(e){if(e instanceof Uint8Array)return e;if("string"==typeof e){var t;return isHexPrefixed(e)?hexToBytes((t="string"!=typeof e?e:isHexPrefixed(e)?e.slice(2):e).length%2?`0${t}`:t):new TextEncoder().encode(e)}if("number"==typeof e||"bigint"==typeof e)return e?hexToBytes(numberToHex(e)):Uint8Array.from([]);if(null==e)return Uint8Array.from([]);throw Error("toBytes: received unsupported type "+typeof e)}t.yH={encode:function encode(e){if(Array.isArray(e)){let t=[],a=0;for(let r=0;r<e.length;r++){let i=encode(e[r]);t.push(i),a+=i.length}return concatBytes(encodeLength(a,192),...t)}let t=toBytes(e);return 1===t.length&&t[0]<128?t:concatBytes(encodeLength(t.length,128),t)},decode:function(e,t=!1){if(null==e||0===e.length)return Uint8Array.from([]);let a=toBytes(e),r=function _decode(e){let t,a,r,i,s;let n=[],o=e[0];if(o<=127)return{data:e.slice(0,1),remainder:e.slice(1)};if(o<=183){if(t=o-127,r=128===o?Uint8Array.from([]):safeSlice(e,1,t),2===t&&r[0]<128)throw Error("invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed");return{data:r,remainder:e.slice(t)}}if(o<=191){if(a=o-182,e.length-1<a)throw Error("invalid RLP: not enough bytes for string length");if((t=decodeLength(safeSlice(e,1,a)))<=55)throw Error("invalid RLP: expected string length to be greater than 55");return{data:r=safeSlice(e,a,t+a),remainder:e.slice(t+a)}}if(o<=247){for(i=safeSlice(e,1,t=o-191);i.length;)s=_decode(i),n.push(s.data),i=s.remainder;return{data:n,remainder:e.slice(t)}}{if((t=decodeLength(safeSlice(e,1,a=o-246)))<56)throw Error("invalid RLP: encoded list too short");let r=a+t;if(r>e.length)throw Error("invalid RLP: total length is larger than the data");for(i=safeSlice(e,a,r);i.length;)s=_decode(i),n.push(s.data),i=s.remainder;return{data:n,remainder:e.slice(r)}}}(a);if(t)return r;if(0!==r.remainder.length)throw Error("invalid RLP: remainder must be zero");return r.data}}},96568:(e,t)=>{(function(e){e.version="1.2.2";var t=function(){for(var e=0,t=Array(256),a=0;256!=a;++a)e=1&(e=1&(e=1&(e=1&(e=1&(e=1&(e=1&(e=1&(e=a)?-306674912^e>>>1:e>>>1)?-306674912^e>>>1:e>>>1)?-306674912^e>>>1:e>>>1)?-306674912^e>>>1:e>>>1)?-306674912^e>>>1:e>>>1)?-306674912^e>>>1:e>>>1)?-306674912^e>>>1:e>>>1)?-306674912^e>>>1:e>>>1,t[a]=e;return"undefined"!=typeof Int32Array?new Int32Array(t):t}(),a=function(e){var t=0,a=0,r=0,i="undefined"!=typeof Int32Array?new Int32Array(4096):Array(4096);for(r=0;256!=r;++r)i[r]=e[r];for(r=0;256!=r;++r)for(a=e[r],t=256+r;t<4096;t+=256)a=i[t]=a>>>8^e[255&a];var s=[];for(r=1;16!=r;++r)s[r-1]="undefined"!=typeof Int32Array?i.subarray(256*r,256*r+256):i.slice(256*r,256*r+256);return s}(t),r=a[0],i=a[1],s=a[2],n=a[3],o=a[4],d=a[5],p=a[6],l=a[7],m=a[8],c=a[9],u=a[10],f=a[11],v=a[12],g=a[13],y=a[14];e.table=t,e.bstr=function(e,a){for(var r=-1^a,i=0,s=e.length;i<s;)r=r>>>8^t[(r^e.charCodeAt(i++))&255];return~r},e.buf=function(e,a){for(var b=-1^a,_=e.length-15,w=0;w<_;)b=y[e[w++]^255&b]^g[e[w++]^b>>8&255]^v[e[w++]^b>>16&255]^f[e[w++]^b>>>24]^u[e[w++]]^c[e[w++]]^m[e[w++]]^l[e[w++]]^p[e[w++]]^d[e[w++]]^o[e[w++]]^n[e[w++]]^s[e[w++]]^i[e[w++]]^r[e[w++]]^t[e[w++]];for(_+=15;w<_;)b=b>>>8^t[(b^e[w++])&255];return~b},e.str=function(e,a){for(var r=-1^a,i=0,s=e.length,n=0,o=0;i<s;)(n=e.charCodeAt(i++))<128?r=r>>>8^t[(r^n)&255]:n<2048?r=(r=r>>>8^t[(r^(192|n>>6&31))&255])>>>8^t[(r^(128|63&n))&255]:n>=55296&&n<57344?(n=(1023&n)+64,o=1023&e.charCodeAt(i++),r=(r=(r=(r=r>>>8^t[(r^(240|n>>8&7))&255])>>>8^t[(r^(128|n>>2&63))&255])>>>8^t[(r^(128|o>>6&15|(3&n)<<4))&255])>>>8^t[(r^(128|63&o))&255]):r=(r=(r=r>>>8^t[(r^(224|n>>12&15))&255])>>>8^t[(r^(128|n>>6&63))&255])>>>8^t[(r^(128|63&n))&255];return~r}})("undefined"==typeof DO_NOT_EXPORT_CRC?t:{})},94691:(e,t,a)=>{let r=a(17096),i=r.default||r,fetch=function(e,t){return/^\/\//.test(e)&&(e="https:"+e),i.call(this,e,t)};fetch.ponyfill=!0,e.exports=t=fetch,t.fetch=fetch,t.Headers=r.Headers,t.Request=r.Request,t.Response=r.Response,t.default=fetch},58816:(e,t,a)=>{"use strict";e.exports=a(26864)},56041:e=>{"undefined"!=typeof __nccwpck_require__&&(__nccwpck_require__.ab=__dirname+"/"),({189:function(){!function(e,t){"use strict";if(!e.setImmediate){var a,r,i,s,n,o=1,d={},p=!1,l=e.document,m=Object.getPrototypeOf&&Object.getPrototypeOf(e);(m=m&&m.setTimeout?m:e,"[object process]"===({}).toString.call(e.process))?n=function(e){process.nextTick(function(){runIfPresent(e)})}:function(){if(e.postMessage&&!e.importScripts){var t=!0,a=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=a,t}}()?(a="setImmediate$"+Math.random()+"$",r=function(t){t.source===e&&"string"==typeof t.data&&0===t.data.indexOf(a)&&runIfPresent(+t.data.slice(a.length))},e.addEventListener?e.addEventListener("message",r,!1):e.attachEvent("onmessage",r),n=function(t){e.postMessage(a+t,"*")}):e.MessageChannel?((i=new MessageChannel).port1.onmessage=function(e){runIfPresent(e.data)},n=function(e){i.port2.postMessage(e)}):l&&"onreadystatechange"in l.createElement("script")?(s=l.documentElement,n=function(e){var t=l.createElement("script");t.onreadystatechange=function(){runIfPresent(e),t.onreadystatechange=null,s.removeChild(t),t=null},s.appendChild(t)}):n=function(e){setTimeout(runIfPresent,0,e)},m.setImmediate=function(e){"function"!=typeof e&&(e=Function(""+e));for(var t=Array(arguments.length-1),a=0;a<t.length;a++)t[a]=arguments[a+1];var r={callback:e,args:t};return d[o]=r,n(o),o++},m.clearImmediate=clearImmediate}function clearImmediate(e){delete d[e]}function runIfPresent(e){if(p)setTimeout(runIfPresent,0,e);else{var t=d[e];if(t){p=!0;try{!function(e){var t=e.callback,a=e.args;switch(a.length){case 0:t();break;case 1:t(a[0]);break;case 2:t(a[0],a[1]);break;case 3:t(a[0],a[1],a[2]);break;default:t.apply(void 0,a)}}(t)}finally{clearImmediate(e),p=!1}}}}}("undefined"==typeof self?"undefined"==typeof global?this:global:self)}})[189](),e.exports={}},17096:(e,t,a)=>{"use strict";let r;function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(t,"__esModule",{value:!0});var i=_interopDefault(a(12781)),s=_interopDefault(a(13685)),n=_interopDefault(a(57310)),o=_interopDefault(a(49739)),d=_interopDefault(a(95687)),p=_interopDefault(a(59796));let l=i.Readable,m=Symbol("buffer"),c=Symbol("type");let Blob=class Blob{constructor(){this[c]="";let e=arguments[0],t=arguments[1],a=[];if(e){let t=Number(e.length);for(let r=0;r<t;r++){let t;let i=e[r];(t=i instanceof Buffer?i:ArrayBuffer.isView(i)?Buffer.from(i.buffer,i.byteOffset,i.byteLength):i instanceof ArrayBuffer?Buffer.from(i):i instanceof Blob?i[m]:Buffer.from("string"==typeof i?i:String(i))).length,a.push(t)}}this[m]=Buffer.concat(a);let r=t&&void 0!==t.type&&String(t.type).toLowerCase();r&&!/[^\u0020-\u007E]/.test(r)&&(this[c]=r)}get size(){return this[m].length}get type(){return this[c]}text(){return Promise.resolve(this[m].toString())}arrayBuffer(){let e=this[m],t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(t)}stream(){let e=new l;return e._read=function(){},e.push(this[m]),e.push(null),e}toString(){return"[object Blob]"}slice(){let e,t;let a=this.size,r=arguments[0],i=arguments[1];e=void 0===r?0:r<0?Math.max(a+r,0):Math.min(r,a),t=void 0===i?a:i<0?Math.max(a+i,0):Math.min(i,a);let s=Math.max(t-e,0),n=this[m],o=n.slice(e,e+s),d=new Blob([],{type:arguments[2]});return d[m]=o,d}};function FetchError(e,t,a){Error.call(this,e),this.message=e,this.type=t,a&&(this.code=this.errno=a.code),Error.captureStackTrace(this,this.constructor)}Object.defineProperties(Blob.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(Blob.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),FetchError.prototype=Object.create(Error.prototype),FetchError.prototype.constructor=FetchError,FetchError.prototype.name="FetchError";try{r=Object(function(){var e=Error("Cannot find module 'encoding'");throw e.code="MODULE_NOT_FOUND",e}())}catch(e){}let u=Symbol("Body internals"),f=i.PassThrough;function Body(e){var t=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=a.size,s=a.timeout;null==e?e=null:isURLSearchParams(e)?e=Buffer.from(e.toString()):isBlob(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof i||(e=Buffer.from(String(e)))),this[u]={body:e,disturbed:!1,error:null},this.size=void 0===r?0:r,this.timeout=void 0===s?0:s,e instanceof i&&e.on("error",function(e){let a="AbortError"===e.name?e:new FetchError(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[u].error=a})}function consumeBody(){var e=this;if(this[u].disturbed)return Body.Promise.reject(TypeError(`body used already for: ${this.url}`));if(this[u].disturbed=!0,this[u].error)return Body.Promise.reject(this[u].error);let t=this.body;if(null===t)return Body.Promise.resolve(Buffer.alloc(0));if(isBlob(t)&&(t=t.stream()),Buffer.isBuffer(t))return Body.Promise.resolve(t);if(!(t instanceof i))return Body.Promise.resolve(Buffer.alloc(0));let a=[],r=0,s=!1;return new Body.Promise(function(i,n){let o;e.timeout&&(o=setTimeout(function(){s=!0,n(new FetchError(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))},e.timeout)),t.on("error",function(t){"AbortError"===t.name?(s=!0,n(t)):n(new FetchError(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))}),t.on("data",function(t){if(!s&&null!==t){if(e.size&&r+t.length>e.size){s=!0,n(new FetchError(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}r+=t.length,a.push(t)}}),t.on("end",function(){if(!s){clearTimeout(o);try{i(Buffer.concat(a,r))}catch(t){n(new FetchError(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}})})}function isURLSearchParams(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function isBlob(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function clone(e){let t,a;let r=e.body;if(e.bodyUsed)throw Error("cannot clone body after it is used");return r instanceof i&&"function"!=typeof r.getBoundary&&(t=new f,a=new f,r.pipe(t),r.pipe(a),e[u].body=t,r=a),r}function extractContentType(e){if(null===e)return null;if("string"==typeof e)return"text/plain;charset=UTF-8";if(isURLSearchParams(e))return"application/x-www-form-urlencoded;charset=UTF-8";if(isBlob(e))return e.type||null;if(Buffer.isBuffer(e))return null;if("[object ArrayBuffer]"===Object.prototype.toString.call(e))return null;if(ArrayBuffer.isView(e))return null;else if("function"==typeof e.getBoundary)return`multipart/form-data;boundary=${e.getBoundary()}`;else if(e instanceof i)return null;else return"text/plain;charset=UTF-8"}function getTotalBytes(e){let t=e.body;return null===t?0:isBlob(t)?t.size:Buffer.isBuffer(t)?t.length:t&&"function"==typeof t.getLengthSync&&(t._lengthRetrievers&&0==t._lengthRetrievers.length||t.hasKnownLength&&t.hasKnownLength())?t.getLengthSync():null}Body.prototype={get body(){return this[u].body},get bodyUsed(){return this[u].disturbed},arrayBuffer(){return consumeBody.call(this).then(function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)})},blob(){let e=this.headers&&this.headers.get("content-type")||"";return consumeBody.call(this).then(function(t){return Object.assign(new Blob([],{type:e.toLowerCase()}),{[m]:t})})},json(){var e=this;return consumeBody.call(this).then(function(t){try{return JSON.parse(t.toString())}catch(t){return Body.Promise.reject(new FetchError(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}})},text(){return consumeBody.call(this).then(function(e){return e.toString()})},buffer(){return consumeBody.call(this)},textConverted(){var e=this;return consumeBody.call(this).then(function(t){return function(e,t){let a,i;if("function"!=typeof r)throw Error("The package `encoding` must be installed to use the textConverted() function");let s=t.get("content-type"),n="utf-8";return s&&(a=/charset=([^;]*)/i.exec(s)),i=e.slice(0,1024).toString(),!a&&i&&(a=/<meta.+?charset=(['"])(.+?)\1/i.exec(i)),!a&&i&&(!(a=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(i))&&(a=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(i))&&a.pop(),a&&(a=/charset=(.*)/i.exec(a.pop()))),!a&&i&&(a=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(i)),a&&("gb2312"===(n=a.pop())||"gbk"===n)&&(n="gb18030"),r(e,"UTF-8",n).toString()}(t,e.headers)})}},Object.defineProperties(Body.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),Body.mixIn=function(e){for(let t of Object.getOwnPropertyNames(Body.prototype))if(!(t in e)){let a=Object.getOwnPropertyDescriptor(Body.prototype,t);Object.defineProperty(e,t,a)}},Body.Promise=global.Promise;let v=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,g=/[^\t\x20-\x7e\x80-\xff]/;function validateName(e){if(e=`${e}`,v.test(e)||""===e)throw TypeError(`${e} is not a legal HTTP header name`)}function validateValue(e){if(e=`${e}`,g.test(e))throw TypeError(`${e} is not a legal HTTP header value`)}function find(e,t){for(let a in t=t.toLowerCase(),e)if(a.toLowerCase()===t)return a}let y=Symbol("map");let Headers=class Headers{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[y]=Object.create(null),e instanceof Headers){let t=e.raw(),a=Object.keys(t);for(let e of a)for(let a of t[e])this.append(e,a);return}if(null==e);else if("object"==typeof e){let t=e[Symbol.iterator];if(null!=t){if("function"!=typeof t)throw TypeError("Header pairs must be iterable");let a=[];for(let t of e){if("object"!=typeof t||"function"!=typeof t[Symbol.iterator])throw TypeError("Each header pair must be iterable");a.push(Array.from(t))}for(let e of a){if(2!==e.length)throw TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(let t of Object.keys(e)){let a=e[t];this.append(t,a)}}else throw TypeError("Provided initializer must be an object")}get(e){validateName(e=`${e}`);let t=find(this[y],e);return void 0===t?null:this[y][t].join(", ")}forEach(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,a=getHeaders(this),r=0;for(;r<a.length;){var i=a[r];let s=i[0],n=i[1];e.call(t,n,s,this),a=getHeaders(this),r++}}set(e,t){e=`${e}`,t=`${t}`,validateName(e),validateValue(t);let a=find(this[y],e);this[y][void 0!==a?a:e]=[t]}append(e,t){e=`${e}`,t=`${t}`,validateName(e),validateValue(t);let a=find(this[y],e);void 0!==a?this[y][a].push(t):this[y][e]=[t]}has(e){return validateName(e=`${e}`),void 0!==find(this[y],e)}delete(e){validateName(e=`${e}`);let t=find(this[y],e);void 0!==t&&delete this[y][t]}raw(){return this[y]}keys(){return createHeadersIterator(this,"key")}values(){return createHeadersIterator(this,"value")}[Symbol.iterator](){return createHeadersIterator(this,"key+value")}};function getHeaders(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value",a=Object.keys(e[y]).sort();return a.map("key"===t?function(e){return e.toLowerCase()}:"value"===t?function(t){return e[y][t].join(", ")}:function(t){return[t.toLowerCase(),e[y][t].join(", ")]})}Headers.prototype.entries=Headers.prototype[Symbol.iterator],Object.defineProperty(Headers.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(Headers.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});let b=Symbol("internal");function createHeadersIterator(e,t){let a=Object.create(_);return a[b]={target:e,kind:t,index:0},a}let _=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==_)throw TypeError("Value of `this` is not a HeadersIterator");var e=this[b];let t=e.target,a=e.kind,r=e.index,i=getHeaders(t,a),s=i.length;return r>=s?{value:void 0,done:!0}:(this[b].index=r+1,{value:i[r],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(_,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});let w=Symbol("Response internals"),A=s.STATUS_CODES;let Response=class Response{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Body.call(this,e,t);let a=t.status||200,r=new Headers(t.headers);if(null!=e&&!r.has("Content-Type")){let t=extractContentType(e);t&&r.append("Content-Type",t)}this[w]={url:t.url,status:a,statusText:t.statusText||A[a],headers:r,counter:t.counter}}get url(){return this[w].url||""}get status(){return this[w].status}get ok(){return this[w].status>=200&&this[w].status<300}get redirected(){return this[w].counter>0}get statusText(){return this[w].statusText}get headers(){return this[w].headers}clone(){return new Response(clone(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}};Body.mixIn(Response.prototype),Object.defineProperties(Response.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(Response.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});let E=Symbol("Request internals"),x=n.URL||o.URL,S=n.parse,T=n.format;function parseURL(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new x(e).toString()),S(e)}let I="destroy"in i.Readable.prototype;function isRequest(e){return"object"==typeof e&&"object"==typeof e[E]}let Request=class Request{constructor(e){let t,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};isRequest(e)?t=parseURL(e.url):(t=e&&e.href?parseURL(e.href):parseURL(`${e}`),e={});let r=a.method||e.method||"GET";if(r=r.toUpperCase(),(null!=a.body||isRequest(e)&&null!==e.body)&&("GET"===r||"HEAD"===r))throw TypeError("Request with GET/HEAD method cannot have body");let i=null!=a.body?a.body:isRequest(e)&&null!==e.body?clone(e):null;Body.call(this,i,{timeout:a.timeout||e.timeout||0,size:a.size||e.size||0});let s=new Headers(a.headers||e.headers||{});if(null!=i&&!s.has("Content-Type")){let e=extractContentType(i);e&&s.append("Content-Type",e)}let n=isRequest(e)?e.signal:null;if("signal"in a&&(n=a.signal),null!=n&&!function(e){let t=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!!(t&&"AbortSignal"===t.constructor.name)}(n))throw TypeError("Expected signal to be an instanceof AbortSignal");this[E]={method:r,redirect:a.redirect||e.redirect||"follow",headers:s,parsedURL:t,signal:n},this.follow=void 0!==a.follow?a.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==a.compress?a.compress:void 0===e.compress||e.compress,this.counter=a.counter||e.counter||0,this.agent=a.agent||e.agent}get method(){return this[E].method}get url(){return T(this[E].parsedURL)}get headers(){return this[E].headers}get redirect(){return this[E].redirect}get signal(){return this[E].signal}clone(){return new Request(this)}};function AbortError(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}Body.mixIn(Request.prototype),Object.defineProperty(Request.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(Request.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),AbortError.prototype=Object.create(Error.prototype),AbortError.prototype.constructor=AbortError,AbortError.prototype.name="AbortError";let k=n.URL||o.URL,C=i.PassThrough,isDomainOrSubdomain=function(e,t){let a=new k(t).hostname,r=new k(e).hostname;return a===r||"."===a[a.length-r.length-1]&&a.endsWith(r)},isSameProtocol=function(e,t){let a=new k(t).protocol,r=new k(e).protocol;return a===r};function fetch(e,t){if(!fetch.Promise)throw Error("native promise missing, set fetch.Promise to your favorite alternative");return Body.Promise=fetch.Promise,new fetch.Promise(function(a,r){var n;let o,l;let m=new Request(e,t),c=function(e){let t=e[E].parsedURL,a=new Headers(e[E].headers);if(a.has("Accept")||a.set("Accept","*/*"),!t.protocol||!t.hostname)throw TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(t.protocol))throw TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof i.Readable&&!I)throw Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let r=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(r="0"),null!=e.body){let t=getTotalBytes(e);"number"==typeof t&&(r=String(t))}r&&a.set("Content-Length",r),a.has("User-Agent")||a.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!a.has("Accept-Encoding")&&a.set("Accept-Encoding","gzip,deflate");let s=e.agent;return"function"==typeof s&&(s=s(t)),Object.assign({},t,{method:e.method,headers:function(e){let t=Object.assign({__proto__:null},e[y]),a=find(e[y],"Host");return void 0!==a&&(t[a]=t[a][0]),t}(a),agent:s})}(m),u=("https:"===c.protocol?d:s).request,f=m.signal,b=null,abort=function(){let e=new AbortError("The user aborted a request.");r(e),m.body&&m.body instanceof i.Readable&&destroyStream(m.body,e),b&&b.body&&b.body.emit("error",e)};if(f&&f.aborted){abort();return}let abortAndFinalize=function(){abort(),finalize()},_=u(c);function finalize(){_.abort(),f&&f.removeEventListener("abort",abortAndFinalize),clearTimeout(o)}f&&f.addEventListener("abort",abortAndFinalize),m.timeout&&_.once("socket",function(e){o=setTimeout(function(){r(new FetchError(`network timeout at: ${m.url}`,"request-timeout")),finalize()},m.timeout)}),_.on("error",function(e){r(new FetchError(`request to ${m.url} failed, reason: ${e.message}`,"system",e)),b&&b.body&&destroyStream(b.body,e),finalize()}),n=function(e){(!f||!f.aborted)&&b&&b.body&&destroyStream(b.body,e)},_.on("socket",function(e){l=e}),_.on("response",function(e){let t=e.headers;"chunked"!==t["transfer-encoding"]||t["content-length"]||e.once("close",function(e){let t=l&&l.listenerCount("data")>0;if(t&&!e){let e=Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",n(e)}})}),14>parseInt(process.version.substring(1))&&_.on("socket",function(e){e.addListener("close",function(t){let a=e.listenerCount("data")>0;if(b&&a&&!t&&!(f&&f.aborted)){let e=Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",b.body.emit("error",e)}})}),_.on("response",function(e){clearTimeout(o);let t=function(e){let t=new Headers;for(let a of Object.keys(e))if(!v.test(a)){if(Array.isArray(e[a]))for(let r of e[a])g.test(r)||(void 0===t[y][a]?t[y][a]=[r]:t[y][a].push(r));else g.test(e[a])||(t[y][a]=[e[a]])}return t}(e.headers);if(fetch.isRedirect(e.statusCode)){let i=t.get("Location"),s=null;try{s=null===i?null:new k(i,m.url).toString()}catch(e){if("manual"!==m.redirect){r(new FetchError(`uri requested responds with an invalid redirect URL: ${i}`,"invalid-redirect")),finalize();return}}switch(m.redirect){case"error":r(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${m.url}`,"no-redirect")),finalize();return;case"manual":if(null!==s)try{t.set("Location",s)}catch(e){r(e)}break;case"follow":if(null===s)break;if(m.counter>=m.follow){r(new FetchError(`maximum redirect reached at: ${m.url}`,"max-redirect")),finalize();return}let n={headers:new Headers(m.headers),follow:m.follow,counter:m.counter+1,agent:m.agent,compress:m.compress,method:m.method,body:m.body,signal:m.signal,timeout:m.timeout,size:m.size};if(!isDomainOrSubdomain(m.url,s)||!isSameProtocol(m.url,s))for(let e of["authorization","www-authenticate","cookie","cookie2"])n.headers.delete(e);if(303!==e.statusCode&&m.body&&null===getTotalBytes(m)){r(new FetchError("Cannot follow redirect with body being a readable stream","unsupported-redirect")),finalize();return}(303===e.statusCode||(301===e.statusCode||302===e.statusCode)&&"POST"===m.method)&&(n.method="GET",n.body=void 0,n.headers.delete("content-length")),a(fetch(new Request(s,n))),finalize();return}}e.once("end",function(){f&&f.removeEventListener("abort",abortAndFinalize)});let i=e.pipe(new C),s={url:m.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:m.size,timeout:m.timeout,counter:m.counter},n=t.get("Content-Encoding");if(!m.compress||"HEAD"===m.method||null===n||204===e.statusCode||304===e.statusCode){a(b=new Response(i,s));return}let d={flush:p.Z_SYNC_FLUSH,finishFlush:p.Z_SYNC_FLUSH};if("gzip"==n||"x-gzip"==n){i=i.pipe(p.createGunzip(d)),a(b=new Response(i,s));return}if("deflate"==n||"x-deflate"==n){let t=e.pipe(new C);t.once("data",function(e){i=(15&e[0])==8?i.pipe(p.createInflate()):i.pipe(p.createInflateRaw()),a(b=new Response(i,s))}),t.on("end",function(){b||a(b=new Response(i,s))});return}if("br"==n&&"function"==typeof p.createBrotliDecompress){i=i.pipe(p.createBrotliDecompress()),a(b=new Response(i,s));return}a(b=new Response(i,s))}),function(e,t){let a=t.body;null===a?e.end():isBlob(a)?a.stream().pipe(e):Buffer.isBuffer(a)?(e.write(a),e.end()):a.pipe(e)}(_,m)})}function destroyStream(e,t){e.destroy?e.destroy(t):(e.emit("error",t),e.end())}fetch.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},fetch.Promise=global.Promise,e.exports=t=fetch,Object.defineProperty(t,"__esModule",{value:!0}),t.default=t,t.Headers=Headers,t.Request=Request,t.Response=Response,t.FetchError=FetchError,t.AbortError=AbortError},77360:(e,t,a)=>{"use strict";var r=a(85477),i=a(2115),s={TRANSITIONAL:0,NONTRANSITIONAL:1};function normalize(e){return e.split("\x00").map(function(e){return e.normalize("NFC")}).join("\x00")}function findStatus(e){for(var t=0,a=i.length-1;t<=a;){var r=Math.floor((t+a)/2),s=i[r];if(s[0][0]<=e&&s[0][1]>=e)return s;s[0][0]>e?a=r-1:t=r+1}return null}var n=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function countSymbols(e){return e.replace(n,"_").length}var o=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function processing(e,t,a){var i=function(e,t,a){for(var r=!1,i="",n=countSymbols(e),o=0;o<n;++o){var d=e.codePointAt(o),p=findStatus(d);switch(p[1]){case"disallowed":r=!0,i+=String.fromCodePoint(d);break;case"ignored":break;case"mapped":i+=String.fromCodePoint.apply(String,p[2]);break;case"deviation":a===s.TRANSITIONAL?i+=String.fromCodePoint.apply(String,p[2]):i+=String.fromCodePoint(d);break;case"valid":i+=String.fromCodePoint(d);break;case"disallowed_STD3_mapped":t?(r=!0,i+=String.fromCodePoint(d)):i+=String.fromCodePoint.apply(String,p[2]);break;case"disallowed_STD3_valid":t&&(r=!0),i+=String.fromCodePoint(d)}}return{string:i,error:r}}(e,t,a);i.string=normalize(i.string);for(var n=i.string.split("."),d=0;d<n.length;++d)try{var p=function(e,t){"xn--"===e.substr(0,4)&&(e=r.toUnicode(e),s.NONTRANSITIONAL);var a=!1;(normalize(e)!==e||"-"===e[3]&&"-"===e[4]||"-"===e[0]||"-"===e[e.length-1]||-1!==e.indexOf(".")||0===e.search(o))&&(a=!0);for(var i=countSymbols(e),n=0;n<i;++n){var d=findStatus(e.codePointAt(n));if(processing===s.TRANSITIONAL&&"valid"!==d[1]||processing===s.NONTRANSITIONAL&&"valid"!==d[1]&&"deviation"!==d[1]){a=!0;break}}return{label:e,error:a}}(n[d]);n[d]=p.label,i.error=i.error||p.error}catch(e){i.error=!0}return{string:n.join("."),error:i.error}}e.exports.toASCII=function(e,t,a,i){var s=processing(e,t,a),n=s.string.split(".");if(n=n.map(function(e){try{return r.toASCII(e)}catch(t){return s.error=!0,e}}),i){var o=n.slice(0,n.length-1).join(".").length;(o.length>253||0===o.length)&&(s.error=!0);for(var d=0;d<n.length;++d)if(n.length>63||0===n.length){s.error=!0;break}}return s.error?null:n.join(".")},e.exports.toUnicode=function(e,t){var a=processing(e,t,s.NONTRANSITIONAL);return{domain:a.string,error:a.error}},e.exports.PROCESSING_OPTIONS=s},82490:e=>{"use strict";var t={};function createNumberConversion(e,t){!t.unsigned&&--e;let a=t.unsigned?0:-Math.pow(2,e),r=Math.pow(2,e)-1,i=t.moduloBitLength?Math.pow(2,t.moduloBitLength):Math.pow(2,e),s=t.moduloBitLength?Math.pow(2,t.moduloBitLength-1):Math.pow(2,e-1);return function(e,n){n||(n={});let o=+e;if(n.enforceRange){if(!Number.isFinite(o))throw TypeError("Argument is not a finite number");if((o=(o<0?-1:1)*Math.floor(Math.abs(o)))<a||o>r)throw TypeError("Argument is not in byte range");return o}if(!isNaN(o)&&n.clamp){var d;return(o=(d=o)%1==.5&&(1&d)==0?Math.floor(d):Math.round(d))<a&&(o=a),o>r&&(o=r),o}if(!Number.isFinite(o)||0===o)return 0;if(o=(o<0?-1:1)*Math.floor(Math.abs(o))%i,!t.unsigned&&o>=s)return o-i;if(t.unsigned){if(o<0)o+=i;else if(-0===o)return 0}return o}}e.exports=t,t.void=function(){},t.boolean=function(e){return!!e},t.byte=createNumberConversion(8,{unsigned:!1}),t.octet=createNumberConversion(8,{unsigned:!0}),t.short=createNumberConversion(16,{unsigned:!1}),t["unsigned short"]=createNumberConversion(16,{unsigned:!0}),t.long=createNumberConversion(32,{unsigned:!1}),t["unsigned long"]=createNumberConversion(32,{unsigned:!0}),t["long long"]=createNumberConversion(32,{unsigned:!1,moduloBitLength:64}),t["unsigned long long"]=createNumberConversion(32,{unsigned:!0,moduloBitLength:64}),t.double=function(e){let t=+e;if(!Number.isFinite(t))throw TypeError("Argument is not a finite floating-point value");return t},t["unrestricted double"]=function(e){let t=+e;if(isNaN(t))throw TypeError("Argument is NaN");return t},t.float=t.double,t["unrestricted float"]=t["unrestricted double"],t.DOMString=function(e,t){return(t||(t={}),t.treatNullAsEmptyString&&null===e)?"":String(e)},t.ByteString=function(e,t){let a;let r=String(e);for(let e=0;void 0!==(a=r.codePointAt(e));++e)if(a>255)throw TypeError("Argument is not a valid bytestring");return r},t.USVString=function(e){let t=String(e),a=t.length,r=[];for(let e=0;e<a;++e){let i=t.charCodeAt(e);if(i<55296||i>57343)r.push(String.fromCodePoint(i));else if(56320<=i&&i<=57343)r.push(String.fromCodePoint(65533));else if(e===a-1)r.push(String.fromCodePoint(65533));else{let a=t.charCodeAt(e+1);if(56320<=a&&a<=57343){let t=1023&i,s=1023&a;r.push(String.fromCodePoint(65536+1024*t+s)),++e}else r.push(String.fromCodePoint(65533))}}return r.join("")},t.Date=function(e,t){if(!(e instanceof Date))throw TypeError("Argument is not a Date object");if(!isNaN(e))return e},t.RegExp=function(e,t){return e instanceof RegExp||(e=new RegExp(e)),e}},75483:(e,t,a)=>{"use strict";let r=a(72596);t.implementation=class{constructor(e){let t=e[0],a=e[1],i=null;if(void 0!==a&&"failure"===(i=r.basicURLParse(a)))throw TypeError("Invalid base URL");let s=r.basicURLParse(t,{baseURL:i});if("failure"===s)throw TypeError("Invalid URL");this._url=s}get href(){return r.serializeURL(this._url)}set href(e){let t=r.basicURLParse(e);if("failure"===t)throw TypeError("Invalid URL");this._url=t}get origin(){return r.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){r.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){r.cannotHaveAUsernamePasswordPort(this._url)||r.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){r.cannotHaveAUsernamePasswordPort(this._url)||r.setThePassword(this._url,e)}get host(){let e=this._url;return null===e.host?"":null===e.port?r.serializeHost(e.host):r.serializeHost(e.host)+":"+r.serializeInteger(e.port)}set host(e){this._url.cannotBeABaseURL||r.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){return null===this._url.host?"":r.serializeHost(this._url.host)}set hostname(e){this._url.cannotBeABaseURL||r.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){return null===this._url.port?"":r.serializeInteger(this._url.port)}set port(e){r.cannotHaveAUsernamePasswordPort(this._url)||(""===e?this._url.port=null:r.basicURLParse(e,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:0===this._url.path.length?"":"/"+this._url.path.join("/")}set pathname(e){this._url.cannotBeABaseURL||(this._url.path=[],r.basicURLParse(e,{url:this._url,stateOverride:"path start"}))}get search(){return null===this._url.query||""===this._url.query?"":"?"+this._url.query}set search(e){let t=this._url;if(""===e){t.query=null;return}let a="?"===e[0]?e.substring(1):e;t.query="",r.basicURLParse(a,{url:t,stateOverride:"query"})}get hash(){return null===this._url.fragment||""===this._url.fragment?"":"#"+this._url.fragment}set hash(e){if(""===e){this._url.fragment=null;return}let t="#"===e[0]?e.substring(1):e;this._url.fragment="",r.basicURLParse(t,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},75869:(e,t,a)=>{"use strict";let r=a(82490),i=a(55770),s=a(75483),n=i.implSymbol;function URL(t){if(!this||this[n]||!(this instanceof URL))throw TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");let a=[];for(let e=0;e<arguments.length&&e<2;++e)a[e]=arguments[e];a[0]=r.USVString(a[0]),void 0!==a[1]&&(a[1]=r.USVString(a[1])),e.exports.setup(this,a)}URL.prototype.toJSON=function(){if(!this||!e.exports.is(this))throw TypeError("Illegal invocation");let t=[];for(let e=0;e<arguments.length&&e<0;++e)t[e]=arguments[e];return this[n].toJSON.apply(this[n],t)},Object.defineProperty(URL.prototype,"href",{get(){return this[n].href},set(e){e=r.USVString(e),this[n].href=e},enumerable:!0,configurable:!0}),URL.prototype.toString=function(){if(!this||!e.exports.is(this))throw TypeError("Illegal invocation");return this.href},Object.defineProperty(URL.prototype,"origin",{get(){return this[n].origin},enumerable:!0,configurable:!0}),Object.defineProperty(URL.prototype,"protocol",{get(){return this[n].protocol},set(e){e=r.USVString(e),this[n].protocol=e},enumerable:!0,configurable:!0}),Object.defineProperty(URL.prototype,"username",{get(){return this[n].username},set(e){e=r.USVString(e),this[n].username=e},enumerable:!0,configurable:!0}),Object.defineProperty(URL.prototype,"password",{get(){return this[n].password},set(e){e=r.USVString(e),this[n].password=e},enumerable:!0,configurable:!0}),Object.defineProperty(URL.prototype,"host",{get(){return this[n].host},set(e){e=r.USVString(e),this[n].host=e},enumerable:!0,configurable:!0}),Object.defineProperty(URL.prototype,"hostname",{get(){return this[n].hostname},set(e){e=r.USVString(e),this[n].hostname=e},enumerable:!0,configurable:!0}),Object.defineProperty(URL.prototype,"port",{get(){return this[n].port},set(e){e=r.USVString(e),this[n].port=e},enumerable:!0,configurable:!0}),Object.defineProperty(URL.prototype,"pathname",{get(){return this[n].pathname},set(e){e=r.USVString(e),this[n].pathname=e},enumerable:!0,configurable:!0}),Object.defineProperty(URL.prototype,"search",{get(){return this[n].search},set(e){e=r.USVString(e),this[n].search=e},enumerable:!0,configurable:!0}),Object.defineProperty(URL.prototype,"hash",{get(){return this[n].hash},set(e){e=r.USVString(e),this[n].hash=e},enumerable:!0,configurable:!0}),e.exports={is:e=>!!e&&e[n]instanceof s.implementation,create(e,t){let a=Object.create(URL.prototype);return this.setup(a,e,t),a},setup(e,t,a){a||(a={}),a.wrapper=e,e[n]=new s.implementation(t,a),e[n][i.wrapperSymbol]=e},interface:URL,expose:{Window:{URL:URL},Worker:{URL:URL}}}},49739:(e,t,a)=>{"use strict";t.URL=a(75869).interface,t.serializeURL=a(72596).serializeURL,t.serializeURLOrigin=a(72596).serializeURLOrigin,t.basicURLParse=a(72596).basicURLParse,t.setTheUsername=a(72596).setTheUsername,t.setThePassword=a(72596).setThePassword,t.serializeHost=a(72596).serializeHost,t.serializeInteger=a(72596).serializeInteger,t.parseURL=a(72596).parseURL},72596:(e,t,a)=>{"use strict";let r=a(85477),i=a(77360),s={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},n=Symbol("failure");function countSymbols(e){return r.ucs2.decode(e).length}function at(e,t){let a=e[t];return isNaN(a)?void 0:String.fromCodePoint(a)}function isASCIIDigit(e){return e>=48&&e<=57}function isASCIIAlpha(e){return e>=65&&e<=90||e>=97&&e<=122}function isASCIIHex(e){return isASCIIDigit(e)||e>=65&&e<=70||e>=97&&e<=102}function isSingleDot(e){return"."===e||"%2e"===e.toLowerCase()}function isWindowsDriveLetterString(e){return 2===e.length&&isASCIIAlpha(e.codePointAt(0))&&(":"===e[1]||"|"===e[1])}function isSpecialScheme(e){return void 0!==s[e]}function isSpecial(e){return isSpecialScheme(e.scheme)}function percentEncode(e){let t=e.toString(16).toUpperCase();return 1===t.length&&(t="0"+t),"%"+t}function isC0ControlPercentEncode(e){return e<=31||e>126}let o=new Set([32,34,35,60,62,63,96,123,125]);function isPathPercentEncode(e){return isC0ControlPercentEncode(e)||o.has(e)}let d=new Set([47,58,59,61,64,91,92,93,94,124]);function isUserinfoPercentEncode(e){return isPathPercentEncode(e)||d.has(e)}function percentEncodeChar(e,t){let a=String.fromCodePoint(e);return t(e)?function(e){let t=new Buffer(e),a="";for(let e=0;e<t.length;++e)a+=percentEncode(t[e]);return a}(a):a}function parseHost(e,t){if("["===e[0])return"]"!==e[e.length-1]?n:function(e){let t=[0,0,0,0,0,0,0,0],a=0,i=null,s=0;if(58===(e=r.ucs2.decode(e))[s]){if(58!==e[s+1])return n;s+=2,i=++a}for(;s<e.length;){if(8===a)return n;if(58===e[s]){if(null!==i)return n;++s,i=++a;continue}let r=0,o=0;for(;o<4&&isASCIIHex(e[s]);)r=16*r+parseInt(at(e,s),16),++s,++o;if(46===e[s]){if(0===o||(s-=o,a>6))return n;let r=0;for(;void 0!==e[s];){let i=null;if(r>0){if(46!==e[s]||!(r<4))return n;++s}if(!isASCIIDigit(e[s]))return n;for(;isASCIIDigit(e[s]);){let t=parseInt(at(e,s));if(null===i)i=t;else{if(0===i)return n;i=10*i+t}if(i>255)return n;++s}t[a]=256*t[a]+i,(2==++r||4===r)&&++a}if(4!==r)return n;break}if(58===e[s]){if(void 0===e[++s])return n}else if(void 0!==e[s])return n;t[a]=r,++a}if(null!==i){let e=a-i;for(a=7;0!==a&&e>0;){let r=t[i+e-1];t[i+e-1]=t[a],t[a]=r,--a,--e}}else if(null===i&&8!==a)return n;return t}(e.substring(1,e.length-1));if(!t)return function(e){if(-1!==e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/))return n;let t="",a=r.ucs2.decode(e);for(let e=0;e<a.length;++e)t+=percentEncodeChar(a[e],isC0ControlPercentEncode);return t}(e);let a=function(e){let t=new Buffer(e),a=[];for(let e=0;e<t.length;++e)37!==t[e]?a.push(t[e]):37===t[e]&&isASCIIHex(t[e+1])&&isASCIIHex(t[e+2])?(a.push(parseInt(t.slice(e+1,e+3).toString(),16)),e+=2):a.push(t[e]);return new Buffer(a).toString()}(e),s=i.toASCII(a,!1,i.PROCESSING_OPTIONS.NONTRANSITIONAL,!1);if(null===s||-1!==s.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/))return n;let o=function(e){let t=e.split(".");if(""===t[t.length-1]&&t.length>1&&t.pop(),t.length>4)return e;let a=[];for(let r of t){if(""===r)return e;let t=function(e){let t=10;if(e.length>=2&&"0"===e.charAt(0)&&"x"===e.charAt(1).toLowerCase()?(e=e.substring(2),t=16):e.length>=2&&"0"===e.charAt(0)&&(e=e.substring(1),t=8),""===e)return 0;let a=10===t?/[^0-9]/:16===t?/[^0-9A-Fa-f]/:/[^0-7]/;return a.test(e)?n:parseInt(e,t)}(r);if(t===n)return e;a.push(t)}for(let e=0;e<a.length-1;++e)if(a[e]>255)return n;if(a[a.length-1]>=Math.pow(256,5-a.length))return n;let r=a.pop(),i=0;for(let e of a)r+=e*Math.pow(256,3-i),++i;return r}(s);return"number"==typeof o||o===n?o:s}function serializeHost(e){return"number"==typeof e?function(e){let t="",a=e;for(let e=1;e<=4;++e)t=String(a%256)+t,4!==e&&(t="."+t),a=Math.floor(a/256);return t}(e):e instanceof Array?"["+function(e){let t="",a=function(e){let t=null,a=1,r=null,i=0;for(let s=0;s<e.length;++s)0!==e[s]?(i>a&&(t=r,a=i),r=null,i=0):(null===r&&(r=s),++i);return i>a&&(t=r,a=i),{idx:t,len:a}}(e),r=a.idx,i=!1;for(let a=0;a<=7;++a)if(!i||0!==e[a]){if(i&&(i=!1),r===a){let e=0===a?"::":":";t+=e,i=!0;continue}t+=e[a].toString(16),7!==a&&(t+=":")}return t}(e)+"]":e}function shortenPath(e){var t;let a=e.path;!(0===a.length||"file"===e.scheme&&1===a.length&&(t=a[0],/^[A-Za-z]:$/.test(t)))&&a.pop()}function includesCredentials(e){return""!==e.username||""!==e.password}function URLStateMachine(e,t,a,i,s){if(this.pointer=0,this.input=e,this.base=t||null,this.encodingOverride=a||"utf-8",this.stateOverride=s,this.url=i,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};let e=this.input.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"");e!==this.input&&(this.parseError=!0),this.input=e}let o=this.input.replace(/\u0009|\u000A|\u000D/g,"");for(o!==this.input&&(this.parseError=!0),this.input=o,this.state=s||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=r.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){let e=this.input[this.pointer],t=isNaN(e)?void 0:String.fromCodePoint(e),a=this["parse "+this.state](e,t);if(a){if(a===n){this.failure=!0;break}}else break}}URLStateMachine.prototype["parse scheme start"]=function(e,t){if(isASCIIAlpha(e))this.buffer+=t.toLowerCase(),this.state="scheme";else{if(this.stateOverride)return this.parseError=!0,n;this.state="no scheme",--this.pointer}return!0},URLStateMachine.prototype["parse scheme"]=function(e,t){if(isASCIIAlpha(e)||isASCIIDigit(e)||43===e||45===e||46===e)this.buffer+=t.toLowerCase();else if(58===e){if(this.stateOverride&&(isSpecial(this.url)&&!isSpecialScheme(this.buffer)||!isSpecial(this.url)&&isSpecialScheme(this.buffer)||(includesCredentials(this.url)||null!==this.url.port)&&"file"===this.buffer||"file"===this.url.scheme&&(""===this.url.host||null===this.url.host))||(this.url.scheme=this.buffer,this.buffer="",this.stateOverride))return!1;"file"===this.url.scheme?((47!==this.input[this.pointer+1]||47!==this.input[this.pointer+2])&&(this.parseError=!0),this.state="file"):isSpecial(this.url)&&null!==this.base&&this.base.scheme===this.url.scheme?this.state="special relative or authority":isSpecial(this.url)?this.state="special authority slashes":47===this.input[this.pointer+1]?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else{if(this.stateOverride)return this.parseError=!0,n;this.buffer="",this.state="no scheme",this.pointer=-1}return!0},URLStateMachine.prototype["parse no scheme"]=function(e){return null===this.base||this.base.cannotBeABaseURL&&35!==e?n:(this.base.cannotBeABaseURL&&35===e?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):("file"===this.base.scheme?this.state="file":this.state="relative",--this.pointer),!0)},URLStateMachine.prototype["parse special relative or authority"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0},URLStateMachine.prototype["parse path or authority"]=function(e){return 47===e?this.state="authority":(this.state="path",--this.pointer),!0},URLStateMachine.prototype["parse relative"]=function(e){return this.url.scheme=this.base.scheme,isNaN(e)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):47===e?this.state="relative slash":63===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):isSpecial(this.url)&&92===e?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0},URLStateMachine.prototype["parse relative slash"]=function(e){return isSpecial(this.url)&&(47===e||92===e)?(92===e&&(this.parseError=!0),this.state="special authority ignore slashes"):47===e?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer),!0},URLStateMachine.prototype["parse special authority slashes"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0},URLStateMachine.prototype["parse special authority ignore slashes"]=function(e){return 47!==e&&92!==e?(this.state="authority",--this.pointer):this.parseError=!0,!0},URLStateMachine.prototype["parse authority"]=function(e,t){if(64===e){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;let e=countSymbols(this.buffer);for(let t=0;t<e;++t){let e=this.buffer.codePointAt(t);if(58===e&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}let a=percentEncodeChar(e,isUserinfoPercentEncode);this.passwordTokenSeenFlag?this.url.password+=a:this.url.username+=a}this.buffer=""}else if(isNaN(e)||47===e||63===e||35===e||isSpecial(this.url)&&92===e){if(this.atFlag&&""===this.buffer)return this.parseError=!0,n;this.pointer-=countSymbols(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=t;return!0},URLStateMachine.prototype["parse hostname"]=URLStateMachine.prototype["parse host"]=function(e,t){if(this.stateOverride&&"file"===this.url.scheme)--this.pointer,this.state="file host";else if(58!==e||this.arrFlag){if(isNaN(e)||47===e||63===e||35===e||isSpecial(this.url)&&92===e){if(--this.pointer,isSpecial(this.url)&&""===this.buffer)return this.parseError=!0,n;if(this.stateOverride&&""===this.buffer&&(includesCredentials(this.url)||null!==this.url.port))return this.parseError=!0,!1;let e=parseHost(this.buffer,isSpecial(this.url));if(e===n)return n;if(this.url.host=e,this.buffer="",this.state="path start",this.stateOverride)return!1}else 91===e?this.arrFlag=!0:93===e&&(this.arrFlag=!1),this.buffer+=t}else{if(""===this.buffer)return this.parseError=!0,n;let e=parseHost(this.buffer,isSpecial(this.url));if(e===n)return n;if(this.url.host=e,this.buffer="",this.state="port","hostname"===this.stateOverride)return!1}return!0},URLStateMachine.prototype["parse port"]=function(e,t){if(isASCIIDigit(e))this.buffer+=t;else{if(!(isNaN(e)||47===e||63===e||35===e||isSpecial(this.url)&&92===e)&&!this.stateOverride)return this.parseError=!0,n;if(""!==this.buffer){let e=parseInt(this.buffer);if(e>65535)return this.parseError=!0,n;this.url.port=e===s[this.url.scheme]?null:e,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}return!0};let p=new Set([47,92,63,35]);URLStateMachine.prototype["parse file"]=function(e){if(this.url.scheme="file",47===e||92===e)92===e&&(this.parseError=!0),this.state="file slash";else if(null!==this.base&&"file"===this.base.scheme){if(isNaN(e))this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query;else if(63===e)this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query";else if(35===e)this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment";else{var t;this.input.length-this.pointer-1!=0&&(t=this.input[this.pointer+1],isASCIIAlpha(e)&&(58===t||124===t))&&(!(this.input.length-this.pointer-1>=2)||p.has(this.input[this.pointer+2]))?this.parseError=!0:(this.url.host=this.base.host,this.url.path=this.base.path.slice(),shortenPath(this.url)),this.state="path",--this.pointer}}else this.state="path",--this.pointer;return!0},URLStateMachine.prototype["parse file slash"]=function(e){if(47===e||92===e)92===e&&(this.parseError=!0),this.state="file host";else{if(null!==this.base&&"file"===this.base.scheme){var t;2===(t=this.base.path[0]).length&&isASCIIAlpha(t.codePointAt(0))&&":"===t[1]?this.url.path.push(this.base.path[0]):this.url.host=this.base.host}this.state="path",--this.pointer}return!0},URLStateMachine.prototype["parse file host"]=function(e,t){if(isNaN(e)||47===e||92===e||63===e||35===e){if(--this.pointer,!this.stateOverride&&isWindowsDriveLetterString(this.buffer))this.parseError=!0,this.state="path";else if(""===this.buffer){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let e=parseHost(this.buffer,isSpecial(this.url));if(e===n)return n;if("localhost"===e&&(e=""),this.url.host=e,this.stateOverride)return!1;this.buffer="",this.state="path start"}}else this.buffer+=t;return!0},URLStateMachine.prototype["parse path start"]=function(e){return isSpecial(this.url)?(92===e&&(this.parseError=!0),this.state="path",47!==e&&92!==e&&--this.pointer):this.stateOverride||63!==e?this.stateOverride||35!==e?void 0!==e&&(this.state="path",47!==e&&--this.pointer):(this.url.fragment="",this.state="fragment"):(this.url.query="",this.state="query"),!0},URLStateMachine.prototype["parse path"]=function(e){if(isNaN(e)||47===e||isSpecial(this.url)&&92===e||!this.stateOverride&&(63===e||35===e)){var t;if((isSpecial(this.url)&&92===e&&(this.parseError=!0),".."===(t=(t=this.buffer).toLowerCase())||"%2e."===t||".%2e"===t||"%2e%2e"===t)?(shortenPath(this.url),47===e||isSpecial(this.url)&&92===e||this.url.path.push("")):isSingleDot(this.buffer)&&47!==e&&!(isSpecial(this.url)&&92===e)?this.url.path.push(""):isSingleDot(this.buffer)||("file"===this.url.scheme&&0===this.url.path.length&&isWindowsDriveLetterString(this.buffer)&&(""!==this.url.host&&null!==this.url.host&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)),this.buffer="","file"===this.url.scheme&&(void 0===e||63===e||35===e))for(;this.url.path.length>1&&""===this.url.path[0];)this.parseError=!0,this.url.path.shift();63===e&&(this.url.query="",this.state="query"),35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||isASCIIHex(this.input[this.pointer+1])&&isASCIIHex(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=percentEncodeChar(e,isPathPercentEncode);return!0},URLStateMachine.prototype["parse cannot-be-a-base-URL path"]=function(e){return 63===e?(this.url.query="",this.state="query"):35===e?(this.url.fragment="",this.state="fragment"):(isNaN(e)||37===e||(this.parseError=!0),37!==e||isASCIIHex(this.input[this.pointer+1])&&isASCIIHex(this.input[this.pointer+2])||(this.parseError=!0),isNaN(e)||(this.url.path[0]=this.url.path[0]+percentEncodeChar(e,isC0ControlPercentEncode))),!0},URLStateMachine.prototype["parse query"]=function(e,t){if(isNaN(e)||!this.stateOverride&&35===e){isSpecial(this.url)&&"ws"!==this.url.scheme&&"wss"!==this.url.scheme||(this.encodingOverride="utf-8");let t=new Buffer(this.buffer);for(let e=0;e<t.length;++e)t[e]<33||t[e]>126||34===t[e]||35===t[e]||60===t[e]||62===t[e]?this.url.query+=percentEncode(t[e]):this.url.query+=String.fromCodePoint(t[e]);this.buffer="",35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||isASCIIHex(this.input[this.pointer+1])&&isASCIIHex(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=t;return!0},URLStateMachine.prototype["parse fragment"]=function(e){return isNaN(e)||(0===e?this.parseError=!0:(37!==e||isASCIIHex(this.input[this.pointer+1])&&isASCIIHex(this.input[this.pointer+2])||(this.parseError=!0),this.url.fragment+=percentEncodeChar(e,isC0ControlPercentEncode))),!0},e.exports.serializeURL=function(e,t){let a=e.scheme+":";if(null!==e.host?(a+="//",(""!==e.username||""!==e.password)&&(a+=e.username,""!==e.password&&(a+=":"+e.password),a+="@"),a+=serializeHost(e.host),null!==e.port&&(a+=":"+e.port)):null===e.host&&"file"===e.scheme&&(a+="//"),e.cannotBeABaseURL)a+=e.path[0];else for(let t of e.path)a+="/"+t;return null!==e.query&&(a+="?"+e.query),t||null===e.fragment||(a+="#"+e.fragment),a},e.exports.serializeURLOrigin=function(t){switch(t.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(t.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":var a;let r;return r=(a={scheme:t.scheme,host:t.host,port:t.port}).scheme+"://"+serializeHost(a.host),null!==a.port&&(r+=":"+a.port),r;case"file":return"file://";default:return"null"}},e.exports.basicURLParse=function(e,t){void 0===t&&(t={});let a=new URLStateMachine(e,t.baseURL,t.encodingOverride,t.url,t.stateOverride);return a.failure?"failure":a.url},e.exports.setTheUsername=function(e,t){e.username="";let a=r.ucs2.decode(t);for(let t=0;t<a.length;++t)e.username+=percentEncodeChar(a[t],isUserinfoPercentEncode)},e.exports.setThePassword=function(e,t){e.password="";let a=r.ucs2.decode(t);for(let t=0;t<a.length;++t)e.password+=percentEncodeChar(a[t],isUserinfoPercentEncode)},e.exports.serializeHost=serializeHost,e.exports.cannotHaveAUsernamePasswordPort=function(e){return null===e.host||""===e.host||e.cannotBeABaseURL||"file"===e.scheme},e.exports.serializeInteger=function(e){return String(e)},e.exports.parseURL=function(t,a){return void 0===a&&(a={}),e.exports.basicURLParse(t,{baseURL:a.baseURL,encodingOverride:a.encodingOverride})}},55770:e=>{"use strict";e.exports.mixin=function(e,t){let a=Object.getOwnPropertyNames(t);for(let r=0;r<a.length;++r)Object.defineProperty(e,a[r],Object.getOwnPropertyDescriptor(t,a[r]))},e.exports.wrapperSymbol=Symbol("wrapper"),e.exports.implSymbol=Symbol("impl"),e.exports.wrapperForImpl=function(t){return t[e.exports.wrapperSymbol]},e.exports.implForWrapper=function(t){return t[e.exports.implSymbol]}},26864:(e,t,a)=>{"use strict";let r=a(39106);r.createWebSocketStream=a(81114),r.Server=a(90096),r.Receiver=a(40623),r.Sender=a(76996),r.WebSocket=r,r.WebSocketServer=r.Server,e.exports=r},78049:(e,t,a)=>{"use strict";let{EMPTY_BUFFER:r}=a(85427),i=Buffer[Symbol.species];function _mask(e,t,a,r,i){for(let s=0;s<i;s++)a[r+s]=e[s]^t[3&s]}function _unmask(e,t){for(let a=0;a<e.length;a++)e[a]^=t[3&a]}function toBuffer(e){let t;return(toBuffer.readOnly=!0,Buffer.isBuffer(e))?e:(e instanceof ArrayBuffer?t=new i(e):ArrayBuffer.isView(e)?t=new i(e.buffer,e.byteOffset,e.byteLength):(t=Buffer.from(e),toBuffer.readOnly=!1),t)}if(e.exports={concat:function(e,t){if(0===e.length)return r;if(1===e.length)return e[0];let a=Buffer.allocUnsafe(t),s=0;for(let t=0;t<e.length;t++){let r=e[t];a.set(r,s),s+=r.length}return s<t?new i(a.buffer,a.byteOffset,s):a},mask:_mask,toArrayBuffer:function(e){return e.length===e.buffer.byteLength?e.buffer:e.buffer.slice(e.byteOffset,e.byteOffset+e.length)},toBuffer,unmask:_unmask},!process.env.WS_NO_BUFFER_UTIL)try{let t=a(Object(function(){var e=Error("Cannot find module 'bufferutil'");throw e.code="MODULE_NOT_FOUND",e}()));e.exports.mask=function(e,a,r,i,s){s<48?_mask(e,a,r,i,s):t.mask(e,a,r,i,s)},e.exports.unmask=function(e,a){e.length<32?_unmask(e,a):t.unmask(e,a)}}catch(e){}},85427:e=>{"use strict";e.exports={BINARY_TYPES:["nodebuffer","arraybuffer","fragments"],EMPTY_BUFFER:Buffer.alloc(0),GUID:"258EAFA5-E914-47DA-95CA-C5AB0DC85B11",kForOnEventAttribute:Symbol("kIsForOnEventAttribute"),kListener:Symbol("kListener"),kStatusCode:Symbol("status-code"),kWebSocket:Symbol("websocket"),NOOP:()=>{}}},45526:(e,t,a)=>{"use strict";let{kForOnEventAttribute:r,kListener:i}=a(85427),s=Symbol("kCode"),n=Symbol("kData"),o=Symbol("kError"),d=Symbol("kMessage"),p=Symbol("kReason"),l=Symbol("kTarget"),m=Symbol("kType"),c=Symbol("kWasClean");let Event=class Event{constructor(e){this[l]=null,this[m]=e}get target(){return this[l]}get type(){return this[m]}};Object.defineProperty(Event.prototype,"target",{enumerable:!0}),Object.defineProperty(Event.prototype,"type",{enumerable:!0});let CloseEvent=class CloseEvent extends Event{constructor(e,t={}){super(e),this[s]=void 0===t.code?0:t.code,this[p]=void 0===t.reason?"":t.reason,this[c]=void 0!==t.wasClean&&t.wasClean}get code(){return this[s]}get reason(){return this[p]}get wasClean(){return this[c]}};Object.defineProperty(CloseEvent.prototype,"code",{enumerable:!0}),Object.defineProperty(CloseEvent.prototype,"reason",{enumerable:!0}),Object.defineProperty(CloseEvent.prototype,"wasClean",{enumerable:!0});let ErrorEvent=class ErrorEvent extends Event{constructor(e,t={}){super(e),this[o]=void 0===t.error?null:t.error,this[d]=void 0===t.message?"":t.message}get error(){return this[o]}get message(){return this[d]}};Object.defineProperty(ErrorEvent.prototype,"error",{enumerable:!0}),Object.defineProperty(ErrorEvent.prototype,"message",{enumerable:!0});let MessageEvent=class MessageEvent extends Event{constructor(e,t={}){super(e),this[n]=void 0===t.data?null:t.data}get data(){return this[n]}};function callListener(e,t,a){"object"==typeof e&&e.handleEvent?e.handleEvent.call(e,a):e.call(t,a)}Object.defineProperty(MessageEvent.prototype,"data",{enumerable:!0}),e.exports={CloseEvent,ErrorEvent,Event,EventTarget:{addEventListener(e,t,a={}){let s;for(let s of this.listeners(e))if(!a[r]&&s[i]===t&&!s[r])return;if("message"===e)s=function(e,a){let r=new MessageEvent("message",{data:a?e:e.toString()});r[l]=this,callListener(t,this,r)};else if("close"===e)s=function(e,a){let r=new CloseEvent("close",{code:e,reason:a.toString(),wasClean:this._closeFrameReceived&&this._closeFrameSent});r[l]=this,callListener(t,this,r)};else if("error"===e)s=function(e){let a=new ErrorEvent("error",{error:e,message:e.message});a[l]=this,callListener(t,this,a)};else{if("open"!==e)return;s=function(){let e=new Event("open");e[l]=this,callListener(t,this,e)}}s[r]=!!a[r],s[i]=t,a.once?this.once(e,s):this.on(e,s)},removeEventListener(e,t){for(let a of this.listeners(e))if(a[i]===t&&!a[r]){this.removeListener(e,a);break}}},MessageEvent}},23841:(e,t,a)=>{"use strict";let{tokenChars:r}=a(85265);function push(e,t,a){void 0===e[t]?e[t]=[a]:e[t].push(a)}e.exports={format:function(e){return Object.keys(e).map(t=>{let a=e[t];return Array.isArray(a)||(a=[a]),a.map(e=>[t].concat(Object.keys(e).map(t=>{let a=e[t];return Array.isArray(a)||(a=[a]),a.map(e=>!0===e?t:`${t}=${e}`).join("; ")})).join("; ")).join(", ")}).join(", ")},parse:function(e){let t,a;let i=Object.create(null),s=Object.create(null),n=!1,o=!1,d=!1,p=-1,l=-1,m=-1,c=0;for(;c<e.length;c++)if(l=e.charCodeAt(c),void 0===t){if(-1===m&&1===r[l])-1===p&&(p=c);else if(0!==c&&(32===l||9===l))-1===m&&-1!==p&&(m=c);else if(59===l||44===l){if(-1===p)throw SyntaxError(`Unexpected character at index ${c}`);-1===m&&(m=c);let a=e.slice(p,m);44===l?(push(i,a,s),s=Object.create(null)):t=a,p=m=-1}else throw SyntaxError(`Unexpected character at index ${c}`)}else if(void 0===a){if(-1===m&&1===r[l])-1===p&&(p=c);else if(32===l||9===l)-1===m&&-1!==p&&(m=c);else if(59===l||44===l){if(-1===p)throw SyntaxError(`Unexpected character at index ${c}`);-1===m&&(m=c),push(s,e.slice(p,m),!0),44===l&&(push(i,t,s),s=Object.create(null),t=void 0),p=m=-1}else if(61===l&&-1!==p&&-1===m)a=e.slice(p,c),p=m=-1;else throw SyntaxError(`Unexpected character at index ${c}`)}else if(o){if(1!==r[l])throw SyntaxError(`Unexpected character at index ${c}`);-1===p?p=c:n||(n=!0),o=!1}else if(d){if(1===r[l])-1===p&&(p=c);else if(34===l&&-1!==p)d=!1,m=c;else if(92===l)o=!0;else throw SyntaxError(`Unexpected character at index ${c}`)}else if(34===l&&61===e.charCodeAt(c-1))d=!0;else if(-1===m&&1===r[l])-1===p&&(p=c);else if(-1!==p&&(32===l||9===l))-1===m&&(m=c);else if(59===l||44===l){if(-1===p)throw SyntaxError(`Unexpected character at index ${c}`);-1===m&&(m=c);let r=e.slice(p,m);n&&(r=r.replace(/\\/g,""),n=!1),push(s,a,r),44===l&&(push(i,t,s),s=Object.create(null),t=void 0),a=void 0,p=m=-1}else throw SyntaxError(`Unexpected character at index ${c}`);if(-1===p||d||32===l||9===l)throw SyntaxError("Unexpected end of input");-1===m&&(m=c);let u=e.slice(p,m);return void 0===t?push(i,u,s):(void 0===a?push(s,u,!0):n?push(s,a,u.replace(/\\/g,"")):push(s,a,u),push(i,t,s)),i}}},18530:e=>{"use strict";let t=Symbol("kDone"),a=Symbol("kRun");e.exports=class{constructor(e){this[t]=()=>{this.pending--,this[a]()},this.concurrency=e||1/0,this.jobs=[],this.pending=0}add(e){this.jobs.push(e),this[a]()}[a](){if(this.pending!==this.concurrency&&this.jobs.length){let e=this.jobs.shift();this.pending++,e(this[t])}}}},49794:(e,t,a)=>{"use strict";let r;let i=a(59796),s=a(78049),n=a(18530),{kStatusCode:o}=a(85427),d=Buffer[Symbol.species],p=Buffer.from([0,0,255,255]),l=Symbol("permessage-deflate"),m=Symbol("total-length"),c=Symbol("callback"),u=Symbol("buffers"),f=Symbol("error");function deflateOnData(e){this[u].push(e),this[m]+=e.length}function inflateOnData(e){if(this[m]+=e.length,this[l]._maxPayload<1||this[m]<=this[l]._maxPayload){this[u].push(e);return}this[f]=RangeError("Max payload size exceeded"),this[f].code="WS_ERR_UNSUPPORTED_MESSAGE_LENGTH",this[f][o]=1009,this.removeListener("data",inflateOnData),this.reset()}function inflateOnError(e){this[l]._inflate=null,e[o]=1007,this[c](e)}e.exports=class{constructor(e,t,a){if(this._maxPayload=0|a,this._options=e||{},this._threshold=void 0!==this._options.threshold?this._options.threshold:1024,this._isServer=!!t,this._deflate=null,this._inflate=null,this.params=null,!r){let e=void 0!==this._options.concurrencyLimit?this._options.concurrencyLimit:10;r=new n(e)}}static get extensionName(){return"permessage-deflate"}offer(){let e={};return this._options.serverNoContextTakeover&&(e.server_no_context_takeover=!0),this._options.clientNoContextTakeover&&(e.client_no_context_takeover=!0),this._options.serverMaxWindowBits&&(e.server_max_window_bits=this._options.serverMaxWindowBits),this._options.clientMaxWindowBits?e.client_max_window_bits=this._options.clientMaxWindowBits:null==this._options.clientMaxWindowBits&&(e.client_max_window_bits=!0),e}accept(e){return e=this.normalizeParams(e),this.params=this._isServer?this.acceptAsServer(e):this.acceptAsClient(e),this.params}cleanup(){if(this._inflate&&(this._inflate.close(),this._inflate=null),this._deflate){let e=this._deflate[c];this._deflate.close(),this._deflate=null,e&&e(Error("The deflate stream was closed while data was being processed"))}}acceptAsServer(e){let t=this._options,a=e.find(e=>(!1!==t.serverNoContextTakeover||!e.server_no_context_takeover)&&(!e.server_max_window_bits||!1!==t.serverMaxWindowBits&&("number"!=typeof t.serverMaxWindowBits||!(t.serverMaxWindowBits>e.server_max_window_bits)))&&("number"!=typeof t.clientMaxWindowBits||!!e.client_max_window_bits));if(!a)throw Error("None of the extension offers can be accepted");return t.serverNoContextTakeover&&(a.server_no_context_takeover=!0),t.clientNoContextTakeover&&(a.client_no_context_takeover=!0),"number"==typeof t.serverMaxWindowBits&&(a.server_max_window_bits=t.serverMaxWindowBits),"number"==typeof t.clientMaxWindowBits?a.client_max_window_bits=t.clientMaxWindowBits:(!0===a.client_max_window_bits||!1===t.clientMaxWindowBits)&&delete a.client_max_window_bits,a}acceptAsClient(e){let t=e[0];if(!1===this._options.clientNoContextTakeover&&t.client_no_context_takeover)throw Error('Unexpected parameter "client_no_context_takeover"');if(t.client_max_window_bits){if(!1===this._options.clientMaxWindowBits||"number"==typeof this._options.clientMaxWindowBits&&t.client_max_window_bits>this._options.clientMaxWindowBits)throw Error('Unexpected or invalid parameter "client_max_window_bits"')}else"number"==typeof this._options.clientMaxWindowBits&&(t.client_max_window_bits=this._options.clientMaxWindowBits);return t}normalizeParams(e){return e.forEach(e=>{Object.keys(e).forEach(t=>{let a=e[t];if(a.length>1)throw Error(`Parameter "${t}" must have only a single value`);if(a=a[0],"client_max_window_bits"===t){if(!0!==a){let e=+a;if(!Number.isInteger(e)||e<8||e>15)throw TypeError(`Invalid value for parameter "${t}": ${a}`);a=e}else if(!this._isServer)throw TypeError(`Invalid value for parameter "${t}": ${a}`)}else if("server_max_window_bits"===t){let e=+a;if(!Number.isInteger(e)||e<8||e>15)throw TypeError(`Invalid value for parameter "${t}": ${a}`);a=e}else if("client_no_context_takeover"===t||"server_no_context_takeover"===t){if(!0!==a)throw TypeError(`Invalid value for parameter "${t}": ${a}`)}else throw Error(`Unknown parameter "${t}"`);e[t]=a})}),e}decompress(e,t,a){r.add(r=>{this._decompress(e,t,(e,t)=>{r(),a(e,t)})})}compress(e,t,a){r.add(r=>{this._compress(e,t,(e,t)=>{r(),a(e,t)})})}_decompress(e,t,a){let r=this._isServer?"client":"server";if(!this._inflate){let e=`${r}_max_window_bits`,t="number"!=typeof this.params[e]?i.Z_DEFAULT_WINDOWBITS:this.params[e];this._inflate=i.createInflateRaw({...this._options.zlibInflateOptions,windowBits:t}),this._inflate[l]=this,this._inflate[m]=0,this._inflate[u]=[],this._inflate.on("error",inflateOnError),this._inflate.on("data",inflateOnData)}this._inflate[c]=a,this._inflate.write(e),t&&this._inflate.write(p),this._inflate.flush(()=>{let e=this._inflate[f];if(e){this._inflate.close(),this._inflate=null,a(e);return}let i=s.concat(this._inflate[u],this._inflate[m]);this._inflate._readableState.endEmitted?(this._inflate.close(),this._inflate=null):(this._inflate[m]=0,this._inflate[u]=[],t&&this.params[`${r}_no_context_takeover`]&&this._inflate.reset()),a(null,i)})}_compress(e,t,a){let r=this._isServer?"server":"client";if(!this._deflate){let e=`${r}_max_window_bits`,t="number"!=typeof this.params[e]?i.Z_DEFAULT_WINDOWBITS:this.params[e];this._deflate=i.createDeflateRaw({...this._options.zlibDeflateOptions,windowBits:t}),this._deflate[m]=0,this._deflate[u]=[],this._deflate.on("data",deflateOnData)}this._deflate[c]=a,this._deflate.write(e),this._deflate.flush(i.Z_SYNC_FLUSH,()=>{if(!this._deflate)return;let e=s.concat(this._deflate[u],this._deflate[m]);t&&(e=new d(e.buffer,e.byteOffset,e.length-4)),this._deflate[c]=null,this._deflate[m]=0,this._deflate[u]=[],t&&this.params[`${r}_no_context_takeover`]&&this._deflate.reset(),a(null,e)})}}},40623:(e,t,a)=>{"use strict";let{Writable:r}=a(12781),i=a(49794),{BINARY_TYPES:s,EMPTY_BUFFER:n,kStatusCode:o,kWebSocket:d}=a(85427),{concat:p,toArrayBuffer:l,unmask:m}=a(78049),{isValidStatusCode:c,isValidUTF8:u}=a(85265),f=Buffer[Symbol.species],v=Promise.resolve(),g="function"==typeof queueMicrotask?queueMicrotask:function(e){v.then(e).catch(throwErrorNextTick)};function throwError(e){throw e}function throwErrorNextTick(e){process.nextTick(throwError,e)}e.exports=class extends r{constructor(e={}){super(),this._allowSynchronousEvents=!!e.allowSynchronousEvents,this._binaryType=e.binaryType||s[0],this._extensions=e.extensions||{},this._isServer=!!e.isServer,this._maxPayload=0|e.maxPayload,this._skipUTF8Validation=!!e.skipUTF8Validation,this[d]=void 0,this._bufferedBytes=0,this._buffers=[],this._compressed=!1,this._payloadLength=0,this._mask=void 0,this._fragmented=0,this._masked=!1,this._fin=!1,this._opcode=0,this._totalPayloadLength=0,this._messageLength=0,this._fragments=[],this._errored=!1,this._loop=!1,this._state=0}_write(e,t,a){if(8===this._opcode&&0==this._state)return a();this._bufferedBytes+=e.length,this._buffers.push(e),this.startLoop(a)}consume(e){if(this._bufferedBytes-=e,e===this._buffers[0].length)return this._buffers.shift();if(e<this._buffers[0].length){let t=this._buffers[0];return this._buffers[0]=new f(t.buffer,t.byteOffset+e,t.length-e),new f(t.buffer,t.byteOffset,e)}let t=Buffer.allocUnsafe(e);do{let a=this._buffers[0],r=t.length-e;e>=a.length?t.set(this._buffers.shift(),r):(t.set(new Uint8Array(a.buffer,a.byteOffset,e),r),this._buffers[0]=new f(a.buffer,a.byteOffset+e,a.length-e)),e-=a.length}while(e>0);return t}startLoop(e){this._loop=!0;do switch(this._state){case 0:this.getInfo(e);break;case 1:this.getPayloadLength16(e);break;case 2:this.getPayloadLength64(e);break;case 3:this.getMask();break;case 4:this.getData(e);break;case 5:case 6:this._loop=!1;return}while(this._loop);this._errored||e()}getInfo(e){if(this._bufferedBytes<2){this._loop=!1;return}let t=this.consume(2);if((48&t[0])!=0){let t=this.createError(RangeError,"RSV2 and RSV3 must be clear",!0,1002,"WS_ERR_UNEXPECTED_RSV_2_3");e(t);return}let a=(64&t[0])==64;if(a&&!this._extensions[i.extensionName]){let t=this.createError(RangeError,"RSV1 must be clear",!0,1002,"WS_ERR_UNEXPECTED_RSV_1");e(t);return}if(this._fin=(128&t[0])==128,this._opcode=15&t[0],this._payloadLength=127&t[1],0===this._opcode){if(a){let t=this.createError(RangeError,"RSV1 must be clear",!0,1002,"WS_ERR_UNEXPECTED_RSV_1");e(t);return}if(!this._fragmented){let t=this.createError(RangeError,"invalid opcode 0",!0,1002,"WS_ERR_INVALID_OPCODE");e(t);return}this._opcode=this._fragmented}else if(1===this._opcode||2===this._opcode){if(this._fragmented){let t=this.createError(RangeError,`invalid opcode ${this._opcode}`,!0,1002,"WS_ERR_INVALID_OPCODE");e(t);return}this._compressed=a}else if(this._opcode>7&&this._opcode<11){if(!this._fin){let t=this.createError(RangeError,"FIN must be set",!0,1002,"WS_ERR_EXPECTED_FIN");e(t);return}if(a){let t=this.createError(RangeError,"RSV1 must be clear",!0,1002,"WS_ERR_UNEXPECTED_RSV_1");e(t);return}if(this._payloadLength>125||8===this._opcode&&1===this._payloadLength){let t=this.createError(RangeError,`invalid payload length ${this._payloadLength}`,!0,1002,"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH");e(t);return}}else{let t=this.createError(RangeError,`invalid opcode ${this._opcode}`,!0,1002,"WS_ERR_INVALID_OPCODE");e(t);return}if(this._fin||this._fragmented||(this._fragmented=this._opcode),this._masked=(128&t[1])==128,this._isServer){if(!this._masked){let t=this.createError(RangeError,"MASK must be set",!0,1002,"WS_ERR_EXPECTED_MASK");e(t);return}}else if(this._masked){let t=this.createError(RangeError,"MASK must be clear",!0,1002,"WS_ERR_UNEXPECTED_MASK");e(t);return}126===this._payloadLength?this._state=1:127===this._payloadLength?this._state=2:this.haveLength(e)}getPayloadLength16(e){if(this._bufferedBytes<2){this._loop=!1;return}this._payloadLength=this.consume(2).readUInt16BE(0),this.haveLength(e)}getPayloadLength64(e){if(this._bufferedBytes<8){this._loop=!1;return}let t=this.consume(8),a=t.readUInt32BE(0);if(a>2097151){let t=this.createError(RangeError,"Unsupported WebSocket frame: payload length > 2^53 - 1",!1,1009,"WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH");e(t);return}this._payloadLength=4294967296*a+t.readUInt32BE(4),this.haveLength(e)}haveLength(e){if(this._payloadLength&&this._opcode<8&&(this._totalPayloadLength+=this._payloadLength,this._totalPayloadLength>this._maxPayload&&this._maxPayload>0)){let t=this.createError(RangeError,"Max payload size exceeded",!1,1009,"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH");e(t);return}this._masked?this._state=3:this._state=4}getMask(){if(this._bufferedBytes<4){this._loop=!1;return}this._mask=this.consume(4),this._state=4}getData(e){let t=n;if(this._payloadLength){if(this._bufferedBytes<this._payloadLength){this._loop=!1;return}t=this.consume(this._payloadLength),this._masked&&(this._mask[0]|this._mask[1]|this._mask[2]|this._mask[3])!=0&&m(t,this._mask)}if(this._opcode>7){this.controlMessage(t,e);return}if(this._compressed){this._state=5,this.decompress(t,e);return}t.length&&(this._messageLength=this._totalPayloadLength,this._fragments.push(t)),this.dataMessage(e)}decompress(e,t){let a=this._extensions[i.extensionName];a.decompress(e,this._fin,(e,a)=>{if(e)return t(e);if(a.length){if(this._messageLength+=a.length,this._messageLength>this._maxPayload&&this._maxPayload>0){let e=this.createError(RangeError,"Max payload size exceeded",!1,1009,"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH");t(e);return}this._fragments.push(a)}this.dataMessage(t),0===this._state&&this.startLoop(t)})}dataMessage(e){if(!this._fin){this._state=0;return}let t=this._messageLength,a=this._fragments;if(this._totalPayloadLength=0,this._messageLength=0,this._fragmented=0,this._fragments=[],2===this._opcode){let r;r="nodebuffer"===this._binaryType?p(a,t):"arraybuffer"===this._binaryType?l(p(a,t)):a,5===this._state||this._allowSynchronousEvents?(this.emit("message",r,!0),this._state=0):(this._state=6,g(()=>{this.emit("message",r,!0),this._state=0,this.startLoop(e)}))}else{let r=p(a,t);if(!this._skipUTF8Validation&&!u(r)){let t=this.createError(Error,"invalid UTF-8 sequence",!0,1007,"WS_ERR_INVALID_UTF8");e(t);return}5===this._state||this._allowSynchronousEvents?(this.emit("message",r,!1),this._state=0):(this._state=6,g(()=>{this.emit("message",r,!1),this._state=0,this.startLoop(e)}))}}controlMessage(e,t){if(8===this._opcode){if(0===e.length)this._loop=!1,this.emit("conclude",1005,n),this.end();else{let a=e.readUInt16BE(0);if(!c(a)){let e=this.createError(RangeError,`invalid status code ${a}`,!0,1002,"WS_ERR_INVALID_CLOSE_CODE");t(e);return}let r=new f(e.buffer,e.byteOffset+2,e.length-2);if(!this._skipUTF8Validation&&!u(r)){let e=this.createError(Error,"invalid UTF-8 sequence",!0,1007,"WS_ERR_INVALID_UTF8");t(e);return}this._loop=!1,this.emit("conclude",a,r),this.end()}this._state=0;return}this._allowSynchronousEvents?(this.emit(9===this._opcode?"ping":"pong",e),this._state=0):(this._state=6,g(()=>{this.emit(9===this._opcode?"ping":"pong",e),this._state=0,this.startLoop(t)}))}createError(e,t,a,r,i){this._loop=!1,this._errored=!0;let s=new e(a?`Invalid WebSocket frame: ${t}`:t);return Error.captureStackTrace(s,this.createError),s.code=i,s[o]=r,s}}},76996:(e,t,a)=>{"use strict";let{Duplex:r}=a(12781),{randomFillSync:i}=a(6113),s=a(49794),{EMPTY_BUFFER:n}=a(85427),{isValidStatusCode:o}=a(85265),{mask:d,toBuffer:p}=a(78049),l=Symbol("kByteLength"),m=Buffer.alloc(4);let Sender=class Sender{constructor(e,t,a){this._extensions=t||{},a&&(this._generateMask=a,this._maskBuffer=Buffer.alloc(4)),this._socket=e,this._firstFragment=!0,this._compress=!1,this._bufferedBytes=0,this._deflating=!1,this._queue=[]}static frame(e,t){let a,r;let s=!1,n=2,o=!1;t.mask&&(a=t.maskBuffer||m,t.generateMask?t.generateMask(a):i(a,0,4),o=(a[0]|a[1]|a[2]|a[3])==0,n=6),"string"==typeof e?r=(!t.mask||o)&&void 0!==t[l]?t[l]:(e=Buffer.from(e)).length:(r=e.length,s=t.mask&&t.readOnly&&!o);let p=r;r>=65536?(n+=8,p=127):r>125&&(n+=2,p=126);let c=Buffer.allocUnsafe(s?r+n:n);return(c[0]=t.fin?128|t.opcode:t.opcode,t.rsv1&&(c[0]|=64),c[1]=p,126===p?c.writeUInt16BE(r,2):127===p&&(c[2]=c[3]=0,c.writeUIntBE(r,4,6)),t.mask)?(c[1]|=128,c[n-4]=a[0],c[n-3]=a[1],c[n-2]=a[2],c[n-1]=a[3],o)?[c,e]:s?(d(e,a,c,n,r),[c]):(d(e,a,e,0,r),[c,e]):[c,e]}close(e,t,a,r){let i;if(void 0===e)i=n;else if("number"==typeof e&&o(e)){if(void 0!==t&&t.length){let a=Buffer.byteLength(t);if(a>123)throw RangeError("The message must not be greater than 123 bytes");(i=Buffer.allocUnsafe(2+a)).writeUInt16BE(e,0),"string"==typeof t?i.write(t,2):i.set(t,2)}else(i=Buffer.allocUnsafe(2)).writeUInt16BE(e,0)}else throw TypeError("First argument must be a valid error code number");let s={[l]:i.length,fin:!0,generateMask:this._generateMask,mask:a,maskBuffer:this._maskBuffer,opcode:8,readOnly:!1,rsv1:!1};this._deflating?this.enqueue([this.dispatch,i,!1,s,r]):this.sendFrame(Sender.frame(i,s),r)}ping(e,t,a){let r,i;if("string"==typeof e?(r=Buffer.byteLength(e),i=!1):(r=(e=p(e)).length,i=p.readOnly),r>125)throw RangeError("The data size must not be greater than 125 bytes");let s={[l]:r,fin:!0,generateMask:this._generateMask,mask:t,maskBuffer:this._maskBuffer,opcode:9,readOnly:i,rsv1:!1};this._deflating?this.enqueue([this.dispatch,e,!1,s,a]):this.sendFrame(Sender.frame(e,s),a)}pong(e,t,a){let r,i;if("string"==typeof e?(r=Buffer.byteLength(e),i=!1):(r=(e=p(e)).length,i=p.readOnly),r>125)throw RangeError("The data size must not be greater than 125 bytes");let s={[l]:r,fin:!0,generateMask:this._generateMask,mask:t,maskBuffer:this._maskBuffer,opcode:10,readOnly:i,rsv1:!1};this._deflating?this.enqueue([this.dispatch,e,!1,s,a]):this.sendFrame(Sender.frame(e,s),a)}send(e,t,a){let r,i;let n=this._extensions[s.extensionName],o=t.binary?2:1,d=t.compress;if("string"==typeof e?(r=Buffer.byteLength(e),i=!1):(r=(e=p(e)).length,i=p.readOnly),this._firstFragment?(this._firstFragment=!1,d&&n&&n.params[n._isServer?"server_no_context_takeover":"client_no_context_takeover"]&&(d=r>=n._threshold),this._compress=d):(d=!1,o=0),t.fin&&(this._firstFragment=!0),n){let s={[l]:r,fin:t.fin,generateMask:this._generateMask,mask:t.mask,maskBuffer:this._maskBuffer,opcode:o,readOnly:i,rsv1:d};this._deflating?this.enqueue([this.dispatch,e,this._compress,s,a]):this.dispatch(e,this._compress,s,a)}else this.sendFrame(Sender.frame(e,{[l]:r,fin:t.fin,generateMask:this._generateMask,mask:t.mask,maskBuffer:this._maskBuffer,opcode:o,readOnly:i,rsv1:!1}),a)}dispatch(e,t,a,r){if(!t){this.sendFrame(Sender.frame(e,a),r);return}let i=this._extensions[s.extensionName];this._bufferedBytes+=a[l],this._deflating=!0,i.compress(e,a.fin,(e,t)=>{if(this._socket.destroyed){let e=Error("The socket was closed while data was being compressed");"function"==typeof r&&r(e);for(let t=0;t<this._queue.length;t++){let a=this._queue[t],r=a[a.length-1];"function"==typeof r&&r(e)}return}this._bufferedBytes-=a[l],this._deflating=!1,a.readOnly=!1,this.sendFrame(Sender.frame(t,a),r),this.dequeue()})}dequeue(){for(;!this._deflating&&this._queue.length;){let e=this._queue.shift();this._bufferedBytes-=e[3][l],Reflect.apply(e[0],this,e.slice(1))}}enqueue(e){this._bufferedBytes+=e[3][l],this._queue.push(e)}sendFrame(e,t){2===e.length?(this._socket.cork(),this._socket.write(e[0]),this._socket.write(e[1],t),this._socket.uncork()):this._socket.write(e[0],t)}};e.exports=Sender},81114:(e,t,a)=>{"use strict";let{Duplex:r}=a(12781);function emitClose(e){e.emit("close")}function duplexOnEnd(){!this.destroyed&&this._writableState.finished&&this.destroy()}function duplexOnError(e){this.removeListener("error",duplexOnError),this.destroy(),0===this.listenerCount("error")&&this.emit("error",e)}e.exports=function(e,t){let a=!0,i=new r({...t,autoDestroy:!1,emitClose:!1,objectMode:!1,writableObjectMode:!1});return e.on("message",function(t,a){let r=!a&&i._readableState.objectMode?t.toString():t;i.push(r)||e.pause()}),e.once("error",function(e){i.destroyed||(a=!1,i.destroy(e))}),e.once("close",function(){i.destroyed||i.push(null)}),i._destroy=function(t,r){if(e.readyState===e.CLOSED){r(t),process.nextTick(emitClose,i);return}let s=!1;e.once("error",function(e){s=!0,r(e)}),e.once("close",function(){s||r(t),process.nextTick(emitClose,i)}),a&&e.terminate()},i._final=function(t){if(e.readyState===e.CONNECTING){e.once("open",function(){i._final(t)});return}null!==e._socket&&(e._socket._writableState.finished?(t(),i._readableState.endEmitted&&i.destroy()):(e._socket.once("finish",function(){t()}),e.close()))},i._read=function(){e.isPaused&&e.resume()},i._write=function(t,a,r){if(e.readyState===e.CONNECTING){e.once("open",function(){i._write(t,a,r)});return}e.send(t,r)},i.on("end",duplexOnEnd),i.on("error",duplexOnError),i}},14446:(e,t,a)=>{"use strict";let{tokenChars:r}=a(85265);e.exports={parse:function(e){let t=new Set,a=-1,i=-1,s=0;for(;s<e.length;s++){let n=e.charCodeAt(s);if(-1===i&&1===r[n])-1===a&&(a=s);else if(0!==s&&(32===n||9===n))-1===i&&-1!==a&&(i=s);else if(44===n){if(-1===a)throw SyntaxError(`Unexpected character at index ${s}`);-1===i&&(i=s);let r=e.slice(a,i);if(t.has(r))throw SyntaxError(`The "${r}" subprotocol is duplicated`);t.add(r),a=i=-1}else throw SyntaxError(`Unexpected character at index ${s}`)}if(-1===a||-1!==i)throw SyntaxError("Unexpected end of input");let n=e.slice(a,s);if(t.has(n))throw SyntaxError(`The "${n}" subprotocol is duplicated`);return t.add(n),t}}},85265:(e,t,a)=>{"use strict";let{isUtf8:r}=a(14300);function _isValidUTF8(e){let t=e.length,a=0;for(;a<t;)if((128&e[a])==0)a++;else if((224&e[a])==192){if(a+1===t||(192&e[a+1])!=128||(254&e[a])==192)return!1;a+=2}else if((240&e[a])==224){if(a+2>=t||(192&e[a+1])!=128||(192&e[a+2])!=128||224===e[a]&&(224&e[a+1])==128||237===e[a]&&(224&e[a+1])==160)return!1;a+=3}else{if((248&e[a])!=240||a+3>=t||(192&e[a+1])!=128||(192&e[a+2])!=128||(192&e[a+3])!=128||240===e[a]&&(240&e[a+1])==128||244===e[a]&&e[a+1]>143||e[a]>244)return!1;a+=4}return!0}if(e.exports={isValidStatusCode:function(e){return e>=1e3&&e<=1014&&1004!==e&&1005!==e&&1006!==e||e>=3e3&&e<=4999},isValidUTF8:_isValidUTF8,tokenChars:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0]},r)e.exports.isValidUTF8=function(e){return e.length<24?_isValidUTF8(e):r(e)};else if(!process.env.WS_NO_UTF_8_VALIDATE)try{let t=a(Object(function(){var e=Error("Cannot find module 'utf-8-validate'");throw e.code="MODULE_NOT_FOUND",e}()));e.exports.isValidUTF8=function(e){return e.length<32?_isValidUTF8(e):t(e)}}catch(e){}},90096:(e,t,a)=>{"use strict";let r=a(82361),i=a(13685),{Duplex:s}=a(12781),{createHash:n}=a(6113),o=a(23841),d=a(49794),p=a(14446),l=a(39106),{GUID:m,kWebSocket:c}=a(85427),u=/^[+/0-9A-Za-z]{22}==$/;function emitClose(e){e._state=2,e.emit("close")}function socketOnError(){this.destroy()}function abortHandshake(e,t,a,r){a=a||i.STATUS_CODES[t],r={Connection:"close","Content-Type":"text/html","Content-Length":Buffer.byteLength(a),...r},e.once("finish",e.destroy),e.end(`HTTP/1.1 ${t} ${i.STATUS_CODES[t]}\r
`+Object.keys(r).map(e=>`${e}: ${r[e]}`).join("\r\n")+"\r\n\r\n"+a)}function abortHandshakeOrEmitwsClientError(e,t,a,r,i){if(e.listenerCount("wsClientError")){let r=Error(i);Error.captureStackTrace(r,abortHandshakeOrEmitwsClientError),e.emit("wsClientError",r,a,t)}else abortHandshake(a,r,i)}e.exports=class extends r{constructor(e,t){if(super(),null==(e={allowSynchronousEvents:!1,autoPong:!0,maxPayload:104857600,skipUTF8Validation:!1,perMessageDeflate:!1,handleProtocols:null,clientTracking:!0,verifyClient:null,noServer:!1,backlog:null,server:null,host:null,path:null,port:null,WebSocket:l,...e}).port&&!e.server&&!e.noServer||null!=e.port&&(e.server||e.noServer)||e.server&&e.noServer)throw TypeError('One and only one of the "port", "server", or "noServer" options must be specified');if(null!=e.port?(this._server=i.createServer((e,t)=>{let a=i.STATUS_CODES[426];t.writeHead(426,{"Content-Length":a.length,"Content-Type":"text/plain"}),t.end(a)}),this._server.listen(e.port,e.host,e.backlog,t)):e.server&&(this._server=e.server),this._server){let e=this.emit.bind(this,"connection");this._removeListeners=function(e,t){for(let a of Object.keys(t))e.on(a,t[a]);return function(){for(let a of Object.keys(t))e.removeListener(a,t[a])}}(this._server,{listening:this.emit.bind(this,"listening"),error:this.emit.bind(this,"error"),upgrade:(t,a,r)=>{this.handleUpgrade(t,a,r,e)}})}!0===e.perMessageDeflate&&(e.perMessageDeflate={}),e.clientTracking&&(this.clients=new Set,this._shouldEmitClose=!1),this.options=e,this._state=0}address(){if(this.options.noServer)throw Error('The server is operating in "noServer" mode');return this._server?this._server.address():null}close(e){if(2===this._state){e&&this.once("close",()=>{e(Error("The server is not running"))}),process.nextTick(emitClose,this);return}if(e&&this.once("close",e),1!==this._state){if(this._state=1,this.options.noServer||this.options.server)this._server&&(this._removeListeners(),this._removeListeners=this._server=null),this.clients&&this.clients.size?this._shouldEmitClose=!0:process.nextTick(emitClose,this);else{let e=this._server;this._removeListeners(),this._removeListeners=this._server=null,e.close(()=>{emitClose(this)})}}}shouldHandle(e){if(this.options.path){let t=e.url.indexOf("?"),a=-1!==t?e.url.slice(0,t):e.url;if(a!==this.options.path)return!1}return!0}handleUpgrade(e,t,a,r){t.on("error",socketOnError);let i=e.headers["sec-websocket-key"],s=+e.headers["sec-websocket-version"];if("GET"!==e.method){abortHandshakeOrEmitwsClientError(this,e,t,405,"Invalid HTTP method");return}if("websocket"!==e.headers.upgrade.toLowerCase()){abortHandshakeOrEmitwsClientError(this,e,t,400,"Invalid Upgrade header");return}if(!i||!u.test(i)){abortHandshakeOrEmitwsClientError(this,e,t,400,"Missing or invalid Sec-WebSocket-Key header");return}if(8!==s&&13!==s){abortHandshakeOrEmitwsClientError(this,e,t,400,"Missing or invalid Sec-WebSocket-Version header");return}if(!this.shouldHandle(e)){abortHandshake(t,400);return}let n=e.headers["sec-websocket-protocol"],l=new Set;if(void 0!==n)try{l=p.parse(n)}catch(a){abortHandshakeOrEmitwsClientError(this,e,t,400,"Invalid Sec-WebSocket-Protocol header");return}let m=e.headers["sec-websocket-extensions"],c={};if(this.options.perMessageDeflate&&void 0!==m){let a=new d(this.options.perMessageDeflate,!0,this.options.maxPayload);try{let e=o.parse(m);e[d.extensionName]&&(a.accept(e[d.extensionName]),c[d.extensionName]=a)}catch(a){abortHandshakeOrEmitwsClientError(this,e,t,400,"Invalid or unacceptable Sec-WebSocket-Extensions header");return}}if(this.options.verifyClient){let n={origin:e.headers[`${8===s?"sec-websocket-origin":"origin"}`],secure:!!(e.socket.authorized||e.socket.encrypted),req:e};if(2===this.options.verifyClient.length){this.options.verifyClient(n,(s,n,o,d)=>{if(!s)return abortHandshake(t,n||401,o,d);this.completeUpgrade(c,i,l,e,t,a,r)});return}if(!this.options.verifyClient(n))return abortHandshake(t,401)}this.completeUpgrade(c,i,l,e,t,a,r)}completeUpgrade(e,t,a,r,i,s,p){if(!i.readable||!i.writable)return i.destroy();if(i[c])throw Error("server.handleUpgrade() was called more than once with the same socket, possibly due to a misconfiguration");if(this._state>0)return abortHandshake(i,503);let l=n("sha1").update(t+m).digest("base64"),u=["HTTP/1.1 101 Switching Protocols","Upgrade: websocket","Connection: Upgrade",`Sec-WebSocket-Accept: ${l}`],f=new this.options.WebSocket(null,void 0,this.options);if(a.size){let e=this.options.handleProtocols?this.options.handleProtocols(a,r):a.values().next().value;e&&(u.push(`Sec-WebSocket-Protocol: ${e}`),f._protocol=e)}if(e[d.extensionName]){let t=e[d.extensionName].params,a=o.format({[d.extensionName]:[t]});u.push(`Sec-WebSocket-Extensions: ${a}`),f._extensions=e}this.emit("headers",u,r),i.write(u.concat("\r\n").join("\r\n")),i.removeListener("error",socketOnError),f.setSocket(i,s,{allowSynchronousEvents:this.options.allowSynchronousEvents,maxPayload:this.options.maxPayload,skipUTF8Validation:this.options.skipUTF8Validation}),this.clients&&(this.clients.add(f),f.on("close",()=>{this.clients.delete(f),this._shouldEmitClose&&!this.clients.size&&process.nextTick(emitClose,this)})),p(f,r)}}},39106:(e,t,a)=>{"use strict";let r=a(82361),i=a(95687),s=a(13685),n=a(41808),o=a(24404),{randomBytes:d,createHash:p}=a(6113),{Duplex:l,Readable:m}=a(12781),{URL:c}=a(57310),u=a(49794),f=a(40623),v=a(76996),{BINARY_TYPES:g,EMPTY_BUFFER:y,GUID:b,kForOnEventAttribute:_,kListener:w,kStatusCode:A,kWebSocket:E,NOOP:x}=a(85427),{EventTarget:{addEventListener:S,removeEventListener:T}}=a(45526),{format:I,parse:k}=a(23841),{toBuffer:C}=a(78049),N=Symbol("kAborted"),B=[8,13],P=["CONNECTING","OPEN","CLOSING","CLOSED"],D=/^[!#$%&'*+\-.0-9A-Z^_`|a-z~]+$/;let WebSocket=class WebSocket extends r{constructor(e,t,a){super(),this._binaryType=g[0],this._closeCode=1006,this._closeFrameReceived=!1,this._closeFrameSent=!1,this._closeMessage=y,this._closeTimer=null,this._extensions={},this._paused=!1,this._protocol="",this._readyState=WebSocket.CONNECTING,this._receiver=null,this._sender=null,this._socket=null,null!==e?(this._bufferedAmount=0,this._isServer=!1,this._redirects=0,void 0===t?t=[]:Array.isArray(t)||("object"==typeof t&&null!==t?(a=t,t=[]):t=[t]),function initAsClient(e,t,a,r){let n,o,l,m;let f={allowSynchronousEvents:!1,autoPong:!0,protocolVersion:B[1],maxPayload:104857600,skipUTF8Validation:!1,perMessageDeflate:!0,followRedirects:!1,maxRedirects:10,...r,createConnection:void 0,socketPath:void 0,hostname:void 0,protocol:void 0,timeout:void 0,method:"GET",host:void 0,path:void 0,port:void 0};if(e._autoPong=f.autoPong,!B.includes(f.protocolVersion))throw RangeError(`Unsupported protocol version: ${f.protocolVersion} (supported versions: ${B.join(", ")})`);if(t instanceof c)n=t;else try{n=new c(t)}catch(e){throw SyntaxError(`Invalid URL: ${t}`)}"http:"===n.protocol?n.protocol="ws:":"https:"===n.protocol&&(n.protocol="wss:"),e._url=n.href;let v="wss:"===n.protocol,g="ws+unix:"===n.protocol;if("ws:"===n.protocol||v||g?g&&!n.pathname?o="The URL's pathname is empty":n.hash&&(o="The URL contains a fragment identifier"):o='The URL\'s protocol must be one of "ws:", "wss:", "http:", "https", or "ws+unix:"',o){let t=SyntaxError(o);if(0===e._redirects)throw t;emitErrorAndClose(e,t);return}let y=v?443:80,_=d(16).toString("base64"),w=v?i.request:s.request,A=new Set;if(f.createConnection=v?tlsConnect:netConnect,f.defaultPort=f.defaultPort||y,f.port=n.port||y,f.host=n.hostname.startsWith("[")?n.hostname.slice(1,-1):n.hostname,f.headers={...f.headers,"Sec-WebSocket-Version":f.protocolVersion,"Sec-WebSocket-Key":_,Connection:"Upgrade",Upgrade:"websocket"},f.path=n.pathname+n.search,f.timeout=f.handshakeTimeout,f.perMessageDeflate&&(l=new u(!0!==f.perMessageDeflate?f.perMessageDeflate:{},!1,f.maxPayload),f.headers["Sec-WebSocket-Extensions"]=I({[u.extensionName]:l.offer()})),a.length){for(let e of a){if("string"!=typeof e||!D.test(e)||A.has(e))throw SyntaxError("An invalid or duplicated subprotocol was specified");A.add(e)}f.headers["Sec-WebSocket-Protocol"]=a.join(",")}if(f.origin&&(f.protocolVersion<13?f.headers["Sec-WebSocket-Origin"]=f.origin:f.headers.Origin=f.origin),(n.username||n.password)&&(f.auth=`${n.username}:${n.password}`),g){let e=f.path.split(":");f.socketPath=e[0],f.path=e[1]}if(f.followRedirects){if(0===e._redirects){e._originalIpc=g,e._originalSecure=v,e._originalHostOrSocketPath=g?f.socketPath:n.host;let t=r&&r.headers;if(r={...r,headers:{}},t)for(let[e,a]of Object.entries(t))r.headers[e.toLowerCase()]=a}else if(0===e.listenerCount("redirect")){let t=g?!!e._originalIpc&&f.socketPath===e._originalHostOrSocketPath:!e._originalIpc&&n.host===e._originalHostOrSocketPath;t&&(!e._originalSecure||v)||(delete f.headers.authorization,delete f.headers.cookie,t||delete f.headers.host,f.auth=void 0)}f.auth&&!r.headers.authorization&&(r.headers.authorization="Basic "+Buffer.from(f.auth).toString("base64")),m=e._req=w(f),e._redirects&&e.emit("redirect",e.url,m)}else m=e._req=w(f);f.timeout&&m.on("timeout",()=>{abortHandshake(e,m,"Opening handshake has timed out")}),m.on("error",t=>{null===m||m[N]||(m=e._req=null,emitErrorAndClose(e,t))}),m.on("response",i=>{let s=i.headers.location,n=i.statusCode;if(s&&f.followRedirects&&n>=300&&n<400){let i;if(++e._redirects>f.maxRedirects){abortHandshake(e,m,"Maximum redirects exceeded");return}m.abort();try{i=new c(s,t)}catch(a){let t=SyntaxError(`Invalid URL: ${s}`);emitErrorAndClose(e,t);return}initAsClient(e,i,a,r)}else e.emit("unexpected-response",m,i)||abortHandshake(e,m,`Unexpected server response: ${i.statusCode}`)}),m.on("upgrade",(t,a,r)=>{let i;if(e.emit("upgrade",t),e.readyState!==WebSocket.CONNECTING)return;if(m=e._req=null,"websocket"!==t.headers.upgrade.toLowerCase()){abortHandshake(e,a,"Invalid Upgrade header");return}let s=p("sha1").update(_+b).digest("base64");if(t.headers["sec-websocket-accept"]!==s){abortHandshake(e,a,"Invalid Sec-WebSocket-Accept header");return}let n=t.headers["sec-websocket-protocol"];if(void 0!==n?A.size?A.has(n)||(i="Server sent an invalid subprotocol"):i="Server sent a subprotocol but none was requested":A.size&&(i="Server sent no subprotocol"),i){abortHandshake(e,a,i);return}n&&(e._protocol=n);let o=t.headers["sec-websocket-extensions"];if(void 0!==o){let t;if(!l){abortHandshake(e,a,"Server sent a Sec-WebSocket-Extensions header but no extension was requested");return}try{t=k(o)}catch(t){abortHandshake(e,a,"Invalid Sec-WebSocket-Extensions header");return}let r=Object.keys(t);if(1!==r.length||r[0]!==u.extensionName){abortHandshake(e,a,"Server indicated an extension that was not requested");return}try{l.accept(t[u.extensionName])}catch(t){abortHandshake(e,a,"Invalid Sec-WebSocket-Extensions header");return}e._extensions[u.extensionName]=l}e.setSocket(a,r,{allowSynchronousEvents:f.allowSynchronousEvents,generateMask:f.generateMask,maxPayload:f.maxPayload,skipUTF8Validation:f.skipUTF8Validation})}),f.finishRequest?f.finishRequest(m,e):m.end()}(this,e,t,a)):(this._autoPong=a.autoPong,this._isServer=!0)}get binaryType(){return this._binaryType}set binaryType(e){g.includes(e)&&(this._binaryType=e,this._receiver&&(this._receiver._binaryType=e))}get bufferedAmount(){return this._socket?this._socket._writableState.length+this._sender._bufferedBytes:this._bufferedAmount}get extensions(){return Object.keys(this._extensions).join()}get isPaused(){return this._paused}get onclose(){return null}get onerror(){return null}get onopen(){return null}get onmessage(){return null}get protocol(){return this._protocol}get readyState(){return this._readyState}get url(){return this._url}setSocket(e,t,a){let r=new f({allowSynchronousEvents:a.allowSynchronousEvents,binaryType:this.binaryType,extensions:this._extensions,isServer:this._isServer,maxPayload:a.maxPayload,skipUTF8Validation:a.skipUTF8Validation});this._sender=new v(e,this._extensions,a.generateMask),this._receiver=r,this._socket=e,r[E]=this,e[E]=this,r.on("conclude",receiverOnConclude),r.on("drain",receiverOnDrain),r.on("error",receiverOnError),r.on("message",receiverOnMessage),r.on("ping",receiverOnPing),r.on("pong",receiverOnPong),e.setTimeout&&e.setTimeout(0),e.setNoDelay&&e.setNoDelay(),t.length>0&&e.unshift(t),e.on("close",socketOnClose),e.on("data",socketOnData),e.on("end",socketOnEnd),e.on("error",socketOnError),this._readyState=WebSocket.OPEN,this.emit("open")}emitClose(){if(!this._socket){this._readyState=WebSocket.CLOSED,this.emit("close",this._closeCode,this._closeMessage);return}this._extensions[u.extensionName]&&this._extensions[u.extensionName].cleanup(),this._receiver.removeAllListeners(),this._readyState=WebSocket.CLOSED,this.emit("close",this._closeCode,this._closeMessage)}close(e,t){if(this.readyState!==WebSocket.CLOSED){if(this.readyState===WebSocket.CONNECTING){abortHandshake(this,this._req,"WebSocket was closed before the connection was established");return}if(this.readyState===WebSocket.CLOSING){this._closeFrameSent&&(this._closeFrameReceived||this._receiver._writableState.errorEmitted)&&this._socket.end();return}this._readyState=WebSocket.CLOSING,this._sender.close(e,t,!this._isServer,e=>{!e&&(this._closeFrameSent=!0,(this._closeFrameReceived||this._receiver._writableState.errorEmitted)&&this._socket.end())}),this._closeTimer=setTimeout(this._socket.destroy.bind(this._socket),3e4)}}pause(){this.readyState!==WebSocket.CONNECTING&&this.readyState!==WebSocket.CLOSED&&(this._paused=!0,this._socket.pause())}ping(e,t,a){if(this.readyState===WebSocket.CONNECTING)throw Error("WebSocket is not open: readyState 0 (CONNECTING)");if("function"==typeof e?(a=e,e=t=void 0):"function"==typeof t&&(a=t,t=void 0),"number"==typeof e&&(e=e.toString()),this.readyState!==WebSocket.OPEN){sendAfterClose(this,e,a);return}void 0===t&&(t=!this._isServer),this._sender.ping(e||y,t,a)}pong(e,t,a){if(this.readyState===WebSocket.CONNECTING)throw Error("WebSocket is not open: readyState 0 (CONNECTING)");if("function"==typeof e?(a=e,e=t=void 0):"function"==typeof t&&(a=t,t=void 0),"number"==typeof e&&(e=e.toString()),this.readyState!==WebSocket.OPEN){sendAfterClose(this,e,a);return}void 0===t&&(t=!this._isServer),this._sender.pong(e||y,t,a)}resume(){this.readyState!==WebSocket.CONNECTING&&this.readyState!==WebSocket.CLOSED&&(this._paused=!1,this._receiver._writableState.needDrain||this._socket.resume())}send(e,t,a){if(this.readyState===WebSocket.CONNECTING)throw Error("WebSocket is not open: readyState 0 (CONNECTING)");if("function"==typeof t&&(a=t,t={}),"number"==typeof e&&(e=e.toString()),this.readyState!==WebSocket.OPEN){sendAfterClose(this,e,a);return}let r={binary:"string"!=typeof e,mask:!this._isServer,compress:!0,fin:!0,...t};this._extensions[u.extensionName]||(r.compress=!1),this._sender.send(e||y,r,a)}terminate(){if(this.readyState!==WebSocket.CLOSED){if(this.readyState===WebSocket.CONNECTING){abortHandshake(this,this._req,"WebSocket was closed before the connection was established");return}this._socket&&(this._readyState=WebSocket.CLOSING,this._socket.destroy())}}};function emitErrorAndClose(e,t){e._readyState=WebSocket.CLOSING,e.emit("error",t),e.emitClose()}function netConnect(e){return e.path=e.socketPath,n.connect(e)}function tlsConnect(e){return e.path=void 0,e.servername||""===e.servername||(e.servername=n.isIP(e.host)?"":e.host),o.connect(e)}function abortHandshake(e,t,a){e._readyState=WebSocket.CLOSING;let r=Error(a);Error.captureStackTrace(r,abortHandshake),t.setHeader?(t[N]=!0,t.abort(),t.socket&&!t.socket.destroyed&&t.socket.destroy(),process.nextTick(emitErrorAndClose,e,r)):(t.destroy(r),t.once("error",e.emit.bind(e,"error")),t.once("close",e.emitClose.bind(e)))}function sendAfterClose(e,t,a){if(t){let a=C(t).length;e._socket?e._sender._bufferedBytes+=a:e._bufferedAmount+=a}if(a){let t=Error(`WebSocket is not open: readyState ${e.readyState} (${P[e.readyState]})`);process.nextTick(a,t)}}function receiverOnConclude(e,t){let a=this[E];a._closeFrameReceived=!0,a._closeMessage=t,a._closeCode=e,void 0!==a._socket[E]&&(a._socket.removeListener("data",socketOnData),process.nextTick(resume,a._socket),1005===e?a.close():a.close(e,t))}function receiverOnDrain(){let e=this[E];e.isPaused||e._socket.resume()}function receiverOnError(e){let t=this[E];void 0!==t._socket[E]&&(t._socket.removeListener("data",socketOnData),process.nextTick(resume,t._socket),t.close(e[A])),t.emit("error",e)}function receiverOnFinish(){this[E].emitClose()}function receiverOnMessage(e,t){this[E].emit("message",e,t)}function receiverOnPing(e){let t=this[E];t._autoPong&&t.pong(e,!this._isServer,x),t.emit("ping",e)}function receiverOnPong(e){this[E].emit("pong",e)}function resume(e){e.resume()}function socketOnClose(){let e;let t=this[E];this.removeListener("close",socketOnClose),this.removeListener("data",socketOnData),this.removeListener("end",socketOnEnd),t._readyState=WebSocket.CLOSING,this._readableState.endEmitted||t._closeFrameReceived||t._receiver._writableState.errorEmitted||null===(e=t._socket.read())||t._receiver.write(e),t._receiver.end(),this[E]=void 0,clearTimeout(t._closeTimer),t._receiver._writableState.finished||t._receiver._writableState.errorEmitted?t.emitClose():(t._receiver.on("error",receiverOnFinish),t._receiver.on("finish",receiverOnFinish))}function socketOnData(e){this[E]._receiver.write(e)||this.pause()}function socketOnEnd(){let e=this[E];e._readyState=WebSocket.CLOSING,e._receiver.end(),this.end()}function socketOnError(){let e=this[E];this.removeListener("error",socketOnError),this.on("error",x),e&&(e._readyState=WebSocket.CLOSING,this.destroy())}Object.defineProperty(WebSocket,"CONNECTING",{enumerable:!0,value:P.indexOf("CONNECTING")}),Object.defineProperty(WebSocket.prototype,"CONNECTING",{enumerable:!0,value:P.indexOf("CONNECTING")}),Object.defineProperty(WebSocket,"OPEN",{enumerable:!0,value:P.indexOf("OPEN")}),Object.defineProperty(WebSocket.prototype,"OPEN",{enumerable:!0,value:P.indexOf("OPEN")}),Object.defineProperty(WebSocket,"CLOSING",{enumerable:!0,value:P.indexOf("CLOSING")}),Object.defineProperty(WebSocket.prototype,"CLOSING",{enumerable:!0,value:P.indexOf("CLOSING")}),Object.defineProperty(WebSocket,"CLOSED",{enumerable:!0,value:P.indexOf("CLOSED")}),Object.defineProperty(WebSocket.prototype,"CLOSED",{enumerable:!0,value:P.indexOf("CLOSED")}),["binaryType","bufferedAmount","extensions","isPaused","protocol","readyState","url"].forEach(e=>{Object.defineProperty(WebSocket.prototype,e,{enumerable:!0})}),["open","error","close","message"].forEach(e=>{Object.defineProperty(WebSocket.prototype,`on${e}`,{enumerable:!0,get(){for(let t of this.listeners(e))if(t[_])return t[w];return null},set(t){for(let t of this.listeners(e))if(t[_]){this.removeListener(e,t);break}"function"==typeof t&&this.addEventListener(e,t,{[_]:!0})}})}),WebSocket.prototype.addEventListener=S,WebSocket.prototype.removeEventListener=T,e.exports=WebSocket},282:(e,t,a)=>{"use strict";let r,i,s,n,o,d,p,l,m,c,u,f,v,g,y,b,_,w,A;a.d(t,{ZPm:()=>rv});var E,x,S,T,I,k,C,N,B,P,D,O,R,M,L,j,H,V,F,U={};a.r(U),a.d(U,{abiSchemaToJsonSchema:()=>abiSchemaToJsonSchema,codePointToInt:()=>codePointToInt,ethAbiToJsonSchema:()=>ethAbiToJsonSchema,fetchArrayElement:()=>fetchArrayElement,hexToNumber:()=>utils_hexToNumber,hexToUint8Array:()=>hexToUint8Array,numberToHex:()=>utils_numberToHex,padLeft:()=>padLeft,parseBaseType:()=>utils_parseBaseType,transformJsonDataToAbiFormat:()=>transformJsonDataToAbiFormat,uint8ArrayToHexString:()=>uint8ArrayToHexString});var Z={};a.r(Z),a.d(Z,{isBatchRequest:()=>isBatchRequest,isBatchResponse:()=>isBatchResponse,isResponseRpcError:()=>isResponseRpcError,isResponseWithError:()=>json_rpc_isResponseWithError,isResponseWithNotification:()=>isResponseWithNotification,isResponseWithResult:()=>isResponseWithResult,isSubscriptionResult:()=>isSubscriptionResult,isValidResponse:()=>isValidResponse,setRequestIdStart:()=>setRequestIdStart,toBatchPayload:()=>toBatchPayload,toPayload:()=>toPayload,validateResponse:()=>validateResponse});var G={};a.r(G),a.d(G,{ChunkResponseParser:()=>ChunkResponseParser,Eip1193Provider:()=>Eip1193Provider,EventEmitter:()=>EventEmitter,SocketProvider:()=>SocketProvider,Web3DeferredPromise:()=>Web3DeferredPromise,asciiToHex:()=>asciiToHex,bytesToHex:()=>converters_bytesToHex,bytesToUint8Array:()=>bytesToUint8Array,checkAddressCheckSum:()=>tT,compareBlockNumbers:()=>compareBlockNumbers,convert:()=>convert,convertScalarValue:()=>convertScalarValue,encodePacked:()=>encodePacked,ethUnitMap:()=>tu,format:()=>format,fromAscii:()=>tw,fromDecimal:()=>tv,fromTwosComplement:()=>fromTwosComplement,fromUtf8:()=>tg,fromWei:()=>fromWei,getStorageSlotNumForLongString:()=>getStorageSlotNumForLongString,hexToAscii:()=>hexToAscii,hexToBytes:()=>converters_hexToBytes,hexToNumber:()=>converters_hexToNumber,hexToNumberString:()=>converters_hexToNumberString,hexToString:()=>t_,hexToUtf8:()=>hexToUtf8,isAddress:()=>tI,isBatchRequest:()=>isBatchRequest,isBatchResponse:()=>isBatchResponse,isBloom:()=>tk,isContractAddressInBloom:()=>validation_isContractAddressInBloom,isContractInitOptions:()=>isContractInitOptions,isDataFormat:()=>isDataFormat,isHex:()=>tS,isHexStrict:()=>tx,isInBloom:()=>tC,isNullish:()=>tB,isPromise:()=>isPromise,isResponseRpcError:()=>isResponseRpcError,isResponseWithError:()=>json_rpc_isResponseWithError,isResponseWithNotification:()=>isResponseWithNotification,isResponseWithResult:()=>isResponseWithResult,isSubscriptionResult:()=>isSubscriptionResult,isTopic:()=>tN,isTopicInBloom:()=>validation_isTopicInBloom,isUserEthereumAddressInBloom:()=>validation_isUserEthereumAddressInBloom,isValidResponse:()=>isValidResponse,jsonRpc:()=>Z,keccak256:()=>keccak256Wrapper,keccak256Wrapper:()=>keccak256Wrapper,leftPad:()=>tD,mergeDeep:()=>objects_mergeDeep,numberToHex:()=>converters_numberToHex,padLeft:()=>string_manipulation_padLeft,padRight:()=>padRight,pollTillDefined:()=>pollTillDefined,pollTillDefinedAndReturnIntervalId:()=>pollTillDefinedAndReturnIntervalId,processSolidityEncodePackedArgs:()=>processSolidityEncodePackedArgs,randomBytes:()=>random_randomBytes,randomHex:()=>randomHex,rejectIfConditionAtInterval:()=>rejectIfConditionAtInterval,rejectIfTimeout:()=>rejectIfTimeout,rightPad:()=>tP,setRequestIdStart:()=>setRequestIdStart,sha3:()=>sha3,sha3Raw:()=>hash_sha3Raw,soliditySha3:()=>soliditySha3,soliditySha3Raw:()=>soliditySha3Raw,stringToHex:()=>ty,toAscii:()=>tA,toBatchPayload:()=>toBatchPayload,toBigInt:()=>toBigInt,toBool:()=>toBool,toChecksumAddress:()=>converters_toChecksumAddress,toDecimal:()=>tf,toHex:()=>converters_toHex,toNumber:()=>converters_toNumber,toPayload:()=>toPayload,toTwosComplement:()=>toTwosComplement,toUtf8:()=>converters_toUtf8,toWei:()=>toWei,uint8ArrayConcat:()=>uint8ArrayConcat,uint8ArrayEquals:()=>uint8ArrayEquals,utf8ToBytes:()=>tb,utf8ToHex:()=>converters_utf8ToHex,uuidV4:()=>uuidV4,validateResponse:()=>validateResponse,waitWithTimeout:()=>waitWithTimeout});var W={};a.r(W),a.d(W,{dQ:()=>bitMask,ci:()=>utils_bytesToHex,bytesToNumberBE:()=>utils_bytesToNumberBE,ty:()=>bytesToNumberLE,eV:()=>abstract_utils_concatBytes,n$:()=>createHmacDrbg,ql:()=>utils_ensureBytes,hexToBytes:()=>abstract_utils_hexToBytes,tL:()=>utils_numberToBytesBE,S5:()=>numberToBytesLE,FF:()=>utils_validateObject});var q={};a.r(q),a.d(q,{secp256k1:()=>ac});let web3_error_base_BaseWeb3Error=class web3_error_base_BaseWeb3Error extends Error{constructor(e,t){super(e),this.innerError=t,this.name=this.constructor.name,"function"==typeof Error.captureStackTrace?Error.captureStackTrace(new.target.constructor):this.stack=Error().stack}static convertToString(e,t=!1){if(null==e)return"undefined";let a=JSON.stringify(e,(e,t)=>"bigint"==typeof t?t.toString():t);return t&&["bigint","string"].includes(typeof e)?a.replace(/['\\"]+/g,""):a}toJSON(){return{name:this.name,code:this.code,message:this.message,innerError:this.innerError}}};let web3_error_base_InvalidValueError=class web3_error_base_InvalidValueError extends web3_error_base_BaseWeb3Error{constructor(e,t){super(`Invalid value given "${web3_error_base_BaseWeb3Error.convertToString(e,!0)}". Error: ${t}.`),this.name=this.constructor.name}};let PrivateKeyLengthError=class PrivateKeyLengthError extends web3_error_base_BaseWeb3Error{constructor(){super("Private key must be 32 bytes."),this.code=701}};let InvalidPrivateKeyError=class InvalidPrivateKeyError extends web3_error_base_BaseWeb3Error{constructor(){super("Invalid Private Key, Not a valid string or uint8Array"),this.code=702}};let InvalidSignatureError=class InvalidSignatureError extends web3_error_base_BaseWeb3Error{constructor(e){super(`"${e}"`),this.code=802}};let InvalidKdfError=class InvalidKdfError extends web3_error_base_BaseWeb3Error{constructor(){super("Invalid key derivation function"),this.code=703}};let KeyDerivationError=class KeyDerivationError extends web3_error_base_BaseWeb3Error{constructor(){super("Key derivation failed - possibly wrong password"),this.code=704}};let KeyStoreVersionError=class KeyStoreVersionError extends web3_error_base_BaseWeb3Error{constructor(){super("Unsupported key store version"),this.code=705}};let InvalidPasswordError=class InvalidPasswordError extends web3_error_base_BaseWeb3Error{constructor(){super("Password cannot be empty"),this.code=706}};let IVLengthError=class IVLengthError extends web3_error_base_BaseWeb3Error{constructor(){super("Initialization vector must be 16 bytes"),this.code=707}};let PBKDF2IterationsError=class PBKDF2IterationsError extends web3_error_base_BaseWeb3Error{constructor(){super("c > 1000, pbkdf2 is less secure with less iterations"),this.code=709}};let ConnectionError=class ConnectionError extends web3_error_base_BaseWeb3Error{constructor(e,t){super(e),this.code=500,t&&(this.errorCode=t.code,this.errorReason=t.reason)}toJSON(){return Object.assign(Object.assign({},super.toJSON()),{errorCode:this.errorCode,errorReason:this.errorReason})}};let ConnectionNotOpenError=class ConnectionNotOpenError extends ConnectionError{constructor(e){super("Connection not open",e),this.code=503}};let MaxAttemptsReachedOnReconnectingError=class MaxAttemptsReachedOnReconnectingError extends ConnectionError{constructor(e){super(`Maximum number of reconnect attempts reached! (${e})`),this.code=505}};let PendingRequestsOnReconnectingError=class PendingRequestsOnReconnectingError extends ConnectionError{constructor(){super("CONNECTION ERROR: Provider started to reconnect before the response got received!"),this.code=506}};let RequestAlreadySentError=class RequestAlreadySentError extends ConnectionError{constructor(e){super(`Request already sent with following id: ${e}`),this.code=507}};let Web3ContractError=class Web3ContractError extends web3_error_base_BaseWeb3Error{constructor(e,t){super(e),this.code=300,this.receipt=t}};let ResolverMethodMissingError=class ResolverMethodMissingError extends web3_error_base_BaseWeb3Error{constructor(e,t){super(`The resolver at ${e} does not implement requested method: "${t}".`),this.address=e,this.name=t,this.code=301}toJSON(){return Object.assign(Object.assign({},super.toJSON()),{address:this.address,name:this.name})}};let Eip838ExecutionError=class Eip838ExecutionError extends Web3ContractError{constructor(e){if(super(e.message||"Error"),this.name="name"in e&&e.name||this.constructor.name,this.stack="stack"in e&&e.stack||void 0,this.code=e.code,"object"==typeof e.data){let t;t="originalError"in e.data?e.data.originalError:e.data,this.data=t.data,this.innerError=new Eip838ExecutionError(t)}else this.data=e.data}setDecodedProperties(e,t,a){this.errorName=e,this.errorSignature=t,this.errorArgs=a}toJSON(){let e=Object.assign(Object.assign({},super.toJSON()),{data:this.data});return this.errorName&&(e=Object.assign(Object.assign({},e),{errorName:this.errorName,errorSignature:this.errorSignature,errorArgs:this.errorArgs})),e}};let ContractExecutionError=class ContractExecutionError extends Web3ContractError{constructor(e){super("Error happened while trying to execute a function inside a smart contract"),this.code=310,this.innerError=new Eip838ExecutionError(e)}};let ContractTransactionDataAndInputError=class ContractTransactionDataAndInputError extends web3_error_base_InvalidValueError{constructor(e){var t,a;super(`data: ${null!==(t=e.data)&&void 0!==t?t:"undefined"}, input: ${null!==(a=e.input)&&void 0!==a?a:"undefined"}`,'You can\'t have "data" and "input" as properties of a contract at the same time, please use either "data" or "input" instead.'),this.code=311}};let ENSUnsupportedNetworkError=class ENSUnsupportedNetworkError extends web3_error_base_BaseWeb3Error{constructor(e){super(`ENS is not supported on network ${e}`),this.code=902}};let ENSNetworkNotSyncedError=class ENSNetworkNotSyncedError extends web3_error_base_BaseWeb3Error{constructor(){super("Network not synced"),this.code=903}};let InvalidMethodParamsError=class InvalidMethodParamsError extends web3_error_base_BaseWeb3Error{constructor(e){super(`Invalid parameters passed. "${void 0!==e?e:""}"`),this.hint=e,this.code=207}toJSON(){return Object.assign(Object.assign({},super.toJSON()),{hint:this.hint})}};let generic_errors_FormatterError=class generic_errors_FormatterError extends web3_error_base_BaseWeb3Error{constructor(){super(...arguments),this.code=201}};let MethodNotImplementedError=class MethodNotImplementedError extends web3_error_base_BaseWeb3Error{constructor(){super("The method you're trying to call is not implemented."),this.code=202}};let OperationTimeoutError=class OperationTimeoutError extends web3_error_base_BaseWeb3Error{constructor(){super(...arguments),this.code=203}};let OperationAbortError=class OperationAbortError extends web3_error_base_BaseWeb3Error{constructor(){super(...arguments),this.code=204}};let AbiError=class AbiError extends web3_error_base_BaseWeb3Error{constructor(e,t){super(e),this.code=205,this.props=null!=t?t:{}}};let ExistingPluginNamespaceError=class ExistingPluginNamespaceError extends web3_error_base_BaseWeb3Error{constructor(e){super(`A plugin with the namespace: ${e} has already been registered.`),this.code=206}};let ProviderError=class ProviderError extends web3_error_base_BaseWeb3Error{constructor(){super(...arguments),this.code=600}};let InvalidClientError=class InvalidClientError extends web3_error_base_BaseWeb3Error{constructor(e){super(`Client URL "${e}" is invalid.`),this.code=602}};let SubscriptionError=class SubscriptionError extends web3_error_base_BaseWeb3Error{constructor(){super(...arguments),this.code=603}};let Web3WSProviderError=class Web3WSProviderError extends web3_error_base_BaseWeb3Error{constructor(){super(...arguments),this.code=604}};let SignatureError=class SignatureError extends web3_error_base_InvalidValueError{constructor(){super(...arguments),this.code=801}};let TransactionError=class TransactionError extends web3_error_base_BaseWeb3Error{constructor(e,t){super(e),this.receipt=t,this.code=400}toJSON(){return Object.assign(Object.assign({},super.toJSON()),{receipt:this.receipt})}};let TransactionRevertInstructionError=class TransactionRevertInstructionError extends web3_error_base_BaseWeb3Error{constructor(e,t,a,r){super(`Transaction has been reverted by the EVM${void 0===a?"":`:
 ${web3_error_base_BaseWeb3Error.convertToString(a)}`}`),this.reason=e,this.signature=t,this.receipt=a,this.data=r,this.code=402}toJSON(){return Object.assign(Object.assign({},super.toJSON()),{reason:this.reason,signature:this.signature,receipt:this.receipt,data:this.data})}};let TransactionRevertWithCustomError=class TransactionRevertWithCustomError extends TransactionRevertInstructionError{constructor(e,t,a,r,i,s,n){super(e),this.reason=e,this.customErrorName=t,this.customErrorDecodedSignature=a,this.customErrorArguments=r,this.signature=i,this.receipt=s,this.data=n,this.code=438}toJSON(){return Object.assign(Object.assign({},super.toJSON()),{reason:this.reason,customErrorName:this.customErrorName,customErrorDecodedSignature:this.customErrorDecodedSignature,customErrorArguments:this.customErrorArguments,signature:this.signature,receipt:this.receipt,data:this.data})}};let TransactionRevertedWithoutReasonError=class TransactionRevertedWithoutReasonError extends TransactionError{constructor(e){super(`Transaction has been reverted by the EVM${void 0===e?"":`:
 ${web3_error_base_BaseWeb3Error.convertToString(e)}`}`,e),this.code=405}};let UndefinedRawTransactionError=class UndefinedRawTransactionError extends TransactionError{constructor(){super("Raw transaction undefined"),this.code=407}};let TransactionNotFound=class TransactionNotFound extends TransactionError{constructor(){super("Transaction not found"),this.code=430}};let transaction_errors_InvalidTransactionWithSender=class transaction_errors_InvalidTransactionWithSender extends web3_error_base_InvalidValueError{constructor(e){super(e,"invalid transaction with invalid sender"),this.code=408}};let InvalidTransactionWithReceiver=class InvalidTransactionWithReceiver extends web3_error_base_InvalidValueError{constructor(e){super(e,"invalid transaction with invalid receiver"),this.code=437}};let MissingCustomChainError=class MissingCustomChainError extends web3_error_base_InvalidValueError{constructor(){super("MissingCustomChainError","If tx.common is provided it must have tx.common.customChain"),this.code=410}};let MissingCustomChainIdError=class MissingCustomChainIdError extends web3_error_base_InvalidValueError{constructor(){super("MissingCustomChainIdError","If tx.common is provided it must have tx.common.customChain and tx.common.customChain.chainId"),this.code=411}};let ChainIdMismatchError=class ChainIdMismatchError extends web3_error_base_InvalidValueError{constructor(e){super(JSON.stringify(e),"Chain Id doesnt match in tx.chainId tx.common.customChain.chainId"),this.code=412}};let ChainMismatchError=class ChainMismatchError extends web3_error_base_InvalidValueError{constructor(e){super(JSON.stringify(e),"Chain doesnt match in tx.chain tx.common.basechain"),this.code=435}};let HardforkMismatchError=class HardforkMismatchError extends web3_error_base_InvalidValueError{constructor(e){super(JSON.stringify(e),"hardfork doesnt match in tx.hardfork tx.common.hardfork"),this.code=436}};let CommonOrChainAndHardforkError=class CommonOrChainAndHardforkError extends web3_error_base_InvalidValueError{constructor(){super("CommonOrChainAndHardforkError","Please provide the common object or the chain and hardfork property but not all together."),this.code=413}};let MissingChainOrHardforkError=class MissingChainOrHardforkError extends web3_error_base_InvalidValueError{constructor(e){var t,a;super("MissingChainOrHardforkError",`When specifying chain and hardfork, both values must be defined. Received "chain": ${null!==(t=e.chain)&&void 0!==t?t:"undefined"}, "hardfork": ${null!==(a=e.hardfork)&&void 0!==a?a:"undefined"}`),this.code=414}};let MissingGasInnerError=class MissingGasInnerError extends web3_error_base_BaseWeb3Error{constructor(){super('Missing properties in transaction, either define "gas" and "gasPrice" for type 0 transactions or "gas", "maxPriorityFeePerGas" and "maxFeePerGas" for type 2 transactions'),this.code=440}};let MissingGasError=class MissingGasError extends web3_error_base_InvalidValueError{constructor(e){var t,a,r,i;super(`gas: ${null!==(t=e.gas)&&void 0!==t?t:"undefined"}, gasPrice: ${null!==(a=e.gasPrice)&&void 0!==a?a:"undefined"}, maxPriorityFeePerGas: ${null!==(r=e.maxPriorityFeePerGas)&&void 0!==r?r:"undefined"}, maxFeePerGas: ${null!==(i=e.maxFeePerGas)&&void 0!==i?i:"undefined"}`,'"gas" is missing'),this.code=415,this.innerError=new MissingGasInnerError}};let TransactionGasMismatchInnerError=class TransactionGasMismatchInnerError extends web3_error_base_BaseWeb3Error{constructor(){super('Missing properties in transaction, either define "gas" and "gasPrice" for type 0 transactions or "gas", "maxPriorityFeePerGas" and "maxFeePerGas" for type 2 transactions, not both'),this.code=441}};let TransactionGasMismatchError=class TransactionGasMismatchError extends web3_error_base_InvalidValueError{constructor(e){var t,a,r,i;super(`gas: ${null!==(t=e.gas)&&void 0!==t?t:"undefined"}, gasPrice: ${null!==(a=e.gasPrice)&&void 0!==a?a:"undefined"}, maxPriorityFeePerGas: ${null!==(r=e.maxPriorityFeePerGas)&&void 0!==r?r:"undefined"}, maxFeePerGas: ${null!==(i=e.maxFeePerGas)&&void 0!==i?i:"undefined"}`,"transaction must specify legacy or fee market gas properties, not both"),this.code=434,this.innerError=new TransactionGasMismatchInnerError}};let InvalidGasOrGasPrice=class InvalidGasOrGasPrice extends web3_error_base_InvalidValueError{constructor(e){var t,a;super(`gas: ${null!==(t=e.gas)&&void 0!==t?t:"undefined"}, gasPrice: ${null!==(a=e.gasPrice)&&void 0!==a?a:"undefined"}`,"Gas or gasPrice is lower than 0"),this.code=416}};let InvalidMaxPriorityFeePerGasOrMaxFeePerGas=class InvalidMaxPriorityFeePerGasOrMaxFeePerGas extends web3_error_base_InvalidValueError{constructor(e){var t,a;super(`maxPriorityFeePerGas: ${null!==(t=e.maxPriorityFeePerGas)&&void 0!==t?t:"undefined"}, maxFeePerGas: ${null!==(a=e.maxFeePerGas)&&void 0!==a?a:"undefined"}`,"maxPriorityFeePerGas or maxFeePerGas is lower than 0"),this.code=417}};let Eip1559GasPriceError=class Eip1559GasPriceError extends web3_error_base_InvalidValueError{constructor(e){super(e,"eip-1559 transactions don't support gasPrice"),this.code=418}};let UnsupportedFeeMarketError=class UnsupportedFeeMarketError extends web3_error_base_InvalidValueError{constructor(e){var t,a;super(`maxPriorityFeePerGas: ${null!==(t=e.maxPriorityFeePerGas)&&void 0!==t?t:"undefined"}, maxFeePerGas: ${null!==(a=e.maxFeePerGas)&&void 0!==a?a:"undefined"}`,"pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas"),this.code=419}};let InvalidTransactionObjectError=class InvalidTransactionObjectError extends web3_error_base_InvalidValueError{constructor(e){super(e,"invalid transaction object"),this.code=420}};let InvalidNonceOrChainIdError=class InvalidNonceOrChainIdError extends web3_error_base_InvalidValueError{constructor(e){var t,a;super(`nonce: ${null!==(t=e.nonce)&&void 0!==t?t:"undefined"}, chainId: ${null!==(a=e.chainId)&&void 0!==a?a:"undefined"}`,"Nonce or chainId is lower than 0"),this.code=421}};let UnableToPopulateNonceError=class UnableToPopulateNonceError extends web3_error_base_InvalidValueError{constructor(){super("UnableToPopulateNonceError","unable to populate nonce, no from address available"),this.code=422}};let Eip1559NotSupportedError=class Eip1559NotSupportedError extends web3_error_base_InvalidValueError{constructor(){super("Eip1559NotSupportedError","Network doesn't support eip-1559"),this.code=423}};let UnsupportedTransactionTypeError=class UnsupportedTransactionTypeError extends web3_error_base_InvalidValueError{constructor(e){super(e,"unsupported transaction type"),this.code=424}};let TransactionDataAndInputError=class TransactionDataAndInputError extends web3_error_base_InvalidValueError{constructor(e){var t,a;super(`data: ${null!==(t=e.data)&&void 0!==t?t:"undefined"}, input: ${null!==(a=e.input)&&void 0!==a?a:"undefined"}`,'You can\'t have "data" and "input" as properties of transactions at the same time, please use either "data" or "input" instead.'),this.code=425}};let TransactionSendTimeoutError=class TransactionSendTimeoutError extends web3_error_base_BaseWeb3Error{constructor(e){super(`The connected Ethereum Node did not respond within ${e.numberOfSeconds} seconds, please make sure your transaction was properly sent and you are connected to a healthy Node. Be aware that transaction might still be pending or mined!
	Transaction Hash: ${e.transactionHash?e.transactionHash.toString():"not available"}`),this.code=431}};function transactionTimeoutHint(e){return`Please make sure your transaction was properly sent and there are no previous pending transaction for the same account. However, be aware that it might still be mined!
	Transaction Hash: ${e?e.toString():"not available"}`}let TransactionPollingTimeoutError=class TransactionPollingTimeoutError extends web3_error_base_BaseWeb3Error{constructor(e){super(`Transaction was not mined within ${e.numberOfSeconds} seconds. ${transactionTimeoutHint(e.transactionHash)}`),this.code=426}};let TransactionBlockTimeoutError=class TransactionBlockTimeoutError extends web3_error_base_BaseWeb3Error{constructor(e){super(`Transaction started at ${e.starterBlockNumber} but was not mined within ${e.numberOfBlocks} blocks. ${transactionTimeoutHint(e.transactionHash)}`),this.code=432}};let TransactionMissingReceiptOrBlockHashError=class TransactionMissingReceiptOrBlockHashError extends web3_error_base_InvalidValueError{constructor(e){var t,a;super(`receipt: ${JSON.stringify(e.receipt)}, blockHash: ${null===(t=e.blockHash)||void 0===t?void 0:t.toString()}, transactionHash: ${null===(a=e.transactionHash)||void 0===a?void 0:a.toString()}`,"Receipt missing or blockHash null"),this.code=427}};let TransactionReceiptMissingBlockNumberError=class TransactionReceiptMissingBlockNumberError extends web3_error_base_InvalidValueError{constructor(e){super(`receipt: ${JSON.stringify(e.receipt)}`,"Receipt missing block number"),this.code=428}};let TransactionSigningError=class TransactionSigningError extends web3_error_base_BaseWeb3Error{constructor(e){super(`Invalid signature. "${e}"`),this.code=433}};let LocalWalletNotAvailableError=class LocalWalletNotAvailableError extends web3_error_base_InvalidValueError{constructor(){super("LocalWalletNotAvailableError","Attempted to index account in local wallet, but no wallet is available"),this.code=429}};let InvalidPropertiesForTransactionTypeError=class InvalidPropertiesForTransactionTypeError extends web3_error_base_BaseWeb3Error{constructor(e,t){let a=[];e.forEach(e=>a.push(e.keyword)),super(`The following properties are invalid for the transaction type ${t}: ${a.join(", ")}`),this.code=439}};let InvalidBytesError=class InvalidBytesError extends web3_error_base_InvalidValueError{constructor(e){super(e,"can not parse as byte data"),this.code=1002}};let InvalidNumberError=class InvalidNumberError extends web3_error_base_InvalidValueError{constructor(e){super(e,"can not parse as number data"),this.code=1003}};let InvalidAddressError=class InvalidAddressError extends web3_error_base_InvalidValueError{constructor(e){super(e,"invalid ethereum address"),this.code=1005}};let InvalidStringError=class InvalidStringError extends web3_error_base_InvalidValueError{constructor(e){super(e,"not a valid string"),this.code=1001}};let InvalidUnitError=class InvalidUnitError extends web3_error_base_InvalidValueError{constructor(e){super(e,"invalid unit"),this.code=1004}};let HexProcessingError=class HexProcessingError extends web3_error_base_InvalidValueError{constructor(e){super(e,"can not be converted to hex"),this.code=1006}};let NibbleWidthError=class NibbleWidthError extends web3_error_base_InvalidValueError{constructor(e){super(e,"value greater than the nibble width"),this.code=1014}};let InvalidBooleanError=class InvalidBooleanError extends web3_error_base_InvalidValueError{constructor(e){super(e,"not a valid boolean."),this.code=1008}};let InvalidUnsignedIntegerError=class InvalidUnsignedIntegerError extends web3_error_base_InvalidValueError{constructor(e){super(e,"not a valid unsigned integer."),this.code=1009}};let InvalidSizeError=class InvalidSizeError extends web3_error_base_InvalidValueError{constructor(e){super(e,"invalid size given."),this.code=1010}};let InvalidLargeValueError=class InvalidLargeValueError extends web3_error_base_InvalidValueError{constructor(e){super(e,"value is larger than size."),this.code=1011}};let InvalidBlockError=class InvalidBlockError extends web3_error_base_InvalidValueError{constructor(e){super(e,"invalid string given"),this.code=1012}};let isResponseWithError=e=>!Array.isArray(e)&&"2.0"===e.jsonrpc&&!!e&&(void 0===e.result||null===e.result)&&"error"in e&&("number"==typeof e.id||"string"==typeof e.id),buildErrorMessage=e=>isResponseWithError(e)?e.error.message:"";let ResponseError=class ResponseError extends web3_error_base_BaseWeb3Error{constructor(e,t,a){var r;let i;super(null!=t?t:`Returned error: ${Array.isArray(e)?e.map(e=>buildErrorMessage(e)).join(","):buildErrorMessage(e)}`),this.code=100,t||(this.data=Array.isArray(e)?e.map(e=>{var t;return null===(t=e.error)||void 0===t?void 0:t.data}):null===(r=null==e?void 0:e.error)||void 0===r?void 0:r.data),this.request=a,"error"in e?i=e.error:e instanceof Array&&(i=e.map(e=>e.error)),this.innerError=i}toJSON(){return Object.assign(Object.assign({},super.toJSON()),{data:this.data,request:this.request})}};let InvalidResponseError=class InvalidResponseError extends ResponseError{constructor(e,t){let a;super(e,void 0,t),this.code=101,"error"in e?a=e.error:e instanceof Array&&(a=e.map(e=>e.error)),this.innerError=a}};let ConfigHardforkMismatchError=class ConfigHardforkMismatchError extends web3_error_base_BaseWeb3Error{constructor(e,t){super(`Web3Config hardfork doesnt match in defaultHardfork ${e} and common.hardfork ${t}`),this.code=1101}};let ConfigChainMismatchError=class ConfigChainMismatchError extends web3_error_base_BaseWeb3Error{constructor(e,t){super(`Web3Config chain doesnt match in defaultHardfork ${e} and common.hardfork ${t}`),this.code=1101}};let z="An Rpc error has occured with a code of *code*",Q={[-32700]:{message:"Parse error",description:"Invalid JSON"},[-32600]:{message:"Invalid request",description:"JSON is not a valid request object	"},[-32601]:{message:"Method not found",description:"Method does not exist	"},[-32602]:{message:"Invalid params",description:"Invalid method parameters"},[-32603]:{message:"Internal error",description:"Internal JSON-RPC error"},[-32e3]:{message:"Invalid input",description:"Missing or invalid parameters"},[-32001]:{message:"Resource not found",description:"Requested resource not found"},[-32002]:{message:"Resource unavailable",description:"Requested resource not available"},[-32003]:{message:"Transaction rejected",description:"Transaction creation failed"},[-32004]:{message:"Method not supported",description:"Method is not implemented"},[-32005]:{message:"Limit exceeded",description:"Request exceeds defined limit"},[-32006]:{message:"JSON-RPC version not supported",description:"Version of JSON-RPC protocol is not supported"},4001:{name:"User Rejected Request",message:"The user rejected the request."},4100:{name:"Unauthorized",message:"The requested method and/or account has not been authorized by the user."},4200:{name:"Unsupported Method",message:"The Provider does not support the requested method."},4900:{name:"Disconnected",message:"The Provider is disconnected from all chains."},4901:{name:"Chain Disconnected",message:"The Provider is not connected to the requested chain."},"0-999":{name:"",message:"Not used."},1e3:{name:"Normal Closure",message:"The connection successfully completed the purpose for which it was created."},1001:{name:"Going Away",message:"The endpoint is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection."},1002:{name:"Protocol error",message:"The endpoint is terminating the connection due to a protocol error."},1003:{name:"Unsupported Data",message:"The connection is being terminated because the endpoint received data of a type it cannot accept. (For example, a text-only endpoint received binary data.)"},1004:{name:"Reserved",message:"Reserved. A meaning might be defined in the future."},1005:{name:"No Status Rcvd",message:"Reserved. Indicates that no status code was provided even though one was expected."},1006:{name:"Abnormal Closure",message:"Reserved. Indicates that a connection was closed abnormally (that is, with no close frame being sent) when a status code is expected."},1007:{name:"Invalid frame payload data",message:"The endpoint is terminating the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message)."},1008:{name:"Policy Violation",message:"The endpoint is terminating the connection because it received a message that violates its policy. This is a generic status code, used when codes 1003 and 1009 are not suitable."},1009:{name:"Message Too Big",message:"The endpoint is terminating the connection because a data frame was received that is too large."},1010:{name:"Mandatory Ext.",message:"The client is terminating the connection because it expected the server to negotiate one or more extension, but the server didn't."},1011:{name:"Internal Error",message:"The server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request."},1012:{name:"Service Restart",message:"The server is terminating the connection because it is restarting."},1013:{name:"Try Again Later",message:"The server is terminating the connection due to a temporary condition, e.g. it is overloaded and is casting off some of its clients."},1014:{name:"Bad Gateway",message:"The server was acting as a gateway or proxy and received an invalid response from the upstream server. This is similar to 502 HTTP Status Code."},1015:{name:"TLS handshake",message:"Reserved. Indicates that the connection was closed due to a failure to perform a TLS handshake (e.g., the server certificate can't be verified)."},"1016-2999":{name:"",message:"For definition by future revisions of the WebSocket Protocol specification, and for definition by extension specifications."},"3000-3999":{name:"",message:"For use by libraries, frameworks, and applications. These status codes are registered directly with IANA. The interpretation of these codes is undefined by the WebSocket protocol."},"4000-4999":{name:"",message:"For private use, and thus can't be registered. Such codes can be used by prior agreements between WebSocket applications. The interpretation of these codes is undefined by the WebSocket protocol."}};let RpcError=class RpcError extends web3_error_base_BaseWeb3Error{constructor(e,t){super(null!=t?t:z.replace("*code*",e.error.code.toString())),this.code=e.error.code,this.id=e.id,this.jsonrpc=e.jsonrpc,this.jsonRpcError=e.error}toJSON(){return Object.assign(Object.assign({},super.toJSON()),{error:this.jsonRpcError,id:this.id,jsonRpc:this.jsonrpc})}};let EIP1193ProviderRpcError=class EIP1193ProviderRpcError extends web3_error_base_BaseWeb3Error{constructor(e,t){var a,r,i,s;if(e){if(null===(a=Q[e])||void 0===a?void 0:a.message)super(Q[e].message);else{let t=Object.keys(Q).find(t=>"string"==typeof t&&e>=parseInt(t.split("-")[0],10)&&e<=parseInt(t.split("-")[1],10));super(null!==(i=null===(r=Q[null!=t?t:""])||void 0===r?void 0:r.message)&&void 0!==i?i:z.replace("*code*",null!==(s=null==e?void 0:e.toString())&&void 0!==s?s:'""'))}}else super();this.code=e,this.data=t}};let K=new Map;K.set(-32700,{error:class extends RpcError{constructor(e){super(e,Q[-32700].message),this.code=-32700}}}),K.set(-32600,{error:class extends RpcError{constructor(e){super(e,Q[-32600].message),this.code=-32600}}}),K.set(-32601,{error:class extends RpcError{constructor(e){super(e,Q[-32601].message),this.code=-32601}}}),K.set(-32602,{error:class extends RpcError{constructor(e){super(e,Q[-32602].message),this.code=-32602}}}),K.set(-32603,{error:class extends RpcError{constructor(e){super(e,Q[-32603].message),this.code=-32603}}}),K.set(-32e3,{error:class extends RpcError{constructor(e){super(e,Q[-32e3].message),this.code=-32e3}}}),K.set(-32004,{error:class extends RpcError{constructor(e){super(e,Q[-32004].message),this.code=-32004}}}),K.set(-32002,{error:class extends RpcError{constructor(e){super(e,Q[-32002].message),this.code=-32002}}}),K.set(-32003,{error:class extends RpcError{constructor(e){super(e,Q[-32003].message),this.code=-32003}}}),K.set(-32001,{error:class extends RpcError{constructor(e){super(e,Q[-32001].message),this.code=-32001}}}),K.set(-32006,{error:class extends RpcError{constructor(e){super(e,Q[-32006].message),this.code=-32006}}}),K.set(-32005,{error:class extends RpcError{constructor(e){super(e,Q[-32005].message),this.code=-32005}}});let SchemaFormatError=class SchemaFormatError extends web3_error_base_BaseWeb3Error{constructor(e){super(`Format for the type ${e} is unsupported`),this.type=e,this.code=1200}toJSON(){return Object.assign(Object.assign({},super.toJSON()),{type:this.type})}};function number(e){if(!Number.isSafeInteger(e)||e<0)throw Error(`Wrong positive integer: ${e}`)}function bytes(e,...t){if(!(e instanceof Uint8Array))throw Error("Expected Uint8Array");if(t.length>0&&!t.includes(e.length))throw Error(`Expected Uint8Array of length ${t}, not of length=${e.length}`)}let J={number,bool:function(e){if("boolean"!=typeof e)throw Error(`Expected boolean, not ${e}`)},bytes,hash:function(e){if("function"!=typeof e||"function"!=typeof e.create)throw Error("Hash should be wrapped by utils.wrapConstructor");number(e.outputLen),number(e.blockLen)},exists:function(e,t=!0){if(e.destroyed)throw Error("Hash instance has been destroyed");if(t&&e.finished)throw Error("Hash#digest() has already been called")},output:function(e,t){bytes(e);let a=t.outputLen;if(e.length<a)throw Error(`digestInto() expects output buffer of length at least ${a}`)}},$=BigInt(4294967296-1),Y=BigInt(32);function fromBig(e,t=!1){return t?{h:Number(e&$),l:Number(e>>Y&$)}:{h:0|Number(e>>Y&$),l:0|Number(e&$)}}let X={fromBig,split:function(e,t=!1){let a=new Uint32Array(e.length),r=new Uint32Array(e.length);for(let i=0;i<e.length;i++){let{h:s,l:n}=fromBig(e[i],t);[a[i],r[i]]=[s,n]}return[a,r]},toBig:(e,t)=>BigInt(e>>>0)<<Y|BigInt(t>>>0),shrSH:(e,t,a)=>e>>>a,shrSL:(e,t,a)=>e<<32-a|t>>>a,rotrSH:(e,t,a)=>e>>>a|t<<32-a,rotrSL:(e,t,a)=>e<<32-a|t>>>a,rotrBH:(e,t,a)=>e<<64-a|t>>>a-32,rotrBL:(e,t,a)=>e>>>a-32|t<<64-a,rotr32H:(e,t)=>t,rotr32L:(e,t)=>e,rotlSH:(e,t,a)=>e<<a|t>>>32-a,rotlSL:(e,t,a)=>t<<a|e>>>32-a,rotlBH:(e,t,a)=>t<<a-32|e>>>64-a,rotlBL:(e,t,a)=>e<<a-32|t>>>64-a,add:function(e,t,a,r){let i=(t>>>0)+(r>>>0);return{h:e+a+(i/4294967296|0)|0,l:0|i}},add3L:(e,t,a)=>(e>>>0)+(t>>>0)+(a>>>0),add3H:(e,t,a,r)=>t+a+r+(e/4294967296|0)|0,add4L:(e,t,a,r)=>(e>>>0)+(t>>>0)+(a>>>0)+(r>>>0),add4H:(e,t,a,r,i)=>t+a+r+i+(e/4294967296|0)|0,add5H:(e,t,a,r,i,s)=>t+a+r+i+s+(e/4294967296|0)|0,add5L:(e,t,a,r,i)=>(e>>>0)+(t>>>0)+(a>>>0)+(r>>>0)+(i>>>0)};var ee=a(6005),et=a.t(ee,2);let ea=et&&"object"==typeof et&&"webcrypto"in et?ee.webcrypto:void 0,u8a=e=>e instanceof Uint8Array,u32=e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4)),utils_createView=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),rotr=(e,t)=>e<<32-t|e>>>t,er=68===new Uint8Array(new Uint32Array([287454020]).buffer)[0];if(!er)throw Error("Non little-endian hardware is not supported");function utils_utf8ToBytes(e){if("string"!=typeof e)throw Error(`utf8ToBytes expected string, got ${typeof e}`);return new Uint8Array(new TextEncoder().encode(e))}function toBytes(e){if("string"==typeof e&&(e=utils_utf8ToBytes(e)),!u8a(e))throw Error(`expected Uint8Array, got ${typeof e}`);return e}function utils_concatBytes(...e){let t=new Uint8Array(e.reduce((e,t)=>e+t.length,0)),a=0;return e.forEach(e=>{if(!u8a(e))throw Error("Uint8Array expected");t.set(e,a),a+=e.length}),t}Array.from({length:256},(e,t)=>t.toString(16).padStart(2,"0"));let Hash=class Hash{clone(){return this._cloneInto()}};let isPlainObject=e=>"[object Object]"===Object.prototype.toString.call(e)&&e.constructor===Object;function checkOpts(e,t){if(void 0!==t&&("object"!=typeof t||!isPlainObject(t)))throw Error("Options should be object or undefined");let a=Object.assign(e,t);return a}function wrapConstructor(e){let hashC=t=>e().update(toBytes(t)).digest(),t=e();return hashC.outputLen=t.outputLen,hashC.blockLen=t.blockLen,hashC.create=()=>e(),hashC}function utils_randomBytes(e=32){if(ea&&"function"==typeof ea.getRandomValues)return ea.getRandomValues(new Uint8Array(e));throw Error("crypto.getRandomValues must be defined")}let[ei,es,en]=[[],[],[]],eo=BigInt(0),ed=BigInt(1),ep=BigInt(2),el=BigInt(7),em=BigInt(256),ec=BigInt(113);for(let e=0,t=ed,a=1,r=0;e<24;e++){[a,r]=[r,(2*a+3*r)%5],ei.push(2*(5*r+a)),es.push((e+1)*(e+2)/2%64);let i=eo;for(let e=0;e<7;e++)(t=(t<<ed^(t>>el)*ec)%em)&ep&&(i^=ed<<(ed<<BigInt(e))-ed);en.push(i)}let[eu,eh]=X.split(en,!0),rotlH=(e,t,a)=>a>32?X.rotlBH(e,t,a):X.rotlSH(e,t,a),rotlL=(e,t,a)=>a>32?X.rotlBL(e,t,a):X.rotlSL(e,t,a);let Keccak=class Keccak extends Hash{constructor(e,t,a,r=!1,i=24){if(super(),this.blockLen=e,this.suffix=t,this.outputLen=a,this.enableXOF=r,this.rounds=i,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,J.number(a),0>=this.blockLen||this.blockLen>=200)throw Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=u32(this.state)}keccak(){(function(e,t=24){let a=new Uint32Array(10);for(let r=24-t;r<24;r++){for(let t=0;t<10;t++)a[t]=e[t]^e[t+10]^e[t+20]^e[t+30]^e[t+40];for(let t=0;t<10;t+=2){let r=(t+8)%10,i=(t+2)%10,s=a[i],n=a[i+1],o=rotlH(s,n,1)^a[r],d=rotlL(s,n,1)^a[r+1];for(let a=0;a<50;a+=10)e[t+a]^=o,e[t+a+1]^=d}let t=e[2],i=e[3];for(let a=0;a<24;a++){let r=es[a],s=rotlH(t,i,r),n=rotlL(t,i,r),o=ei[a];t=e[o],i=e[o+1],e[o]=s,e[o+1]=n}for(let t=0;t<50;t+=10){for(let r=0;r<10;r++)a[r]=e[t+r];for(let r=0;r<10;r++)e[t+r]^=~a[(r+2)%10]&a[(r+4)%10]}e[0]^=eu[r],e[1]^=eh[r]}a.fill(0)})(this.state32,this.rounds),this.posOut=0,this.pos=0}update(e){J.exists(this);let{blockLen:t,state:a}=this;e=toBytes(e);let r=e.length;for(let i=0;i<r;){let s=Math.min(t-this.pos,r-i);for(let t=0;t<s;t++)a[this.pos++]^=e[i++];this.pos===t&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;let{state:e,suffix:t,pos:a,blockLen:r}=this;e[a]^=t,(128&t)!=0&&a===r-1&&this.keccak(),e[r-1]^=128,this.keccak()}writeInto(e){J.exists(this,!1),J.bytes(e),this.finish();let t=this.state,{blockLen:a}=this;for(let r=0,i=e.length;r<i;){this.posOut>=a&&this.keccak();let s=Math.min(a-this.posOut,i-r);e.set(t.subarray(this.posOut,this.posOut+s),r),this.posOut+=s,r+=s}return e}xofInto(e){if(!this.enableXOF)throw Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return J.number(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(J.output(e,this),this.finished)throw Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){let{blockLen:t,suffix:a,outputLen:r,rounds:i,enableXOF:s}=this;return e||(e=new Keccak(t,a,r,s,i)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=i,e.suffix=a,e.outputLen=r,e.enableXOF=s,e.destroyed=this.destroyed,e}};let gen=(e,t,a)=>wrapConstructor(()=>new Keccak(t,e,a));gen(6,144,28),gen(6,136,32),gen(6,104,48),gen(6,72,64);let ef=gen(1,144,28),ev=gen(1,136,32),eg=gen(1,104,48),ey=gen(1,72,64),genShake=(e,t,a)=>(function(e){let hashC=(t,a)=>e(a).update(toBytes(t)).digest(),t=e({});return hashC.outputLen=t.outputLen,hashC.blockLen=t.blockLen,hashC.create=t=>e(t),hashC})((r={})=>new Keccak(t,e,void 0===r.dkLen?a:r.dkLen,!0));genShake(31,168,16),genShake(31,136,32),J.bool;let eb=J.bytes;function bytesToUtf8(e){if(!(e instanceof Uint8Array))throw TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof e}`);return new TextDecoder().decode(e)}function wrapHash(e){return t=>(J.bytes(t),e(t))}(()=>{let e="object"==typeof globalThis&&"crypto"in globalThis?globalThis.crypto:void 0,t="undefined"!=typeof module&&"function"==typeof module.require&&module.require.bind(module);return t&&!e?t("crypto"):void 0})(),wrapHash(ef);let e_=(()=>{let e=wrapHash(ev);return e.create=ev.create,e})();wrapHash(eg),wrapHash(ey),function(e){e.assertEqual=e=>e,e.assertIs=function(e){},e.assertNever=function(e){throw Error()},e.arrayToEnum=e=>{let t={};for(let a of e)t[a]=a;return t},e.getValidEnumValues=t=>{let a=e.objectKeys(t).filter(e=>"number"!=typeof t[t[e]]),r={};for(let e of a)r[e]=t[e];return e.objectValues(r)},e.objectValues=t=>e.objectKeys(t).map(function(e){return t[e]}),e.objectKeys="function"==typeof Object.keys?e=>Object.keys(e):e=>{let t=[];for(let a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.push(a);return t},e.find=(e,t)=>{for(let a of e)if(t(a))return a},e.isInteger="function"==typeof Number.isInteger?e=>Number.isInteger(e):e=>"number"==typeof e&&isFinite(e)&&Math.floor(e)===e,e.joinValues=function(e,t=" | "){return e.map(e=>"string"==typeof e?`'${e}'`:e).join(t)},e.jsonStringifyReplacer=(e,t)=>"bigint"==typeof t?t.toString():t}(E||(E={})),(x||(x={})).mergeShapes=(e,t)=>({...e,...t});let ew=E.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),getParsedType=e=>{let t=typeof e;switch(t){case"undefined":return ew.undefined;case"string":return ew.string;case"number":return isNaN(e)?ew.nan:ew.number;case"boolean":return ew.boolean;case"function":return ew.function;case"bigint":return ew.bigint;case"symbol":return ew.symbol;case"object":if(Array.isArray(e))return ew.array;if(null===e)return ew.null;if(e.then&&"function"==typeof e.then&&e.catch&&"function"==typeof e.catch)return ew.promise;if("undefined"!=typeof Map&&e instanceof Map)return ew.map;if("undefined"!=typeof Set&&e instanceof Set)return ew.set;if("undefined"!=typeof Date&&e instanceof Date)return ew.date;return ew.object;default:return ew.unknown}},eA=E.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]);let ZodError=class ZodError extends Error{constructor(e){super(),this.issues=[],this.addIssue=e=>{this.issues=[...this.issues,e]},this.addIssues=(e=[])=>{this.issues=[...this.issues,...e]};let t=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,t):this.__proto__=t,this.name="ZodError",this.issues=e}get errors(){return this.issues}format(e){let t=e||function(e){return e.message},a={_errors:[]},processError=e=>{for(let r of e.issues)if("invalid_union"===r.code)r.unionErrors.map(processError);else if("invalid_return_type"===r.code)processError(r.returnTypeError);else if("invalid_arguments"===r.code)processError(r.argumentsError);else if(0===r.path.length)a._errors.push(t(r));else{let e=a,i=0;for(;i<r.path.length;){let a=r.path[i],s=i===r.path.length-1;s?(e[a]=e[a]||{_errors:[]},e[a]._errors.push(t(r))):e[a]=e[a]||{_errors:[]},e=e[a],i++}}};return processError(this),a}toString(){return this.message}get message(){return JSON.stringify(this.issues,E.jsonStringifyReplacer,2)}get isEmpty(){return 0===this.issues.length}flatten(e=e=>e.message){let t={},a=[];for(let r of this.issues)r.path.length>0?(t[r.path[0]]=t[r.path[0]]||[],t[r.path[0]].push(e(r))):a.push(e(r));return{formErrors:a,fieldErrors:t}}get formErrors(){return this.flatten()}};ZodError.create=e=>{let t=new ZodError(e);return t};let errorMap=(e,t)=>{let a;switch(e.code){case eA.invalid_type:a=e.received===ew.undefined?"Required":`Expected ${e.expected}, received ${e.received}`;break;case eA.invalid_literal:a=`Invalid literal value, expected ${JSON.stringify(e.expected,E.jsonStringifyReplacer)}`;break;case eA.unrecognized_keys:a=`Unrecognized key(s) in object: ${E.joinValues(e.keys,", ")}`;break;case eA.invalid_union:a="Invalid input";break;case eA.invalid_union_discriminator:a=`Invalid discriminator value. Expected ${E.joinValues(e.options)}`;break;case eA.invalid_enum_value:a=`Invalid enum value. Expected ${E.joinValues(e.options)}, received '${e.received}'`;break;case eA.invalid_arguments:a="Invalid function arguments";break;case eA.invalid_return_type:a="Invalid function return type";break;case eA.invalid_date:a="Invalid date";break;case eA.invalid_string:"object"==typeof e.validation?"includes"in e.validation?(a=`Invalid input: must include "${e.validation.includes}"`,"number"==typeof e.validation.position&&(a=`${a} at one or more positions greater than or equal to ${e.validation.position}`)):"startsWith"in e.validation?a=`Invalid input: must start with "${e.validation.startsWith}"`:"endsWith"in e.validation?a=`Invalid input: must end with "${e.validation.endsWith}"`:E.assertNever(e.validation):a="regex"!==e.validation?`Invalid ${e.validation}`:"Invalid";break;case eA.too_small:a="array"===e.type?`Array must contain ${e.exact?"exactly":e.inclusive?"at least":"more than"} ${e.minimum} element(s)`:"string"===e.type?`String must contain ${e.exact?"exactly":e.inclusive?"at least":"over"} ${e.minimum} character(s)`:"number"===e.type?`Number must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${e.minimum}`:"date"===e.type?`Date must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(e.minimum))}`:"Invalid input";break;case eA.too_big:a="array"===e.type?`Array must contain ${e.exact?"exactly":e.inclusive?"at most":"less than"} ${e.maximum} element(s)`:"string"===e.type?`String must contain ${e.exact?"exactly":e.inclusive?"at most":"under"} ${e.maximum} character(s)`:"number"===e.type?`Number must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}`:"bigint"===e.type?`BigInt must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}`:"date"===e.type?`Date must be ${e.exact?"exactly":e.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(e.maximum))}`:"Invalid input";break;case eA.custom:a="Invalid input";break;case eA.invalid_intersection_types:a="Intersection results could not be merged";break;case eA.not_multiple_of:a=`Number must be a multiple of ${e.multipleOf}`;break;case eA.not_finite:a="Number must be finite";break;default:a=t.defaultError,E.assertNever(e)}return{message:a}},eE=errorMap;function getErrorMap(){return eE}let makeIssue=e=>{let{data:t,path:a,errorMaps:r,issueData:i}=e,s=[...a,...i.path||[]],n={...i,path:s},o="",d=r.filter(e=>!!e).slice().reverse();for(let e of d)o=e(n,{data:t,defaultError:o}).message;return{...i,path:s,message:i.message||o}};function addIssueToContext(e,t){let a=makeIssue({issueData:t,data:e.data,path:e.path,errorMaps:[e.common.contextualErrorMap,e.schemaErrorMap,getErrorMap(),errorMap].filter(e=>!!e)});e.common.issues.push(a)}let ParseStatus=class ParseStatus{constructor(){this.value="valid"}dirty(){"valid"===this.value&&(this.value="dirty")}abort(){"aborted"!==this.value&&(this.value="aborted")}static mergeArray(e,t){let a=[];for(let r of t){if("aborted"===r.status)return ex;"dirty"===r.status&&e.dirty(),a.push(r.value)}return{status:e.value,value:a}}static async mergeObjectAsync(e,t){let a=[];for(let e of t)a.push({key:await e.key,value:await e.value});return ParseStatus.mergeObjectSync(e,a)}static mergeObjectSync(e,t){let a={};for(let r of t){let{key:t,value:i}=r;if("aborted"===t.status||"aborted"===i.status)return ex;"dirty"===t.status&&e.dirty(),"dirty"===i.status&&e.dirty(),"__proto__"!==t.value&&(void 0!==i.value||r.alwaysSet)&&(a[t.value]=i.value)}return{status:e.value,value:a}}};let ex=Object.freeze({status:"aborted"}),DIRTY=e=>({status:"dirty",value:e}),OK=e=>({status:"valid",value:e}),isAborted=e=>"aborted"===e.status,isDirty=e=>"dirty"===e.status,isValid=e=>"valid"===e.status,isAsync=e=>"undefined"!=typeof Promise&&e instanceof Promise;!function(e){e.errToObj=e=>"string"==typeof e?{message:e}:e||{},e.toString=e=>"string"==typeof e?e:null==e?void 0:e.message}(S||(S={}));let ParseInputLazyPath=class ParseInputLazyPath{constructor(e,t,a,r){this._cachedPath=[],this.parent=e,this.data=t,this._path=a,this._key=r}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}};let handleResult=(e,t)=>{if(isValid(t))return{success:!0,data:t.value};if(!e.common.issues.length)throw Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;let t=new ZodError(e.common.issues);return this._error=t,this._error}}};function processCreateParams(e){if(!e)return{};let{errorMap:t,invalid_type_error:a,required_error:r,description:i}=e;if(t&&(a||r))throw Error('Can\'t use "invalid_type_error" or "required_error" in conjunction with custom error map.');return t?{errorMap:t,description:i}:{errorMap:(e,t)=>"invalid_type"!==e.code?{message:t.defaultError}:void 0===t.data?{message:null!=r?r:t.defaultError}:{message:null!=a?a:t.defaultError},description:i}}let ZodType=class ZodType{constructor(e){this.spa=this.safeParseAsync,this._def=e,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this)}get description(){return this._def.description}_getType(e){return getParsedType(e.data)}_getOrReturnCtx(e,t){return t||{common:e.parent.common,data:e.data,parsedType:getParsedType(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}_processInputParams(e){return{status:new ParseStatus,ctx:{common:e.parent.common,data:e.data,parsedType:getParsedType(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}}_parseSync(e){let t=this._parse(e);if(isAsync(t))throw Error("Synchronous parse encountered promise.");return t}_parseAsync(e){let t=this._parse(e);return Promise.resolve(t)}parse(e,t){let a=this.safeParse(e,t);if(a.success)return a.data;throw a.error}safeParse(e,t){var a;let r={common:{issues:[],async:null!==(a=null==t?void 0:t.async)&&void 0!==a&&a,contextualErrorMap:null==t?void 0:t.errorMap},path:(null==t?void 0:t.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:getParsedType(e)},i=this._parseSync({data:e,path:r.path,parent:r});return handleResult(r,i)}async parseAsync(e,t){let a=await this.safeParseAsync(e,t);if(a.success)return a.data;throw a.error}async safeParseAsync(e,t){let a={common:{issues:[],contextualErrorMap:null==t?void 0:t.errorMap,async:!0},path:(null==t?void 0:t.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:getParsedType(e)},r=this._parse({data:e,path:a.path,parent:a}),i=await (isAsync(r)?r:Promise.resolve(r));return handleResult(a,i)}refine(e,t){let getIssueProperties=e=>"string"==typeof t||void 0===t?{message:t}:"function"==typeof t?t(e):t;return this._refinement((t,a)=>{let r=e(t),setError=()=>a.addIssue({code:eA.custom,...getIssueProperties(t)});return"undefined"!=typeof Promise&&r instanceof Promise?r.then(e=>!!e||(setError(),!1)):!!r||(setError(),!1)})}refinement(e,t){return this._refinement((a,r)=>!!e(a)||(r.addIssue("function"==typeof t?t(a,r):t),!1))}_refinement(e){return new ZodEffects({schema:this,typeName:T.ZodEffects,effect:{type:"refinement",refinement:e}})}superRefine(e){return this._refinement(e)}optional(){return ZodOptional.create(this,this._def)}nullable(){return ZodNullable.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return ZodArray.create(this,this._def)}promise(){return ZodPromise.create(this,this._def)}or(e){return ZodUnion.create([this,e],this._def)}and(e){return ZodIntersection.create(this,e,this._def)}transform(e){return new ZodEffects({...processCreateParams(this._def),schema:this,typeName:T.ZodEffects,effect:{type:"transform",transform:e}})}default(e){return new ZodDefault({...processCreateParams(this._def),innerType:this,defaultValue:"function"==typeof e?e:()=>e,typeName:T.ZodDefault})}brand(){return new ZodBranded({typeName:T.ZodBranded,type:this,...processCreateParams(this._def)})}catch(e){return new ZodCatch({...processCreateParams(this._def),innerType:this,catchValue:"function"==typeof e?e:()=>e,typeName:T.ZodCatch})}describe(e){let t=this.constructor;return new t({...this._def,description:e})}pipe(e){return ZodPipeline.create(this,e)}readonly(){return ZodReadonly.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}};let eS=/^c[^\s-]{8,}$/i,eT=/^[a-z][a-z0-9]*$/,eI=/^[0-9A-HJKMNP-TV-Z]{26}$/,ek=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,eC=/^(?!\.)(?!.*\.\.)([A-Z0-9_+-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,eN=/^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/,eB=/^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,datetimeRegex=e=>e.precision?e.offset?RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${e.precision}}(([+-]\\d{2}(:?\\d{2})?)|Z)$`):RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${e.precision}}Z$`):0===e.precision?e.offset?RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(([+-]\\d{2}(:?\\d{2})?)|Z)$"):RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$"):e.offset?RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(([+-]\\d{2}(:?\\d{2})?)|Z)$"):RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$");let ZodString=class ZodString extends ZodType{_parse(e){let t;this._def.coerce&&(e.data=String(e.data));let a=this._getType(e);if(a!==ew.string){let t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:eA.invalid_type,expected:ew.string,received:t.parsedType}),ex}let i=new ParseStatus;for(let a of this._def.checks)if("min"===a.kind)e.data.length<a.value&&(addIssueToContext(t=this._getOrReturnCtx(e,t),{code:eA.too_small,minimum:a.value,type:"string",inclusive:!0,exact:!1,message:a.message}),i.dirty());else if("max"===a.kind)e.data.length>a.value&&(addIssueToContext(t=this._getOrReturnCtx(e,t),{code:eA.too_big,maximum:a.value,type:"string",inclusive:!0,exact:!1,message:a.message}),i.dirty());else if("length"===a.kind){let r=e.data.length>a.value,s=e.data.length<a.value;(r||s)&&(t=this._getOrReturnCtx(e,t),r?addIssueToContext(t,{code:eA.too_big,maximum:a.value,type:"string",inclusive:!0,exact:!0,message:a.message}):s&&addIssueToContext(t,{code:eA.too_small,minimum:a.value,type:"string",inclusive:!0,exact:!0,message:a.message}),i.dirty())}else if("email"===a.kind)eC.test(e.data)||(addIssueToContext(t=this._getOrReturnCtx(e,t),{validation:"email",code:eA.invalid_string,message:a.message}),i.dirty());else if("emoji"===a.kind)r||(r=RegExp("^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$","u")),r.test(e.data)||(addIssueToContext(t=this._getOrReturnCtx(e,t),{validation:"emoji",code:eA.invalid_string,message:a.message}),i.dirty());else if("uuid"===a.kind)ek.test(e.data)||(addIssueToContext(t=this._getOrReturnCtx(e,t),{validation:"uuid",code:eA.invalid_string,message:a.message}),i.dirty());else if("cuid"===a.kind)eS.test(e.data)||(addIssueToContext(t=this._getOrReturnCtx(e,t),{validation:"cuid",code:eA.invalid_string,message:a.message}),i.dirty());else if("cuid2"===a.kind)eT.test(e.data)||(addIssueToContext(t=this._getOrReturnCtx(e,t),{validation:"cuid2",code:eA.invalid_string,message:a.message}),i.dirty());else if("ulid"===a.kind)eI.test(e.data)||(addIssueToContext(t=this._getOrReturnCtx(e,t),{validation:"ulid",code:eA.invalid_string,message:a.message}),i.dirty());else if("url"===a.kind)try{new URL(e.data)}catch(r){addIssueToContext(t=this._getOrReturnCtx(e,t),{validation:"url",code:eA.invalid_string,message:a.message}),i.dirty()}else if("regex"===a.kind){a.regex.lastIndex=0;let r=a.regex.test(e.data);r||(addIssueToContext(t=this._getOrReturnCtx(e,t),{validation:"regex",code:eA.invalid_string,message:a.message}),i.dirty())}else if("trim"===a.kind)e.data=e.data.trim();else if("includes"===a.kind)e.data.includes(a.value,a.position)||(addIssueToContext(t=this._getOrReturnCtx(e,t),{code:eA.invalid_string,validation:{includes:a.value,position:a.position},message:a.message}),i.dirty());else if("toLowerCase"===a.kind)e.data=e.data.toLowerCase();else if("toUpperCase"===a.kind)e.data=e.data.toUpperCase();else if("startsWith"===a.kind)e.data.startsWith(a.value)||(addIssueToContext(t=this._getOrReturnCtx(e,t),{code:eA.invalid_string,validation:{startsWith:a.value},message:a.message}),i.dirty());else if("endsWith"===a.kind)e.data.endsWith(a.value)||(addIssueToContext(t=this._getOrReturnCtx(e,t),{code:eA.invalid_string,validation:{endsWith:a.value},message:a.message}),i.dirty());else if("datetime"===a.kind){let r=datetimeRegex(a);r.test(e.data)||(addIssueToContext(t=this._getOrReturnCtx(e,t),{code:eA.invalid_string,validation:"datetime",message:a.message}),i.dirty())}else if("ip"===a.kind){var s,n;s=e.data,("v4"===(n=a.version)||!n)&&eN.test(s)||("v6"===n||!n)&&eB.test(s)||(addIssueToContext(t=this._getOrReturnCtx(e,t),{validation:"ip",code:eA.invalid_string,message:a.message}),i.dirty())}else E.assertNever(a);return{status:i.value,value:e.data}}_regex(e,t,a){return this.refinement(t=>e.test(t),{validation:t,code:eA.invalid_string,...S.errToObj(a)})}_addCheck(e){return new ZodString({...this._def,checks:[...this._def.checks,e]})}email(e){return this._addCheck({kind:"email",...S.errToObj(e)})}url(e){return this._addCheck({kind:"url",...S.errToObj(e)})}emoji(e){return this._addCheck({kind:"emoji",...S.errToObj(e)})}uuid(e){return this._addCheck({kind:"uuid",...S.errToObj(e)})}cuid(e){return this._addCheck({kind:"cuid",...S.errToObj(e)})}cuid2(e){return this._addCheck({kind:"cuid2",...S.errToObj(e)})}ulid(e){return this._addCheck({kind:"ulid",...S.errToObj(e)})}ip(e){return this._addCheck({kind:"ip",...S.errToObj(e)})}datetime(e){var t;return"string"==typeof e?this._addCheck({kind:"datetime",precision:null,offset:!1,message:e}):this._addCheck({kind:"datetime",precision:void 0===(null==e?void 0:e.precision)?null:null==e?void 0:e.precision,offset:null!==(t=null==e?void 0:e.offset)&&void 0!==t&&t,...S.errToObj(null==e?void 0:e.message)})}regex(e,t){return this._addCheck({kind:"regex",regex:e,...S.errToObj(t)})}includes(e,t){return this._addCheck({kind:"includes",value:e,position:null==t?void 0:t.position,...S.errToObj(null==t?void 0:t.message)})}startsWith(e,t){return this._addCheck({kind:"startsWith",value:e,...S.errToObj(t)})}endsWith(e,t){return this._addCheck({kind:"endsWith",value:e,...S.errToObj(t)})}min(e,t){return this._addCheck({kind:"min",value:e,...S.errToObj(t)})}max(e,t){return this._addCheck({kind:"max",value:e,...S.errToObj(t)})}length(e,t){return this._addCheck({kind:"length",value:e,...S.errToObj(t)})}nonempty(e){return this.min(1,S.errToObj(e))}trim(){return new ZodString({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new ZodString({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new ZodString({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return!!this._def.checks.find(e=>"datetime"===e.kind)}get isEmail(){return!!this._def.checks.find(e=>"email"===e.kind)}get isURL(){return!!this._def.checks.find(e=>"url"===e.kind)}get isEmoji(){return!!this._def.checks.find(e=>"emoji"===e.kind)}get isUUID(){return!!this._def.checks.find(e=>"uuid"===e.kind)}get isCUID(){return!!this._def.checks.find(e=>"cuid"===e.kind)}get isCUID2(){return!!this._def.checks.find(e=>"cuid2"===e.kind)}get isULID(){return!!this._def.checks.find(e=>"ulid"===e.kind)}get isIP(){return!!this._def.checks.find(e=>"ip"===e.kind)}get minLength(){let e=null;for(let t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return e}get maxLength(){let e=null;for(let t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return e}};ZodString.create=e=>{var t;return new ZodString({checks:[],typeName:T.ZodString,coerce:null!==(t=null==e?void 0:e.coerce)&&void 0!==t&&t,...processCreateParams(e)})};let ZodNumber=class ZodNumber extends ZodType{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(e){let t;this._def.coerce&&(e.data=Number(e.data));let a=this._getType(e);if(a!==ew.number){let t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:eA.invalid_type,expected:ew.number,received:t.parsedType}),ex}let r=new ParseStatus;for(let a of this._def.checks)if("int"===a.kind)E.isInteger(e.data)||(addIssueToContext(t=this._getOrReturnCtx(e,t),{code:eA.invalid_type,expected:"integer",received:"float",message:a.message}),r.dirty());else if("min"===a.kind){let i=a.inclusive?e.data<a.value:e.data<=a.value;i&&(addIssueToContext(t=this._getOrReturnCtx(e,t),{code:eA.too_small,minimum:a.value,type:"number",inclusive:a.inclusive,exact:!1,message:a.message}),r.dirty())}else if("max"===a.kind){let i=a.inclusive?e.data>a.value:e.data>=a.value;i&&(addIssueToContext(t=this._getOrReturnCtx(e,t),{code:eA.too_big,maximum:a.value,type:"number",inclusive:a.inclusive,exact:!1,message:a.message}),r.dirty())}else"multipleOf"===a.kind?0!==function(e,t){let a=(e.toString().split(".")[1]||"").length,r=(t.toString().split(".")[1]||"").length,i=a>r?a:r,s=parseInt(e.toFixed(i).replace(".","")),n=parseInt(t.toFixed(i).replace(".",""));return s%n/Math.pow(10,i)}(e.data,a.value)&&(addIssueToContext(t=this._getOrReturnCtx(e,t),{code:eA.not_multiple_of,multipleOf:a.value,message:a.message}),r.dirty()):"finite"===a.kind?Number.isFinite(e.data)||(addIssueToContext(t=this._getOrReturnCtx(e,t),{code:eA.not_finite,message:a.message}),r.dirty()):E.assertNever(a);return{status:r.value,value:e.data}}gte(e,t){return this.setLimit("min",e,!0,S.toString(t))}gt(e,t){return this.setLimit("min",e,!1,S.toString(t))}lte(e,t){return this.setLimit("max",e,!0,S.toString(t))}lt(e,t){return this.setLimit("max",e,!1,S.toString(t))}setLimit(e,t,a,r){return new ZodNumber({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:a,message:S.toString(r)}]})}_addCheck(e){return new ZodNumber({...this._def,checks:[...this._def.checks,e]})}int(e){return this._addCheck({kind:"int",message:S.toString(e)})}positive(e){return this._addCheck({kind:"min",value:0,inclusive:!1,message:S.toString(e)})}negative(e){return this._addCheck({kind:"max",value:0,inclusive:!1,message:S.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:0,inclusive:!0,message:S.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:0,inclusive:!0,message:S.toString(e)})}multipleOf(e,t){return this._addCheck({kind:"multipleOf",value:e,message:S.toString(t)})}finite(e){return this._addCheck({kind:"finite",message:S.toString(e)})}safe(e){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:S.toString(e)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:S.toString(e)})}get minValue(){let e=null;for(let t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(let t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return e}get isInt(){return!!this._def.checks.find(e=>"int"===e.kind||"multipleOf"===e.kind&&E.isInteger(e.value))}get isFinite(){let e=null,t=null;for(let a of this._def.checks){if("finite"===a.kind||"int"===a.kind||"multipleOf"===a.kind)return!0;"min"===a.kind?(null===t||a.value>t)&&(t=a.value):"max"===a.kind&&(null===e||a.value<e)&&(e=a.value)}return Number.isFinite(t)&&Number.isFinite(e)}};ZodNumber.create=e=>new ZodNumber({checks:[],typeName:T.ZodNumber,coerce:(null==e?void 0:e.coerce)||!1,...processCreateParams(e)});let ZodBigInt=class ZodBigInt extends ZodType{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(e){let t;this._def.coerce&&(e.data=BigInt(e.data));let a=this._getType(e);if(a!==ew.bigint){let t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:eA.invalid_type,expected:ew.bigint,received:t.parsedType}),ex}let r=new ParseStatus;for(let a of this._def.checks)if("min"===a.kind){let i=a.inclusive?e.data<a.value:e.data<=a.value;i&&(addIssueToContext(t=this._getOrReturnCtx(e,t),{code:eA.too_small,type:"bigint",minimum:a.value,inclusive:a.inclusive,message:a.message}),r.dirty())}else if("max"===a.kind){let i=a.inclusive?e.data>a.value:e.data>=a.value;i&&(addIssueToContext(t=this._getOrReturnCtx(e,t),{code:eA.too_big,type:"bigint",maximum:a.value,inclusive:a.inclusive,message:a.message}),r.dirty())}else"multipleOf"===a.kind?e.data%a.value!==BigInt(0)&&(addIssueToContext(t=this._getOrReturnCtx(e,t),{code:eA.not_multiple_of,multipleOf:a.value,message:a.message}),r.dirty()):E.assertNever(a);return{status:r.value,value:e.data}}gte(e,t){return this.setLimit("min",e,!0,S.toString(t))}gt(e,t){return this.setLimit("min",e,!1,S.toString(t))}lte(e,t){return this.setLimit("max",e,!0,S.toString(t))}lt(e,t){return this.setLimit("max",e,!1,S.toString(t))}setLimit(e,t,a,r){return new ZodBigInt({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:a,message:S.toString(r)}]})}_addCheck(e){return new ZodBigInt({...this._def,checks:[...this._def.checks,e]})}positive(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:S.toString(e)})}negative(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:S.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:S.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:S.toString(e)})}multipleOf(e,t){return this._addCheck({kind:"multipleOf",value:e,message:S.toString(t)})}get minValue(){let e=null;for(let t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(let t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return e}};ZodBigInt.create=e=>{var t;return new ZodBigInt({checks:[],typeName:T.ZodBigInt,coerce:null!==(t=null==e?void 0:e.coerce)&&void 0!==t&&t,...processCreateParams(e)})};let ZodBoolean=class ZodBoolean extends ZodType{_parse(e){this._def.coerce&&(e.data=!!e.data);let t=this._getType(e);if(t!==ew.boolean){let t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:eA.invalid_type,expected:ew.boolean,received:t.parsedType}),ex}return OK(e.data)}};ZodBoolean.create=e=>new ZodBoolean({typeName:T.ZodBoolean,coerce:(null==e?void 0:e.coerce)||!1,...processCreateParams(e)});let ZodDate=class ZodDate extends ZodType{_parse(e){let t;this._def.coerce&&(e.data=new Date(e.data));let a=this._getType(e);if(a!==ew.date){let t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:eA.invalid_type,expected:ew.date,received:t.parsedType}),ex}if(isNaN(e.data.getTime())){let t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:eA.invalid_date}),ex}let r=new ParseStatus;for(let a of this._def.checks)"min"===a.kind?e.data.getTime()<a.value&&(addIssueToContext(t=this._getOrReturnCtx(e,t),{code:eA.too_small,message:a.message,inclusive:!0,exact:!1,minimum:a.value,type:"date"}),r.dirty()):"max"===a.kind?e.data.getTime()>a.value&&(addIssueToContext(t=this._getOrReturnCtx(e,t),{code:eA.too_big,message:a.message,inclusive:!0,exact:!1,maximum:a.value,type:"date"}),r.dirty()):E.assertNever(a);return{status:r.value,value:new Date(e.data.getTime())}}_addCheck(e){return new ZodDate({...this._def,checks:[...this._def.checks,e]})}min(e,t){return this._addCheck({kind:"min",value:e.getTime(),message:S.toString(t)})}max(e,t){return this._addCheck({kind:"max",value:e.getTime(),message:S.toString(t)})}get minDate(){let e=null;for(let t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return null!=e?new Date(e):null}get maxDate(){let e=null;for(let t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return null!=e?new Date(e):null}};ZodDate.create=e=>new ZodDate({checks:[],coerce:(null==e?void 0:e.coerce)||!1,typeName:T.ZodDate,...processCreateParams(e)});let ZodSymbol=class ZodSymbol extends ZodType{_parse(e){let t=this._getType(e);if(t!==ew.symbol){let t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:eA.invalid_type,expected:ew.symbol,received:t.parsedType}),ex}return OK(e.data)}};ZodSymbol.create=e=>new ZodSymbol({typeName:T.ZodSymbol,...processCreateParams(e)});let ZodUndefined=class ZodUndefined extends ZodType{_parse(e){let t=this._getType(e);if(t!==ew.undefined){let t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:eA.invalid_type,expected:ew.undefined,received:t.parsedType}),ex}return OK(e.data)}};ZodUndefined.create=e=>new ZodUndefined({typeName:T.ZodUndefined,...processCreateParams(e)});let ZodNull=class ZodNull extends ZodType{_parse(e){let t=this._getType(e);if(t!==ew.null){let t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:eA.invalid_type,expected:ew.null,received:t.parsedType}),ex}return OK(e.data)}};ZodNull.create=e=>new ZodNull({typeName:T.ZodNull,...processCreateParams(e)});let ZodAny=class ZodAny extends ZodType{constructor(){super(...arguments),this._any=!0}_parse(e){return OK(e.data)}};ZodAny.create=e=>new ZodAny({typeName:T.ZodAny,...processCreateParams(e)});let ZodUnknown=class ZodUnknown extends ZodType{constructor(){super(...arguments),this._unknown=!0}_parse(e){return OK(e.data)}};ZodUnknown.create=e=>new ZodUnknown({typeName:T.ZodUnknown,...processCreateParams(e)});let ZodNever=class ZodNever extends ZodType{_parse(e){let t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:eA.invalid_type,expected:ew.never,received:t.parsedType}),ex}};ZodNever.create=e=>new ZodNever({typeName:T.ZodNever,...processCreateParams(e)});let ZodVoid=class ZodVoid extends ZodType{_parse(e){let t=this._getType(e);if(t!==ew.undefined){let t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:eA.invalid_type,expected:ew.void,received:t.parsedType}),ex}return OK(e.data)}};ZodVoid.create=e=>new ZodVoid({typeName:T.ZodVoid,...processCreateParams(e)});let ZodArray=class ZodArray extends ZodType{_parse(e){let{ctx:t,status:a}=this._processInputParams(e),r=this._def;if(t.parsedType!==ew.array)return addIssueToContext(t,{code:eA.invalid_type,expected:ew.array,received:t.parsedType}),ex;if(null!==r.exactLength){let e=t.data.length>r.exactLength.value,i=t.data.length<r.exactLength.value;(e||i)&&(addIssueToContext(t,{code:e?eA.too_big:eA.too_small,minimum:i?r.exactLength.value:void 0,maximum:e?r.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:r.exactLength.message}),a.dirty())}if(null!==r.minLength&&t.data.length<r.minLength.value&&(addIssueToContext(t,{code:eA.too_small,minimum:r.minLength.value,type:"array",inclusive:!0,exact:!1,message:r.minLength.message}),a.dirty()),null!==r.maxLength&&t.data.length>r.maxLength.value&&(addIssueToContext(t,{code:eA.too_big,maximum:r.maxLength.value,type:"array",inclusive:!0,exact:!1,message:r.maxLength.message}),a.dirty()),t.common.async)return Promise.all([...t.data].map((e,a)=>r.type._parseAsync(new ParseInputLazyPath(t,e,t.path,a)))).then(e=>ParseStatus.mergeArray(a,e));let i=[...t.data].map((e,a)=>r.type._parseSync(new ParseInputLazyPath(t,e,t.path,a)));return ParseStatus.mergeArray(a,i)}get element(){return this._def.type}min(e,t){return new ZodArray({...this._def,minLength:{value:e,message:S.toString(t)}})}max(e,t){return new ZodArray({...this._def,maxLength:{value:e,message:S.toString(t)}})}length(e,t){return new ZodArray({...this._def,exactLength:{value:e,message:S.toString(t)}})}nonempty(e){return this.min(1,e)}};ZodArray.create=(e,t)=>new ZodArray({type:e,minLength:null,maxLength:null,exactLength:null,typeName:T.ZodArray,...processCreateParams(t)});let ZodObject=class ZodObject extends ZodType{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(null!==this._cached)return this._cached;let e=this._def.shape(),t=E.objectKeys(e);return this._cached={shape:e,keys:t}}_parse(e){let t=this._getType(e);if(t!==ew.object){let t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:eA.invalid_type,expected:ew.object,received:t.parsedType}),ex}let{status:a,ctx:r}=this._processInputParams(e),{shape:i,keys:s}=this._getCached(),n=[];if(!(this._def.catchall instanceof ZodNever&&"strip"===this._def.unknownKeys))for(let e in r.data)s.includes(e)||n.push(e);let o=[];for(let e of s){let t=i[e],a=r.data[e];o.push({key:{status:"valid",value:e},value:t._parse(new ParseInputLazyPath(r,a,r.path,e)),alwaysSet:e in r.data})}if(this._def.catchall instanceof ZodNever){let e=this._def.unknownKeys;if("passthrough"===e)for(let e of n)o.push({key:{status:"valid",value:e},value:{status:"valid",value:r.data[e]}});else if("strict"===e)n.length>0&&(addIssueToContext(r,{code:eA.unrecognized_keys,keys:n}),a.dirty());else if("strip"===e);else throw Error("Internal ZodObject error: invalid unknownKeys value.")}else{let e=this._def.catchall;for(let t of n){let a=r.data[t];o.push({key:{status:"valid",value:t},value:e._parse(new ParseInputLazyPath(r,a,r.path,t)),alwaysSet:t in r.data})}}return r.common.async?Promise.resolve().then(async()=>{let e=[];for(let t of o){let a=await t.key;e.push({key:a,value:await t.value,alwaysSet:t.alwaysSet})}return e}).then(e=>ParseStatus.mergeObjectSync(a,e)):ParseStatus.mergeObjectSync(a,o)}get shape(){return this._def.shape()}strict(e){return S.errToObj,new ZodObject({...this._def,unknownKeys:"strict",...void 0!==e?{errorMap:(t,a)=>{var r,i,s,n;let o=null!==(s=null===(i=(r=this._def).errorMap)||void 0===i?void 0:i.call(r,t,a).message)&&void 0!==s?s:a.defaultError;return"unrecognized_keys"===t.code?{message:null!==(n=S.errToObj(e).message)&&void 0!==n?n:o}:{message:o}}}:{}})}strip(){return new ZodObject({...this._def,unknownKeys:"strip"})}passthrough(){return new ZodObject({...this._def,unknownKeys:"passthrough"})}extend(e){return new ZodObject({...this._def,shape:()=>({...this._def.shape(),...e})})}merge(e){let t=new ZodObject({unknownKeys:e._def.unknownKeys,catchall:e._def.catchall,shape:()=>({...this._def.shape(),...e._def.shape()}),typeName:T.ZodObject});return t}setKey(e,t){return this.augment({[e]:t})}catchall(e){return new ZodObject({...this._def,catchall:e})}pick(e){let t={};return E.objectKeys(e).forEach(a=>{e[a]&&this.shape[a]&&(t[a]=this.shape[a])}),new ZodObject({...this._def,shape:()=>t})}omit(e){let t={};return E.objectKeys(this.shape).forEach(a=>{e[a]||(t[a]=this.shape[a])}),new ZodObject({...this._def,shape:()=>t})}deepPartial(){return function deepPartialify(e){if(e instanceof ZodObject){let t={};for(let a in e.shape){let r=e.shape[a];t[a]=ZodOptional.create(deepPartialify(r))}return new ZodObject({...e._def,shape:()=>t})}return e instanceof ZodArray?new ZodArray({...e._def,type:deepPartialify(e.element)}):e instanceof ZodOptional?ZodOptional.create(deepPartialify(e.unwrap())):e instanceof ZodNullable?ZodNullable.create(deepPartialify(e.unwrap())):e instanceof ZodTuple?ZodTuple.create(e.items.map(e=>deepPartialify(e))):e}(this)}partial(e){let t={};return E.objectKeys(this.shape).forEach(a=>{let r=this.shape[a];e&&!e[a]?t[a]=r:t[a]=r.optional()}),new ZodObject({...this._def,shape:()=>t})}required(e){let t={};return E.objectKeys(this.shape).forEach(a=>{if(e&&!e[a])t[a]=this.shape[a];else{let e=this.shape[a],r=e;for(;r instanceof ZodOptional;)r=r._def.innerType;t[a]=r}}),new ZodObject({...this._def,shape:()=>t})}keyof(){return createZodEnum(E.objectKeys(this.shape))}};ZodObject.create=(e,t)=>new ZodObject({shape:()=>e,unknownKeys:"strip",catchall:ZodNever.create(),typeName:T.ZodObject,...processCreateParams(t)}),ZodObject.strictCreate=(e,t)=>new ZodObject({shape:()=>e,unknownKeys:"strict",catchall:ZodNever.create(),typeName:T.ZodObject,...processCreateParams(t)}),ZodObject.lazycreate=(e,t)=>new ZodObject({shape:e,unknownKeys:"strip",catchall:ZodNever.create(),typeName:T.ZodObject,...processCreateParams(t)});let ZodUnion=class ZodUnion extends ZodType{_parse(e){let{ctx:t}=this._processInputParams(e),a=this._def.options;if(t.common.async)return Promise.all(a.map(async e=>{let a={...t,common:{...t.common,issues:[]},parent:null};return{result:await e._parseAsync({data:t.data,path:t.path,parent:a}),ctx:a}})).then(function(e){for(let t of e)if("valid"===t.result.status)return t.result;for(let a of e)if("dirty"===a.result.status)return t.common.issues.push(...a.ctx.common.issues),a.result;let a=e.map(e=>new ZodError(e.ctx.common.issues));return addIssueToContext(t,{code:eA.invalid_union,unionErrors:a}),ex});{let e;let r=[];for(let i of a){let a={...t,common:{...t.common,issues:[]},parent:null},s=i._parseSync({data:t.data,path:t.path,parent:a});if("valid"===s.status)return s;"dirty"!==s.status||e||(e={result:s,ctx:a}),a.common.issues.length&&r.push(a.common.issues)}if(e)return t.common.issues.push(...e.ctx.common.issues),e.result;let i=r.map(e=>new ZodError(e));return addIssueToContext(t,{code:eA.invalid_union,unionErrors:i}),ex}}get options(){return this._def.options}};ZodUnion.create=(e,t)=>new ZodUnion({options:e,typeName:T.ZodUnion,...processCreateParams(t)});let getDiscriminator=e=>{if(e instanceof ZodLazy)return getDiscriminator(e.schema);if(e instanceof ZodEffects)return getDiscriminator(e.innerType());if(e instanceof ZodLiteral)return[e.value];if(e instanceof ZodEnum)return e.options;if(e instanceof ZodNativeEnum)return Object.keys(e.enum);if(e instanceof ZodDefault)return getDiscriminator(e._def.innerType);if(e instanceof ZodUndefined)return[void 0];else if(e instanceof ZodNull)return[null];else return null};let ZodDiscriminatedUnion=class ZodDiscriminatedUnion extends ZodType{_parse(e){let{ctx:t}=this._processInputParams(e);if(t.parsedType!==ew.object)return addIssueToContext(t,{code:eA.invalid_type,expected:ew.object,received:t.parsedType}),ex;let a=this.discriminator,r=t.data[a],i=this.optionsMap.get(r);return i?t.common.async?i._parseAsync({data:t.data,path:t.path,parent:t}):i._parseSync({data:t.data,path:t.path,parent:t}):(addIssueToContext(t,{code:eA.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[a]}),ex)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(e,t,a){let r=new Map;for(let a of t){let t=getDiscriminator(a.shape[e]);if(!t)throw Error(`A discriminator value for key \`${e}\` could not be extracted from all schema options`);for(let i of t){if(r.has(i))throw Error(`Discriminator property ${String(e)} has duplicate value ${String(i)}`);r.set(i,a)}}return new ZodDiscriminatedUnion({typeName:T.ZodDiscriminatedUnion,discriminator:e,options:t,optionsMap:r,...processCreateParams(a)})}};let ZodIntersection=class ZodIntersection extends ZodType{_parse(e){let{status:t,ctx:a}=this._processInputParams(e),handleParsed=(e,r)=>{if(isAborted(e)||isAborted(r))return ex;let i=function mergeValues(e,t){let a=getParsedType(e),r=getParsedType(t);if(e===t)return{valid:!0,data:e};if(a===ew.object&&r===ew.object){let a=E.objectKeys(t),r=E.objectKeys(e).filter(e=>-1!==a.indexOf(e)),i={...e,...t};for(let a of r){let r=mergeValues(e[a],t[a]);if(!r.valid)return{valid:!1};i[a]=r.data}return{valid:!0,data:i}}if(a===ew.array&&r===ew.array){if(e.length!==t.length)return{valid:!1};let a=[];for(let r=0;r<e.length;r++){let i=e[r],s=t[r],n=mergeValues(i,s);if(!n.valid)return{valid:!1};a.push(n.data)}return{valid:!0,data:a}}return a===ew.date&&r===ew.date&&+e==+t?{valid:!0,data:e}:{valid:!1}}(e.value,r.value);return i.valid?((isDirty(e)||isDirty(r))&&t.dirty(),{status:t.value,value:i.data}):(addIssueToContext(a,{code:eA.invalid_intersection_types}),ex)};return a.common.async?Promise.all([this._def.left._parseAsync({data:a.data,path:a.path,parent:a}),this._def.right._parseAsync({data:a.data,path:a.path,parent:a})]).then(([e,t])=>handleParsed(e,t)):handleParsed(this._def.left._parseSync({data:a.data,path:a.path,parent:a}),this._def.right._parseSync({data:a.data,path:a.path,parent:a}))}};ZodIntersection.create=(e,t,a)=>new ZodIntersection({left:e,right:t,typeName:T.ZodIntersection,...processCreateParams(a)});let ZodTuple=class ZodTuple extends ZodType{_parse(e){let{status:t,ctx:a}=this._processInputParams(e);if(a.parsedType!==ew.array)return addIssueToContext(a,{code:eA.invalid_type,expected:ew.array,received:a.parsedType}),ex;if(a.data.length<this._def.items.length)return addIssueToContext(a,{code:eA.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),ex;let r=this._def.rest;!r&&a.data.length>this._def.items.length&&(addIssueToContext(a,{code:eA.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),t.dirty());let i=[...a.data].map((e,t)=>{let r=this._def.items[t]||this._def.rest;return r?r._parse(new ParseInputLazyPath(a,e,a.path,t)):null}).filter(e=>!!e);return a.common.async?Promise.all(i).then(e=>ParseStatus.mergeArray(t,e)):ParseStatus.mergeArray(t,i)}get items(){return this._def.items}rest(e){return new ZodTuple({...this._def,rest:e})}};ZodTuple.create=(e,t)=>{if(!Array.isArray(e))throw Error("You must pass an array of schemas to z.tuple([ ... ])");return new ZodTuple({items:e,typeName:T.ZodTuple,rest:null,...processCreateParams(t)})};let ZodRecord=class ZodRecord extends ZodType{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){let{status:t,ctx:a}=this._processInputParams(e);if(a.parsedType!==ew.object)return addIssueToContext(a,{code:eA.invalid_type,expected:ew.object,received:a.parsedType}),ex;let r=[],i=this._def.keyType,s=this._def.valueType;for(let e in a.data)r.push({key:i._parse(new ParseInputLazyPath(a,e,a.path,e)),value:s._parse(new ParseInputLazyPath(a,a.data[e],a.path,e))});return a.common.async?ParseStatus.mergeObjectAsync(t,r):ParseStatus.mergeObjectSync(t,r)}get element(){return this._def.valueType}static create(e,t,a){return new ZodRecord(t instanceof ZodType?{keyType:e,valueType:t,typeName:T.ZodRecord,...processCreateParams(a)}:{keyType:ZodString.create(),valueType:e,typeName:T.ZodRecord,...processCreateParams(t)})}};let ZodMap=class ZodMap extends ZodType{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){let{status:t,ctx:a}=this._processInputParams(e);if(a.parsedType!==ew.map)return addIssueToContext(a,{code:eA.invalid_type,expected:ew.map,received:a.parsedType}),ex;let r=this._def.keyType,i=this._def.valueType,s=[...a.data.entries()].map(([e,t],s)=>({key:r._parse(new ParseInputLazyPath(a,e,a.path,[s,"key"])),value:i._parse(new ParseInputLazyPath(a,t,a.path,[s,"value"]))}));if(a.common.async){let e=new Map;return Promise.resolve().then(async()=>{for(let a of s){let r=await a.key,i=await a.value;if("aborted"===r.status||"aborted"===i.status)return ex;("dirty"===r.status||"dirty"===i.status)&&t.dirty(),e.set(r.value,i.value)}return{status:t.value,value:e}})}{let e=new Map;for(let a of s){let r=a.key,i=a.value;if("aborted"===r.status||"aborted"===i.status)return ex;("dirty"===r.status||"dirty"===i.status)&&t.dirty(),e.set(r.value,i.value)}return{status:t.value,value:e}}}};ZodMap.create=(e,t,a)=>new ZodMap({valueType:t,keyType:e,typeName:T.ZodMap,...processCreateParams(a)});let ZodSet=class ZodSet extends ZodType{_parse(e){let{status:t,ctx:a}=this._processInputParams(e);if(a.parsedType!==ew.set)return addIssueToContext(a,{code:eA.invalid_type,expected:ew.set,received:a.parsedType}),ex;let r=this._def;null!==r.minSize&&a.data.size<r.minSize.value&&(addIssueToContext(a,{code:eA.too_small,minimum:r.minSize.value,type:"set",inclusive:!0,exact:!1,message:r.minSize.message}),t.dirty()),null!==r.maxSize&&a.data.size>r.maxSize.value&&(addIssueToContext(a,{code:eA.too_big,maximum:r.maxSize.value,type:"set",inclusive:!0,exact:!1,message:r.maxSize.message}),t.dirty());let i=this._def.valueType;function finalizeSet(e){let a=new Set;for(let r of e){if("aborted"===r.status)return ex;"dirty"===r.status&&t.dirty(),a.add(r.value)}return{status:t.value,value:a}}let s=[...a.data.values()].map((e,t)=>i._parse(new ParseInputLazyPath(a,e,a.path,t)));return a.common.async?Promise.all(s).then(e=>finalizeSet(e)):finalizeSet(s)}min(e,t){return new ZodSet({...this._def,minSize:{value:e,message:S.toString(t)}})}max(e,t){return new ZodSet({...this._def,maxSize:{value:e,message:S.toString(t)}})}size(e,t){return this.min(e,t).max(e,t)}nonempty(e){return this.min(1,e)}};ZodSet.create=(e,t)=>new ZodSet({valueType:e,minSize:null,maxSize:null,typeName:T.ZodSet,...processCreateParams(t)});let ZodFunction=class ZodFunction extends ZodType{constructor(){super(...arguments),this.validate=this.implement}_parse(e){let{ctx:t}=this._processInputParams(e);if(t.parsedType!==ew.function)return addIssueToContext(t,{code:eA.invalid_type,expected:ew.function,received:t.parsedType}),ex;function makeArgsIssue(e,a){return makeIssue({data:e,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,getErrorMap(),errorMap].filter(e=>!!e),issueData:{code:eA.invalid_arguments,argumentsError:a}})}function makeReturnsIssue(e,a){return makeIssue({data:e,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,getErrorMap(),errorMap].filter(e=>!!e),issueData:{code:eA.invalid_return_type,returnTypeError:a}})}let a={errorMap:t.common.contextualErrorMap},r=t.data;if(this._def.returns instanceof ZodPromise){let e=this;return OK(async function(...t){let i=new ZodError([]),s=await e._def.args.parseAsync(t,a).catch(e=>{throw i.addIssue(makeArgsIssue(t,e)),i}),n=await Reflect.apply(r,this,s),o=await e._def.returns._def.type.parseAsync(n,a).catch(e=>{throw i.addIssue(makeReturnsIssue(n,e)),i});return o})}{let e=this;return OK(function(...t){let i=e._def.args.safeParse(t,a);if(!i.success)throw new ZodError([makeArgsIssue(t,i.error)]);let s=Reflect.apply(r,this,i.data),n=e._def.returns.safeParse(s,a);if(!n.success)throw new ZodError([makeReturnsIssue(s,n.error)]);return n.data})}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...e){return new ZodFunction({...this._def,args:ZodTuple.create(e).rest(ZodUnknown.create())})}returns(e){return new ZodFunction({...this._def,returns:e})}implement(e){let t=this.parse(e);return t}strictImplement(e){let t=this.parse(e);return t}static create(e,t,a){return new ZodFunction({args:e||ZodTuple.create([]).rest(ZodUnknown.create()),returns:t||ZodUnknown.create(),typeName:T.ZodFunction,...processCreateParams(a)})}};let ZodLazy=class ZodLazy extends ZodType{get schema(){return this._def.getter()}_parse(e){let{ctx:t}=this._processInputParams(e),a=this._def.getter();return a._parse({data:t.data,path:t.path,parent:t})}};ZodLazy.create=(e,t)=>new ZodLazy({getter:e,typeName:T.ZodLazy,...processCreateParams(t)});let ZodLiteral=class ZodLiteral extends ZodType{_parse(e){if(e.data!==this._def.value){let t=this._getOrReturnCtx(e);return addIssueToContext(t,{received:t.data,code:eA.invalid_literal,expected:this._def.value}),ex}return{status:"valid",value:e.data}}get value(){return this._def.value}};function createZodEnum(e,t){return new ZodEnum({values:e,typeName:T.ZodEnum,...processCreateParams(t)})}ZodLiteral.create=(e,t)=>new ZodLiteral({value:e,typeName:T.ZodLiteral,...processCreateParams(t)});let ZodEnum=class ZodEnum extends ZodType{_parse(e){if("string"!=typeof e.data){let t=this._getOrReturnCtx(e),a=this._def.values;return addIssueToContext(t,{expected:E.joinValues(a),received:t.parsedType,code:eA.invalid_type}),ex}if(-1===this._def.values.indexOf(e.data)){let t=this._getOrReturnCtx(e),a=this._def.values;return addIssueToContext(t,{received:t.data,code:eA.invalid_enum_value,options:a}),ex}return OK(e.data)}get options(){return this._def.values}get enum(){let e={};for(let t of this._def.values)e[t]=t;return e}get Values(){let e={};for(let t of this._def.values)e[t]=t;return e}get Enum(){let e={};for(let t of this._def.values)e[t]=t;return e}extract(e){return ZodEnum.create(e)}exclude(e){return ZodEnum.create(this.options.filter(t=>!e.includes(t)))}};ZodEnum.create=createZodEnum;let ZodNativeEnum=class ZodNativeEnum extends ZodType{_parse(e){let t=E.getValidEnumValues(this._def.values),a=this._getOrReturnCtx(e);if(a.parsedType!==ew.string&&a.parsedType!==ew.number){let e=E.objectValues(t);return addIssueToContext(a,{expected:E.joinValues(e),received:a.parsedType,code:eA.invalid_type}),ex}if(-1===t.indexOf(e.data)){let e=E.objectValues(t);return addIssueToContext(a,{received:a.data,code:eA.invalid_enum_value,options:e}),ex}return OK(e.data)}get enum(){return this._def.values}};ZodNativeEnum.create=(e,t)=>new ZodNativeEnum({values:e,typeName:T.ZodNativeEnum,...processCreateParams(t)});let ZodPromise=class ZodPromise extends ZodType{unwrap(){return this._def.type}_parse(e){let{ctx:t}=this._processInputParams(e);if(t.parsedType!==ew.promise&&!1===t.common.async)return addIssueToContext(t,{code:eA.invalid_type,expected:ew.promise,received:t.parsedType}),ex;let a=t.parsedType===ew.promise?t.data:Promise.resolve(t.data);return OK(a.then(e=>this._def.type.parseAsync(e,{path:t.path,errorMap:t.common.contextualErrorMap})))}};ZodPromise.create=(e,t)=>new ZodPromise({type:e,typeName:T.ZodPromise,...processCreateParams(t)});let ZodEffects=class ZodEffects extends ZodType{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===T.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(e){let{status:t,ctx:a}=this._processInputParams(e),r=this._def.effect||null,i={addIssue:e=>{addIssueToContext(a,e),e.fatal?t.abort():t.dirty()},get path(){return a.path}};if(i.addIssue=i.addIssue.bind(i),"preprocess"===r.type){let e=r.transform(a.data,i);return a.common.issues.length?{status:"dirty",value:a.data}:a.common.async?Promise.resolve(e).then(e=>this._def.schema._parseAsync({data:e,path:a.path,parent:a})):this._def.schema._parseSync({data:e,path:a.path,parent:a})}if("refinement"===r.type){let executeRefinement=e=>{let t=r.refinement(e,i);if(a.common.async)return Promise.resolve(t);if(t instanceof Promise)throw Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return e};if(!1!==a.common.async)return this._def.schema._parseAsync({data:a.data,path:a.path,parent:a}).then(e=>"aborted"===e.status?ex:("dirty"===e.status&&t.dirty(),executeRefinement(e.value).then(()=>({status:t.value,value:e.value}))));{let e=this._def.schema._parseSync({data:a.data,path:a.path,parent:a});return"aborted"===e.status?ex:("dirty"===e.status&&t.dirty(),executeRefinement(e.value),{status:t.value,value:e.value})}}if("transform"===r.type){if(!1!==a.common.async)return this._def.schema._parseAsync({data:a.data,path:a.path,parent:a}).then(e=>isValid(e)?Promise.resolve(r.transform(e.value,i)).then(e=>({status:t.value,value:e})):e);{let e=this._def.schema._parseSync({data:a.data,path:a.path,parent:a});if(!isValid(e))return e;let s=r.transform(e.value,i);if(s instanceof Promise)throw Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:t.value,value:s}}}E.assertNever(r)}};ZodEffects.create=(e,t,a)=>new ZodEffects({schema:e,typeName:T.ZodEffects,effect:t,...processCreateParams(a)}),ZodEffects.createWithPreprocess=(e,t,a)=>new ZodEffects({schema:t,effect:{type:"preprocess",transform:e},typeName:T.ZodEffects,...processCreateParams(a)});let ZodOptional=class ZodOptional extends ZodType{_parse(e){let t=this._getType(e);return t===ew.undefined?OK(void 0):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}};ZodOptional.create=(e,t)=>new ZodOptional({innerType:e,typeName:T.ZodOptional,...processCreateParams(t)});let ZodNullable=class ZodNullable extends ZodType{_parse(e){let t=this._getType(e);return t===ew.null?OK(null):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}};ZodNullable.create=(e,t)=>new ZodNullable({innerType:e,typeName:T.ZodNullable,...processCreateParams(t)});let ZodDefault=class ZodDefault extends ZodType{_parse(e){let{ctx:t}=this._processInputParams(e),a=t.data;return t.parsedType===ew.undefined&&(a=this._def.defaultValue()),this._def.innerType._parse({data:a,path:t.path,parent:t})}removeDefault(){return this._def.innerType}};ZodDefault.create=(e,t)=>new ZodDefault({innerType:e,typeName:T.ZodDefault,defaultValue:"function"==typeof t.default?t.default:()=>t.default,...processCreateParams(t)});let ZodCatch=class ZodCatch extends ZodType{_parse(e){let{ctx:t}=this._processInputParams(e),a={...t,common:{...t.common,issues:[]}},r=this._def.innerType._parse({data:a.data,path:a.path,parent:{...a}});return isAsync(r)?r.then(e=>({status:"valid",value:"valid"===e.status?e.value:this._def.catchValue({get error(){return new ZodError(a.common.issues)},input:a.data})})):{status:"valid",value:"valid"===r.status?r.value:this._def.catchValue({get error(){return new ZodError(a.common.issues)},input:a.data})}}removeCatch(){return this._def.innerType}};ZodCatch.create=(e,t)=>new ZodCatch({innerType:e,typeName:T.ZodCatch,catchValue:"function"==typeof t.catch?t.catch:()=>t.catch,...processCreateParams(t)});let ZodNaN=class ZodNaN extends ZodType{_parse(e){let t=this._getType(e);if(t!==ew.nan){let t=this._getOrReturnCtx(e);return addIssueToContext(t,{code:eA.invalid_type,expected:ew.nan,received:t.parsedType}),ex}return{status:"valid",value:e.data}}};ZodNaN.create=e=>new ZodNaN({typeName:T.ZodNaN,...processCreateParams(e)});let eP=Symbol("zod_brand");let ZodBranded=class ZodBranded extends ZodType{_parse(e){let{ctx:t}=this._processInputParams(e),a=t.data;return this._def.type._parse({data:a,path:t.path,parent:t})}unwrap(){return this._def.type}};let ZodPipeline=class ZodPipeline extends ZodType{_parse(e){let{status:t,ctx:a}=this._processInputParams(e);if(a.common.async){let handleAsync=async()=>{let e=await this._def.in._parseAsync({data:a.data,path:a.path,parent:a});return"aborted"===e.status?ex:"dirty"===e.status?(t.dirty(),DIRTY(e.value)):this._def.out._parseAsync({data:e.value,path:a.path,parent:a})};return handleAsync()}{let e=this._def.in._parseSync({data:a.data,path:a.path,parent:a});return"aborted"===e.status?ex:"dirty"===e.status?(t.dirty(),{status:"dirty",value:e.value}):this._def.out._parseSync({data:e.value,path:a.path,parent:a})}}static create(e,t){return new ZodPipeline({in:e,out:t,typeName:T.ZodPipeline})}};let ZodReadonly=class ZodReadonly extends ZodType{_parse(e){let t=this._def.innerType._parse(e);return isValid(t)&&(t.value=Object.freeze(t.value)),t}};ZodReadonly.create=(e,t)=>new ZodReadonly({innerType:e,typeName:T.ZodReadonly,...processCreateParams(t)});let custom=(e,t={},a)=>e?ZodAny.create().superRefine((r,i)=>{var s,n;if(!e(r)){let e="function"==typeof t?t(r):"string"==typeof t?{message:t}:t,o=null===(n=null!==(s=e.fatal)&&void 0!==s?s:a)||void 0===n||n,d="string"==typeof e?{message:e}:e;i.addIssue({code:"custom",...d,fatal:o})}}):ZodAny.create(),eD={object:ZodObject.lazycreate};!function(e){e.ZodString="ZodString",e.ZodNumber="ZodNumber",e.ZodNaN="ZodNaN",e.ZodBigInt="ZodBigInt",e.ZodBoolean="ZodBoolean",e.ZodDate="ZodDate",e.ZodSymbol="ZodSymbol",e.ZodUndefined="ZodUndefined",e.ZodNull="ZodNull",e.ZodAny="ZodAny",e.ZodUnknown="ZodUnknown",e.ZodNever="ZodNever",e.ZodVoid="ZodVoid",e.ZodArray="ZodArray",e.ZodObject="ZodObject",e.ZodUnion="ZodUnion",e.ZodDiscriminatedUnion="ZodDiscriminatedUnion",e.ZodIntersection="ZodIntersection",e.ZodTuple="ZodTuple",e.ZodRecord="ZodRecord",e.ZodMap="ZodMap",e.ZodSet="ZodSet",e.ZodFunction="ZodFunction",e.ZodLazy="ZodLazy",e.ZodLiteral="ZodLiteral",e.ZodEnum="ZodEnum",e.ZodEffects="ZodEffects",e.ZodNativeEnum="ZodNativeEnum",e.ZodOptional="ZodOptional",e.ZodNullable="ZodNullable",e.ZodDefault="ZodDefault",e.ZodCatch="ZodCatch",e.ZodPromise="ZodPromise",e.ZodBranded="ZodBranded",e.ZodPipeline="ZodPipeline",e.ZodReadonly="ZodReadonly"}(T||(T={}));let eO=ZodString.create,eR=ZodNumber.create,eM=ZodNaN.create,eL=ZodBigInt.create,ej=ZodBoolean.create,eH=ZodDate.create,eV=ZodSymbol.create,eF=ZodUndefined.create,eU=ZodNull.create,eZ=ZodAny.create,eG=ZodUnknown.create,eW=ZodNever.create,eq=ZodVoid.create,ez=ZodArray.create,eQ=ZodObject.create,eK=ZodObject.strictCreate,eJ=ZodUnion.create,e$=ZodDiscriminatedUnion.create,eY=ZodIntersection.create,eX=ZodTuple.create,e1=ZodRecord.create,e0=ZodMap.create,e2=ZodSet.create,e6=ZodFunction.create,e4=ZodLazy.create,e3=ZodLiteral.create,e9=ZodEnum.create,e8=ZodNativeEnum.create,e5=ZodPromise.create,e7=ZodEffects.create,te=ZodOptional.create,tt=ZodNullable.create,ta=ZodEffects.createWithPreprocess,tr=ZodPipeline.create;var ti=Object.freeze({__proto__:null,defaultErrorMap:errorMap,setErrorMap:function(e){eE=e},getErrorMap:getErrorMap,makeIssue:makeIssue,EMPTY_PATH:[],addIssueToContext:addIssueToContext,ParseStatus:ParseStatus,INVALID:ex,DIRTY:DIRTY,OK:OK,isAborted:isAborted,isDirty:isDirty,isValid:isValid,isAsync:isAsync,get util(){return E},get objectUtil(){return x},ZodParsedType:ew,getParsedType:getParsedType,ZodType:ZodType,ZodString:ZodString,ZodNumber:ZodNumber,ZodBigInt:ZodBigInt,ZodBoolean:ZodBoolean,ZodDate:ZodDate,ZodSymbol:ZodSymbol,ZodUndefined:ZodUndefined,ZodNull:ZodNull,ZodAny:ZodAny,ZodUnknown:ZodUnknown,ZodNever:ZodNever,ZodVoid:ZodVoid,ZodArray:ZodArray,ZodObject:ZodObject,ZodUnion:ZodUnion,ZodDiscriminatedUnion:ZodDiscriminatedUnion,ZodIntersection:ZodIntersection,ZodTuple:ZodTuple,ZodRecord:ZodRecord,ZodMap:ZodMap,ZodSet:ZodSet,ZodFunction:ZodFunction,ZodLazy:ZodLazy,ZodLiteral:ZodLiteral,ZodEnum:ZodEnum,ZodNativeEnum:ZodNativeEnum,ZodPromise:ZodPromise,ZodEffects:ZodEffects,ZodTransformer:ZodEffects,ZodOptional:ZodOptional,ZodNullable:ZodNullable,ZodDefault:ZodDefault,ZodCatch:ZodCatch,ZodNaN:ZodNaN,BRAND:eP,ZodBranded:ZodBranded,ZodPipeline:ZodPipeline,ZodReadonly:ZodReadonly,custom:custom,Schema:ZodType,ZodSchema:ZodType,late:eD,get ZodFirstPartyTypeKind(){return T},coerce:{string:e=>ZodString.create({...e,coerce:!0}),number:e=>ZodNumber.create({...e,coerce:!0}),boolean:e=>ZodBoolean.create({...e,coerce:!0}),bigint:e=>ZodBigInt.create({...e,coerce:!0}),date:e=>ZodDate.create({...e,coerce:!0})},any:eZ,array:ez,bigint:eL,boolean:ej,date:eH,discriminatedUnion:e$,effect:e7,enum:e9,function:e6,instanceof:(e,t={message:`Input not instance of ${e.name}`})=>custom(t=>t instanceof e,t),intersection:eY,lazy:e4,literal:e3,map:e0,nan:eM,nativeEnum:e8,never:eW,null:eU,nullable:tt,number:eR,object:eQ,oboolean:()=>ej().optional(),onumber:()=>eR().optional(),optional:te,ostring:()=>eO().optional(),pipeline:tr,preprocess:ta,promise:e5,record:e1,set:e2,strictObject:eK,string:eO,symbol:eV,transformer:e7,tuple:eX,undefined:eF,union:eJ,unknown:eG,void:eq,NEVER:ex,ZodIssueCode:eA,quotelessJson:e=>{let t=JSON.stringify(e,null,2);return t.replace(/"([^"]+)":/g,"$1:")},ZodError:ZodError});let errorFormatter=e=>e.message?e.message:"unspecified error";let Web3ValidatorError=class Web3ValidatorError extends web3_error_base_BaseWeb3Error{constructor(e){super(),this.code=1100,this.errors=e,super.message=`Web3 validator found ${e.length} error[s]:
${this._compileErrors().join("\n")}`}_compileErrors(){return this.errors.map(errorFormatter)}};let ts=["bool","int","uint","bytes","string","address","tuple"],isAbiParameterSchema=e=>"object"==typeof e&&"type"in e&&"name"in e,isString=e=>"string"==typeof e,string_isHexStrict=e=>"string"==typeof e&&/^((-)?0x[0-9a-f]+|(0x))$/i.test(e);function isHexString(e,t){return"string"==typeof e&&!!e.match(/^0x[0-9A-Fa-f]*$/)&&(void 0===t||!(t>0)||e.length===2+2*t)}let string_isHex=e=>"number"==typeof e||"bigint"==typeof e||"string"==typeof e&&/^((-0x|0x|-)?[0-9a-f]+|(0x))$/i.test(e);function isHexPrefixed(e){if("string"!=typeof e)throw Error(`[isHexPrefixed] input must be type 'string', received type ${typeof e}`);return e.startsWith("0x")}let validateNoLeadingZeroes=function(e){for(let[t,a]of Object.entries(e))if(void 0!==a&&a.length>0&&0===a[0])throw Error(`${t} cannot have leading zeroes, received: ${a.toString()}`)},tn=["hex","number","blockNumber","blockNumberOrTag","filter","bloom"],utils_parseBaseType=e=>{let t,a=e.replace(/ /,""),r=!1,i=[];if(e.includes("[")&&(a=a.slice(0,a.indexOf("[")),r=(i=[...e.matchAll(/(?:\[(\d*)\])/g)].map(e=>parseInt(e[1],10)).map(e=>Number.isNaN(e)?-1:e)).length>0),ts.includes(a))return{baseType:a,isArray:r,baseTypeSize:t,arraySizes:i};if(a.startsWith("int"))t=parseInt(a.substring(3),10),a="int";else if(a.startsWith("uint"))t=parseInt(e.substring(4),10),a="uint";else{if(!a.startsWith("bytes"))return{baseType:void 0,isArray:!1,baseTypeSize:void 0,arraySizes:i};t=parseInt(a.substring(5),10),a="bytes"}return{baseType:a,isArray:r,baseTypeSize:t,arraySizes:i}},convertEthType=(e,t={})=>{let a=Object.keys(t).includes("type");if(a)throw new Web3ValidatorError([{keyword:"eth",message:'Either "eth" or "type" can be presented in schema',params:{eth:e},instancePath:"",schemaPath:""}]);let{baseType:r,baseTypeSize:i}=utils_parseBaseType(e);if(!r&&!tn.includes(e))throw new Web3ValidatorError([{keyword:"eth",message:`Eth data type "${e}" is not valid`,params:{eth:e},instancePath:"",schemaPath:""}]);if(r){if("tuple"===r)throw Error('"tuple" type is not implemented directly.');return{format:`${r}${null!=i?i:""}`,required:!0}}return e?{format:e,required:!0}:{}},abiSchemaToJsonSchema=(e,t="/0")=>{let a={type:"array",items:[],maxItems:e.length,minItems:e.length};for(let[r,i]of e.entries()){let e,s,n;let o=[];isAbiParameterSchema(i)?(e=i.type,s=i.name,o=i.components):"string"==typeof i?(e=i,s=`${t}/${r}`):Array.isArray(i)&&(i[0]&&"string"==typeof i[0]&&i[0].startsWith("tuple")&&!Array.isArray(i[0])&&i[1]&&Array.isArray(i[1])?(e=i[0],s=`${t}/${r}`,o=i[1]):(e="tuple",s=`${t}/${r}`,o=i));let{baseType:d,isArray:p,arraySizes:l}=utils_parseBaseType(e),m=a;for(let e=l.length-1;e>0;e-=1)n={type:"array",items:[],maxItems:l[e],minItems:l[e]},l[e]<0&&(delete n.maxItems,delete n.minItems),Array.isArray(m.items)?0===m.items.length?m.items=n:m.items.push(n):m.items=[m.items,n],m=n;if("tuple"!==d||p){if("tuple"===d&&p){let e=l[0],t={$id:s,type:"array",items:abiSchemaToJsonSchema(o,s),maxItems:e,minItems:e};e<0&&(delete t.maxItems,delete t.minItems),m.items.push(t)}else if(p){let e=l[0],t={type:"array",$id:s,items:convertEthType(String(d)),minItems:e,maxItems:e};e<0&&(delete t.maxItems,delete t.minItems),m.items.push(t)}else Array.isArray(m.items)?m.items.push(Object.assign({$id:s},convertEthType(e))):m.items.items.push(Object.assign({$id:s},convertEthType(e)))}else{let e=abiSchemaToJsonSchema(o,s);e.$id=s,m.items.push(e)}m=a}return a},ethAbiToJsonSchema=e=>abiSchemaToJsonSchema(e),fetchArrayElement=(e,t)=>1===t?e:fetchArrayElement(e[0],t-1),transformJsonDataToAbiFormat=(e,t,a)=>{let r=[];for(let[i,s]of e.entries()){let e,n;let o=[];isAbiParameterSchema(s)?(e=s.type,n=s.name,o=s.components):"string"==typeof s?e=s:Array.isArray(s)&&(s[1]&&Array.isArray(s[1])?(e=s[0],o=s[1]):(e="tuple",o=s));let{baseType:d,isArray:p,arraySizes:l}=utils_parseBaseType(e),m=Array.isArray(t)?t[i]:t[n];if("tuple"!==d||p){if("tuple"===d&&p){let e=[];for(let t of m)if(l.length>1){let r=fetchArrayElement(t,l.length-1),i=[];for(let e of r)i.push(transformJsonDataToAbiFormat(o,e,a));e.push(i)}else e.push(transformJsonDataToAbiFormat(o,t,a));r.push(e)}else r.push(m)}else r.push(transformJsonDataToAbiFormat(o,m,a))}return(a=null!=a?a:[]).push(...r),a},codePointToInt=e=>{if(e>=48&&e<=57)return e-48;if(e>=65&&e<=70)return e-55;if(e>=97&&e<=102)return e-87;throw Error(`Invalid code point: ${e}`)},utils_hexToNumber=e=>{if(!string_isHexStrict(e))throw Error("Invalid hex string");let[t,a]=e.startsWith("-")?[!0,e.slice(1)]:[!1,e],r=BigInt(a);return r>Number.MAX_SAFE_INTEGER?t?-r:r:r<Number.MIN_SAFE_INTEGER?r:t?-1*Number(r):Number(r)},utils_numberToHex=e=>{if(("number"==typeof e||"bigint"==typeof e)&&e<0)return`-0x${e.toString(16).slice(1)}`;if(("number"==typeof e||"bigint"==typeof e)&&e>=0)return`0x${e.toString(16)}`;if("string"==typeof e&&string_isHexStrict(e)){let[t,a]=e.startsWith("-")?[!0,e.slice(1)]:[!1,e],r=a.split(/^(-)?0(x|X)/).slice(-1)[0];return`${t?"-":""}0x${r.replace(/^0+/,"").toLowerCase()}`}if("string"==typeof e&&!string_isHexStrict(e))return utils_numberToHex(BigInt(e));throw new InvalidNumberError(e)},padLeft=(e,t,a="0")=>{if("string"==typeof e&&!string_isHexStrict(e))return e.padStart(t,a);let r="string"==typeof e&&string_isHexStrict(e)?e:utils_numberToHex(e),[i,s]=r.startsWith("-")?["-0x",r.slice(3)]:["0x",r.slice(2)];return`${i}${s.padStart(t,a)}`};function uint8ArrayToHexString(e){let t="0x";for(let a of e){let e=a.toString(16);t+=1===e.length?`0${e}`:e}return t}function hexToUint8Array(e){let t;if((t=e.toLowerCase().startsWith("0x")?e.slice(2):e).length%2!=0)throw new InvalidBytesError(`hex string has odd length: ${e}`);let a=new Uint8Array(Math.ceil(t.length/2));for(let e=0;e<a.length;e+=1){let r=parseInt(t.substring(2*e,2*e+2),16);a[e]=r}return a}let checkAddressCheckSum=e=>{if(!/^(0x)?[0-9a-f]{40}$/i.test(e))return!1;let t=e.slice(2),a=utils_utf8ToBytes(t.toLowerCase()),r=uint8ArrayToHexString(e_(a)).slice(2);for(let e=0;e<40;e+=1)if(parseInt(r[e],16)>7&&t[e].toUpperCase()!==t[e]||7>=parseInt(r[e],16)&&t[e].toLowerCase()!==t[e])return!1;return!0},address_isAddress=(e,t=!0)=>{let a;return!!("string"==typeof e||e instanceof Uint8Array)&&(a=e instanceof Uint8Array?uint8ArrayToHexString(e):"string"!=typeof e||string_isHexStrict(e)?e:e.toLowerCase().startsWith("0x")?e:`0x${e}`,!!/^(0x)?[0-9a-f]{40}$/i.test(a)&&(!!(/^(0x|0X)?[0-9a-f]{40}$/.test(a)||/^(0x|0X)?[0-9A-F]{40}$/.test(a))||!t||checkAddressCheckSum(a)))};(function(e){e.NUMBER="NUMBER_NUMBER",e.HEX="NUMBER_HEX",e.STR="NUMBER_STR",e.BIGINT="NUMBER_BIGINT"})(I||(I={})),function(e){e.HEX="BYTES_HEX",e.UINT8ARRAY="BYTES_UINT8ARRAY"}(k||(k={}));let to={number:I.BIGINT,bytes:k.HEX},td={number:I.HEX,bytes:k.HEX};(function(e){e.EARLIEST="earliest",e.LATEST="latest",e.PENDING="pending",e.SAFE="safe",e.FINALIZED="finalized"})(C||(C={})),function(e){e.chainstart="chainstart",e.frontier="frontier",e.homestead="homestead",e.dao="dao",e.tangerineWhistle="tangerineWhistle",e.spuriousDragon="spuriousDragon",e.byzantium="byzantium",e.constantinople="constantinople",e.petersburg="petersburg",e.istanbul="istanbul",e.muirGlacier="muirGlacier",e.berlin="berlin",e.london="london",e.altair="altair",e.arrowGlacier="arrowGlacier",e.grayGlacier="grayGlacier",e.bellatrix="bellatrix",e.merge="merge",e.capella="capella",e.shanghai="shanghai"}(N||(N={}));let tp=Object.getPrototypeOf(Uint8Array);var __awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let tl=Symbol.for("web3/base-provider");let Web3BaseProvider=class Web3BaseProvider{static isWeb3Provider(e){return e instanceof Web3BaseProvider||!!(e&&e[tl])}get[tl](){return!0}send(e,t){this.request(e).then(e=>{t(null,e)}).catch(e=>{t(e)})}sendAsync(e){return __awaiter(this,void 0,void 0,function*(){return this.request(e)})}asEIP1193Provider(){let e=Object.create(this),t=e.request;return e.request=function(e){return __awaiter(this,void 0,void 0,function*(){let a=yield t(e);return a.result})},e.asEIP1193Provider=void 0,e}};let Web3BaseWallet=class Web3BaseWallet extends Array{constructor(e){super(),this._accountProvider=e}};let bigintPower=(e,t)=>{let a=e;for(let r=1;r<t;r+=1)a*=e;return a},isUInt=(e,t={abiType:"uint"})=>{let a;if(!["number","string","bigint"].includes(typeof e)||"string"==typeof e&&0===e.length)return!1;if(null==t?void 0:t.abiType){let{baseTypeSize:e}=utils_parseBaseType(t.abiType);e&&(a=e)}else t.bitSize&&(a=t.bitSize);let r=bigintPower(BigInt(2),BigInt(null!=a?a:256))-BigInt(1);try{let t="string"==typeof e&&string_isHexStrict(e)?BigInt(utils_hexToNumber(e)):BigInt(e);return t>=0&&t<=r}catch(e){return!1}},isInt=(e,t={abiType:"int"})=>{let a;if(!["number","string","bigint"].includes(typeof e)||"number"==typeof e&&e>Number.MAX_SAFE_INTEGER)return!1;if(null==t?void 0:t.abiType){let{baseTypeSize:e,baseType:r}=utils_parseBaseType(t.abiType);if("int"!==r)return!1;e&&(a=e)}else t.bitSize&&(a=t.bitSize);let r=bigintPower(BigInt(2),BigInt((null!=a?a:256)-1)),i=BigInt(-1)*bigintPower(BigInt(2),BigInt((null!=a?a:256)-1));try{let t="string"==typeof e&&string_isHexStrict(e)?BigInt(utils_hexToNumber(e)):BigInt(e);return t>=i&&t<=r}catch(e){return!1}},isNumber=e=>!!(isInt(e)||"string"==typeof e&&/[0-9.]/.test(e)&&e.indexOf(".")===e.lastIndexOf("."))||"number"==typeof e,isBlockNumber=e=>isUInt(e),block_isBlockTag=e=>Object.values(C).includes(e),isBlockNumberOrTag=e=>block_isBlockTag(e)||isBlockNumber(e),isBloom=e=>!!("string"==typeof e&&/^(0x)?[0-9a-f]{512}$/i.test(e))&&!!(/^(0x)?[0-9a-f]{512}$/.test(e)||/^(0x)?[0-9A-F]{512}$/.test(e)),isInBloom=(e,t)=>{if("string"==typeof t&&!string_isHexStrict(t)||!isBloom(e))return!1;let a="string"==typeof t?hexToUint8Array(t):t,r=uint8ArrayToHexString(e_(a)).slice(2);for(let t=0;t<12;t+=4){let a=(parseInt(r.slice(t,t+2),16)<<8)+parseInt(r.slice(t+2,t+4),16)&2047,i=codePointToInt(e.charCodeAt(e.length-1-Math.floor(a/4))),s=1<<a%4;if((i&s)!==s)return!1}return!0},isBoolean=e=>!!["number","string","boolean"].includes(typeof e)&&("boolean"==typeof e||("string"!=typeof e||string_isHexStrict(e)?"string"==typeof e&&string_isHexStrict(e)?"0x1"===e||"0x0"===e:1===e||0===e:"1"===e||"0"===e)),isBytes=(e,t={abiType:"bytes"})=>{let a;if("string"!=typeof e&&!Array.isArray(e)&&!(e instanceof Uint8Array)||"string"==typeof e&&string_isHexStrict(e)&&e.startsWith("-")||"string"==typeof e&&!string_isHexStrict(e))return!1;if("string"==typeof e){if(e.length%2!=0)return!1;a=hexToUint8Array(e)}else if(Array.isArray(e)){if(e.some(e=>e<0||e>255||!Number.isInteger(e)))return!1;a=new Uint8Array(e)}else a=e;if(null==t?void 0:t.abiType){let{baseTypeSize:e}=utils_parseBaseType(t.abiType);return!e||a.length===e}return null==t||!t.size||a.length===(null==t?void 0:t.size)},object_isNullish=e=>null==e,isObject=e=>"object"==typeof e&&!object_isNullish(e)&&!Array.isArray(e)&&!(e instanceof tp),isTopic=e=>!!("string"==typeof e&&/^(0x)?[0-9a-f]{64}$/i.test(e))&&!!(/^(0x)?[0-9a-f]{64}$/.test(e)||/^(0x)?[0-9A-F]{64}$/.test(e)),isFilterObject=e=>{let t=["fromBlock","toBlock","address","topics","blockHash"];if(object_isNullish(e)||"object"!=typeof e||!Object.keys(e).every(e=>t.includes(e))||!object_isNullish(e.fromBlock)&&!isBlockNumberOrTag(e.fromBlock)||!object_isNullish(e.toBlock)&&!isBlockNumberOrTag(e.toBlock))return!1;if(!object_isNullish(e.address)){if(Array.isArray(e.address)){if(!e.address.every(e=>address_isAddress(e)))return!1}else if(!address_isAddress(e.address))return!1}return!!(object_isNullish(e.topics)||e.topics.every(e=>!!object_isNullish(e)||(Array.isArray(e)?e.every(e=>isTopic(e)):!!isTopic(e))))},tm={address:e=>address_isAddress(e),bloom:e=>isBloom(e),blockNumber:e=>isBlockNumber(e),blockTag:e=>block_isBlockTag(e),blockNumberOrTag:e=>isBlockNumberOrTag(e),bool:e=>isBoolean(e),bytes:e=>isBytes(e),filter:e=>isFilterObject(e),hex:e=>string_isHexStrict(e),uint:e=>isUInt(e),int:e=>isInt(e),number:e=>isNumber(e),string:e=>isString(e)};for(let e=8;e<=256;e+=8)tm[`int${e}`]=t=>isInt(t,{bitSize:e}),tm[`uint${e}`]=t=>isUInt(t,{bitSize:e});for(let e=1;e<=32;e+=1)tm[`bytes${e}`]=t=>isBytes(t,{size:e});tm.bytes256=tm.bytes;let convertToZod=e=>{if((!(null==e?void 0:e.type)||(null==e?void 0:e.type)==="object")&&(null==e?void 0:e.properties)){let t={};for(let a of Object.keys(e.properties)){let r=convertToZod(e.properties[a]);r&&(t[a]=r)}return Array.isArray(e.required)?ti.object(t).partial().required(e.required.reduce((e,t)=>Object.assign(Object.assign({},e),{[t]:!0}),{})):ti.object(t).partial()}if((null==e?void 0:e.type)==="array"&&(null==e?void 0:e.items)){if(Array.isArray(e.items)&&e.items.length>0){let t=[];for(let a of e.items){let e=convertToZod(a);e&&t.push(e)}return ti.tuple(t)}return ti.array(convertToZod(e.items))}if(e.oneOf&&Array.isArray(e.oneOf))return ti.union(e.oneOf.map(e=>convertToZod(e)));if(null==e?void 0:e.format){if(!tm[e.format])throw new SchemaFormatError(e.format);return ti.any().refine(tm[e.format],t=>({params:{value:t,format:e.format}}))}return(null==e?void 0:e.type)&&(null==e?void 0:e.type)!=="object"&&"function"==typeof ti[String(e.type)]?ti[String(e.type)]():ti.object({data:ti.any()}).partial()};let Validator=class Validator{static factory(){return Validator.validatorInstance||(Validator.validatorInstance=new Validator),Validator.validatorInstance}validate(e,t,a){var r,i;let s=convertToZod(e),n=s.safeParse(t);if(!n.success){let e=this.convertErrors(null!==(i=null===(r=n.error)||void 0===r?void 0:r.issues)&&void 0!==i?i:[]);if(e){if(null==a?void 0:a.silent)return e;throw new Web3ValidatorError(e)}}}convertErrors(e){if(e&&Array.isArray(e)&&e.length>0)return e.map(e=>{var t;let a,r,i,s;s=e.path.join("/");let n=String(e.path[e.path.length-1]),o=e.path.join("/");if(e.code===eA.too_big)r="maxItems",s=`${o}/maxItems`,i={limit:e.maximum},a=`must NOT have more than ${e.maximum} items`;else if(e.code===eA.too_small)r="minItems",s=`${o}/minItems`,i={limit:e.minimum},a=`must NOT have fewer than ${e.minimum} items`;else if(e.code===eA.custom){let{value:r,format:n}=null!==(t=e.params)&&void 0!==t?t:{};a=void 0===r?`value at "/${s}" is required`:`value "${"object"==typeof r?JSON.stringify(r):r}" at "/${s}" must pass "${n}" validation`,i={value:r}}return{keyword:null!=r?r:n,instancePath:o?`/${o}`:"",schemaPath:s?`#${s}`:"#",params:null!=i?i:{value:e.message},message:null!=a?a:e.message}})}};let tc=new class{constructor(){this._validator=Validator.factory()}validateJSONSchema(e,t,a){return this._validator.validate(e,t,a)}validate(e,t,a={silent:!1}){var r,i;let s=ethAbiToJsonSchema(e);if(!Array.isArray(s.items)||(null===(r=s.items)||void 0===r?void 0:r.length)!==0||0!==t.length){if(Array.isArray(s.items)&&(null===(i=s.items)||void 0===i?void 0:i.length)===0&&0!==t.length)throw new Web3ValidatorError([{instancePath:"/0",schemaPath:"/",keyword:"required",message:"empty schema against data can not be validated",params:t}]);return this._validator.validate(s,t,a)}}},tu={noether:BigInt(0),wei:BigInt(1),kwei:BigInt(1e3),Kwei:BigInt(1e3),babbage:BigInt(1e3),femtoether:BigInt(1e3),mwei:BigInt(1e6),Mwei:BigInt(1e6),lovelace:BigInt(1e6),picoether:BigInt(1e6),gwei:BigInt(1e9),Gwei:BigInt(1e9),shannon:BigInt(1e9),nanoether:BigInt(1e9),nano:BigInt(1e9),szabo:BigInt(1e12),microether:BigInt(1e12),micro:BigInt(1e12),finney:BigInt(1e15),milliether:BigInt(1e15),milli:BigInt(1e15),ether:BigInt("1000000000000000000"),kether:BigInt("1000000000000000000000"),grand:BigInt("1000000000000000000000"),mether:BigInt("1000000000000000000000000"),gether:BigInt("1000000000000000000000000000"),tether:BigInt("1000000000000000000000000000000")},bytesToUint8Array=e=>{if(tc.validate(["bytes"],[e]),e instanceof Uint8Array)return e;if(Array.isArray(e))return new Uint8Array(e);if("string"==typeof e)return hexToUint8Array(e);throw new InvalidBytesError(e)},{uint8ArrayToHexString:th}=U,converters_bytesToHex=e=>th(bytesToUint8Array(e)),converters_hexToBytes=e=>"string"==typeof e&&"0x"!==e.slice(0,2).toLowerCase()?bytesToUint8Array(`0x${e}`):bytesToUint8Array(e),converters_hexToNumber=e=>(tc.validate(["hex"],[e]),utils_hexToNumber(e)),tf=converters_hexToNumber,converters_numberToHex=(e,t)=>{"bigint"!=typeof e&&tc.validate(["int"],[e]);let a=utils_numberToHex(e);return t&&(a.startsWith("-")||a.length%2!=1?a.length%2==0&&a.startsWith("-")&&(a="-0x0".concat(a.slice(3))):a="0x0".concat(a.slice(2))),a},tv=converters_numberToHex,converters_hexToNumberString=e=>converters_hexToNumber(e).toString(),converters_utf8ToHex=e=>{tc.validate(["string"],[e]);let t=e.replace(/^(?:\u0000)/,"");return t=t.replace(/(?:\u0000)$/,""),converters_bytesToHex(new TextEncoder().encode(t))},tg=converters_utf8ToHex,ty=converters_utf8ToHex,hexToUtf8=e=>bytesToUtf8(converters_hexToBytes(e)),converters_toUtf8=e=>"string"==typeof e?hexToUtf8(e):(tc.validate(["bytes"],[e]),bytesToUtf8(e)),tb=utils_utf8ToBytes,t_=hexToUtf8,asciiToHex=e=>{tc.validate(["string"],[e]);let t="";for(let a=0;a<e.length;a+=1){let r=e.charCodeAt(a).toString(16);t+=r.length%2!=0?`0${r}`:r}return`0x${t}`},tw=asciiToHex,hexToAscii=e=>{let t=new TextDecoder("ascii");return t.decode(converters_hexToBytes(e))},tA=hexToAscii,converters_toHex=(e,t)=>{if("string"==typeof e&&address_isAddress(e))return t?"address":`0x${e.toLowerCase().replace(/^0x/i,"")}`;if("boolean"==typeof e)return t?"bool":e?"0x01":"0x00";if("number"==typeof e)return t?e<0?"int256":"uint256":converters_numberToHex(e);if("bigint"==typeof e)return t?"bigint":converters_numberToHex(e);if("object"==typeof e&&e)return t?"string":converters_utf8ToHex(JSON.stringify(e));if("string"==typeof e){if(e.startsWith("-0x")||e.startsWith("-0X"))return t?"int256":converters_numberToHex(e);if(string_isHexStrict(e))return t?"bytes":e;if(string_isHex(e)&&!isInt(e))return t?"bytes":`0x${e}`;if(!Number.isFinite(e))return t?"string":converters_utf8ToHex(e)}throw new HexProcessingError(e)},converters_toNumber=e=>{if("number"==typeof e)return e;if("bigint"==typeof e)return e>=Number.MIN_SAFE_INTEGER&&e<=Number.MAX_SAFE_INTEGER?Number(e):e;if("string"==typeof e&&string_isHexStrict(e))return converters_hexToNumber(e);try{return converters_toNumber(BigInt(e))}catch(t){throw new InvalidNumberError(e)}},toBigInt=e=>{if("number"==typeof e)return BigInt(e);if("bigint"==typeof e)return e;if("string"==typeof e&&string_isHex(e))return e.startsWith("-")?-BigInt(e.substring(1)):BigInt(e);throw new InvalidNumberError(e)},fromWei=(e,t)=>{let a=tu[t];if(!a)throw new InvalidUnitError(t);let r=String(converters_toNumber(e)),i=a.toString().length-1;if(i<=0)return r.toString();let s=r.padStart(i,"0"),n=s.slice(0,-i),o=s.slice(-i).replace(/\.?0+$/,"");return""===n?`0.${o}`:""===o?n:`${n}.${o}`},toWei=(e,t)=>{tc.validate(["number"],[e]);let a=tu[t];if(!a)throw new InvalidUnitError(t);let[r,i]=String("string"!=typeof e||string_isHexStrict(e)?converters_toNumber(e):e).split(".").concat(""),s=BigInt(`${r}${i}`),n=s*a,o=a.toString().length-1,d=Math.min(i.length,o);return 0===d?n.toString():n.toString().padStart(d,"0").slice(0,-d)},converters_toChecksumAddress=e=>{if(!address_isAddress(e,!1))throw new InvalidAddressError(e);let t=e.toLowerCase().replace(/^0x/i,""),a=uint8ArrayToHexString(e_(tb(t)));if(object_isNullish(a)||"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"===a)return"";let r="0x",i=a.replace(/^0x/i,"");for(let e=0;e<t.length;e+=1)parseInt(i[e],16)>7?r+=t[e].toUpperCase():r+=t[e];return r},toBool=e=>{if("boolean"==typeof e)return e;if("number"==typeof e&&(0===e||1===e)||"bigint"==typeof e&&(e===BigInt(0)||e===BigInt(1)))return!!e;if("string"==typeof e&&!string_isHexStrict(e)&&("1"===e||"0"===e||"false"===e||"true"===e))return"true"===e||"false"!==e&&!!Number(e);if("string"==typeof e&&string_isHexStrict(e)&&("0x1"===e||"0x0"===e))return!!converters_toNumber(e);throw new InvalidBooleanError(e)};var tE=a(82361);let wrapFunction=e=>t=>e(t.detail);let EventEmitterAtBrowser=class EventEmitterAtBrowser extends EventTarget{constructor(){super(...arguments),this._listeners={},this.maxListeners=Number.MAX_SAFE_INTEGER}on(e,t){return this.addEventListener(e,t),this}once(e,t){let onceCallback=a=>{var r,i,s,n;return r=this,i=void 0,s=void 0,n=function*(){this.off(e,onceCallback),yield t(a)},new(s||(s=Promise))(function(e,t){function fulfilled(e){try{step(n.next(e))}catch(e){t(e)}}function rejected(e){try{step(n.throw(e))}catch(e){t(e)}}function step(t){var a;t.done?e(t.value):((a=t.value)instanceof s?a:new s(function(e){e(a)})).then(fulfilled,rejected)}step((n=n.apply(r,i||[])).next())})};return this.on(e,onceCallback)}off(e,t){return this.removeEventListener(e,t),this}emit(e,t){let a=new CustomEvent(e,{detail:t});return super.dispatchEvent(a)}listenerCount(e){let t=this._listeners[e];return t?t.length:0}listeners(e){return this._listeners[e].map(e=>e[0])||[]}eventNames(){return Object.keys(this._listeners)}removeAllListeners(){return Object.keys(this._listeners).forEach(e=>{this._listeners[e].forEach(t=>{super.removeEventListener(e,t[1])})}),this._listeners={},this}setMaxListeners(e){return this.maxListeners=e,this}getMaxListeners(){return this.maxListeners}addEventListener(e,t){let a=wrapFunction(t);super.addEventListener(e,a),this._listeners[e]||(this._listeners[e]=[]),this._listeners[e].push([t,a])}removeEventListener(e,t){let a=this._listeners[e];if(a){let r=a.findIndex(e=>e[0]===t);-1!==r&&(super.removeEventListener(e,a[r][1]),a.splice(r,1))}}};i="undefined"==typeof window?tE.EventEmitter:EventEmitterAtBrowser;let EventEmitter=class EventEmitter extends i{};let tx=string_isHexStrict,tS=string_isHex,tT=checkAddressCheckSum,tI=address_isAddress,tk=isBloom,tC=isInBloom,validation_isUserEthereumAddressInBloom=(e,t)=>{if(!isBloom(e)||!address_isAddress(t))return!1;let a=padLeft(t,64);return isInBloom(e,a)},validation_isContractAddressInBloom=(e,t)=>!!(isBloom(e)&&address_isAddress(t))&&isInBloom(e,t),tN=isTopic,validation_isTopicInBloom=(e,t)=>!!(isBloom(e)&&isTopic(t))&&isInBloom(e,t),compareBlockNumbers=(e,t)=>{let a="string"==typeof e&&block_isBlockTag(e),r="string"==typeof t&&block_isBlockTag(t);if(e===t||("earliest"===e||0===e)&&("earliest"===t||0===t))return 0;if("earliest"===e&&t>0)return -1;if("earliest"===t&&e>0)return 1;if(a&&r){let a={[C.EARLIEST]:1,[C.FINALIZED]:2,[C.SAFE]:3,[C.LATEST]:4,[C.PENDING]:5};return a[e]<a[t]?-1:1}if(a&&!r||!a&&r)throw new InvalidBlockError("Cannot compare blocktag with provided non-blocktag input.");let i=BigInt(e),s=BigInt(t);return i<s?-1:i===s?0:1},isContractInitOptions=e=>"object"==typeof e&&!object_isNullish(e)&&0!==Object.keys(e).length&&["input","data","from","gas","gasPrice","gasLimit","address","jsonInterface","syncWithContext","dataInputFill"].some(t=>t in e),tB=object_isNullish,isIterable=e=>"object"==typeof e&&!object_isNullish(e)&&!Array.isArray(e)&&!(e instanceof tp),objects_mergeDeep=(e,...t)=>{if(!isIterable(e))return e;for(let a of t)for(let t in a)isIterable(a[t])?(e[t]||(e[t]={}),objects_mergeDeep(e[t],a[t])):!object_isNullish(a[t])&&Object.hasOwnProperty.call(a,t)&&(Array.isArray(a[t])||a[t]instanceof tp?e[t]=a[t].slice(0):e[t]=a[t]);return e},string_manipulation_padLeft=(e,t,a="0")=>"string"==typeof e?string_isHexStrict(e)?padLeft(e,t,a):e.padStart(t,a):(tc.validate(["int"],[e]),padLeft(e,t,a)),padRight=(e,t,a="0")=>{if("string"==typeof e&&!string_isHexStrict(e))return e.padEnd(t,a);tc.validate(["int"],[e]);let r="string"==typeof e&&string_isHexStrict(e)?e:converters_numberToHex(e),i=r.startsWith("-")?3:2;return r.padEnd(t+i,a)},tP=padRight,tD=string_manipulation_padLeft,toTwosComplement=(e,t=64)=>{tc.validate(["int"],[e]);let a=converters_toNumber(e);if(a>=0)return string_manipulation_padLeft(converters_toHex(a),t);let r=bigintPower(BigInt(2),BigInt(4*t));if(-a>=r)throw new NibbleWidthError(`value: ${e}, nibbleWidth: ${t}`);let i=BigInt(a);return string_manipulation_padLeft(converters_numberToHex(i+r),t)},fromTwosComplement=(e,t=64)=>{tc.validate(["int"],[e]);let a=converters_toNumber(e);if(a<0)return a;let r=Math.ceil(Math.log(Number(a))/Math.log(2));if(r>4*t)throw new NibbleWidthError(`value: "${e}", nibbleWidth: "${t}"`);if(4*t!==r)return a;let i=bigintPower(BigInt(2),BigInt(t)*BigInt(4));return converters_toNumber(BigInt(a)-i)};function uint8ArrayConcat(...e){let t=e.reduce((e,t)=>{let a=e+t.length;return a},0),a=new Uint8Array(t),r=0;for(let t of e)a.set(t,r),r+=t.length;return a}function uint8ArrayEquals(e,t){if(e===t)return!0;if(e.byteLength!==t.byteLength)return!1;for(let a=0;a<e.byteLength;a+=1)if(e[a]!==t[a])return!1;return!0}let{parseBaseType:tO}=U,isDataFormat=e=>"object"==typeof e&&!object_isNullish(e)&&"number"in e&&"bytes"in e,findSchemaByDataPath=(e,t,a=[])=>{let r,i=Object.assign({},e);for(let e of t){if(i.oneOf&&r){let e=a.find(function(e){return this===e[0]},null!=r?r:"");e&&e[0]===r&&(i=i.oneOf[e[1]])}if(!i.properties&&!i.items)return;if(i.properties)i=i.properties[e];else if(i.items&&i.items.properties){let t=i.items.properties;if(!t)return;i=t[e]}else i.items&&isObject(i.items)?i=i.items:i.items&&Array.isArray(i.items)&&(i=i.items[parseInt(e,10)]);i&&e&&(r=e)}return i},convertScalarValue=(e,t,a)=>{try{let{baseType:r,baseTypeSize:i}=tO(t);if("int"===r||"uint"===r)switch(a.number){case I.NUMBER:return Number(toBigInt(e));case I.HEX:return converters_numberToHex(toBigInt(e));case I.STR:return toBigInt(e).toString();case I.BIGINT:return toBigInt(e);default:throw new generic_errors_FormatterError(`Invalid format: ${String(a.number)}`)}if("bytes"===r){let t;switch(i?"string"==typeof e?t=string_manipulation_padLeft(e,2*i):e instanceof Uint8Array&&(t=uint8ArrayConcat(new Uint8Array(i-e.length),e)):t=e,a.bytes){case k.HEX:return converters_bytesToHex(bytesToUint8Array(t));case k.UINT8ARRAY:return bytesToUint8Array(t);default:throw new generic_errors_FormatterError(`Invalid format: ${String(a.bytes)}`)}}}catch(e){}return e},convert=(e,t,a,r,i=[])=>{var s,n;if(!isObject(e)&&!Array.isArray(e))return convertScalarValue(e,null==t?void 0:t.format,r);for(let[o,d]of Object.entries(e)){a.push(o);let p=findSchemaByDataPath(t,a,i);if(object_isNullish(p)){delete e[o],a.pop();continue}if(isObject(d)){convert(d,t,a,r),a.pop();continue}if(Array.isArray(d)){let l=p;if((null==p?void 0:p.oneOf)!==void 0&&p.oneOf.forEach((e,t)=>{var a,r;Array.isArray(null==p?void 0:p.items)||("object"!=typeof d[0]||(null===(a=null==e?void 0:e.items)||void 0===a?void 0:a.type)!=="object")&&("string"!=typeof d[0]||(null===(r=null==e?void 0:e.items)||void 0===r?void 0:r.type)==="object")||(l=e,i.push([o,t]))}),object_isNullish(null==l?void 0:l.items)){delete e[o],a.pop();continue}if(isObject(l.items)&&!object_isNullish(l.items.format)){for(let t=0;t<d.length;t+=1)e[o][t]=convertScalarValue(d[t],null===(s=null==l?void 0:l.items)||void 0===s?void 0:s.format,r);a.pop();continue}if(!Array.isArray(null==l?void 0:l.items)&&(null===(n=null==l?void 0:l.items)||void 0===n?void 0:n.type)==="object"){for(let e of d)convert(e,t,a,r,i);a.pop();continue}if(Array.isArray(null==l?void 0:l.items)){for(let t=0;t<d.length;t+=1)e[o][t]=convertScalarValue(d[t],l.items[t].format,r);a.pop();continue}}e[o]=convertScalarValue(d,p.format,r),a.pop()}return e},format=(e,t,a)=>{let r;r=isObject(t)?objects_mergeDeep({},t):Array.isArray(t)?[...t]:t;let i=isObject(e)?e:ethAbiToJsonSchema(e);if(!i.properties&&!i.items&&!i.format)throw new generic_errors_FormatterError("Invalid json schema for formatting");return convert(r,i,[],a)},tR="0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",sha3=e=>{let t;t="string"==typeof e?e.startsWith("0x")&&string_isHexStrict(e)?converters_hexToBytes(e):utils_utf8ToBytes(e):e;let a=converters_bytesToHex(e_(t));return a===tR?void 0:a},hash_sha3Raw=e=>{let t=sha3(e);return object_isNullish(t)?tR:t},keccak256Wrapper=e=>converters_bytesToHex(e_("bigint"==typeof e||"number"==typeof e?utils_utf8ToBytes(e.toString()):Array.isArray(e)?new Uint8Array(e):"string"!=typeof e||string_isHexStrict(e)?bytesToUint8Array(e):utils_utf8ToBytes(e))),getType=e=>{let t,a;if(Array.isArray(e))throw Error("Autodetection of array types is not supported.");if("object"==typeof e&&("t"in e||"type"in e)&&("v"in e||"value"in e))t="t"in e?e.t:e.type,a="v"in e?e.v:e.value,t="bigint"===t.toLowerCase()?"int":t;else{if("bigint"==typeof e)return["int",e];t=converters_toHex(e,!0),a=converters_toHex(e),t.startsWith("int")||t.startsWith("uint")||(t="bytes")}return(t.startsWith("int")||t.startsWith("uint"))&&"string"==typeof a&&!/^(-)?0x/i.test(a)&&(a=toBigInt(a)),[t,a]},elementaryName=e=>e.startsWith("int[")?`int256${e.slice(3)}`:"int"===e?"int256":e.startsWith("uint[")?`uint256'${e.slice(4)}`:"uint"===e?"uint256":e,parseTypeN=(e,t)=>{let a=/^(\d+).*$/.exec(e.slice(t));return a?parseInt(a[1],10):0},bitLength=e=>{let t=e.toString(2);return t.length},solidityPack=(e,t)=>{let a=t.toString();if("string"===e){if("string"==typeof t)return converters_utf8ToHex(t);throw new InvalidStringError(t)}if("bool"===e||"boolean"===e){if("boolean"==typeof t)return t?"01":"00";throw new InvalidBooleanError(t)}if("address"===e){if(!address_isAddress(a))throw new InvalidAddressError(a);return a}let r=elementaryName(e);if(e.startsWith("uint")){let e=parseTypeN(r,4);if(e%8||e<8||e>256)throw new InvalidSizeError(a);let t=converters_toNumber(a);if(bitLength(t)>e)throw new InvalidLargeValueError(a);if(t<BigInt(0))throw new InvalidUnsignedIntegerError(a);return e?tD(t.toString(16),e/8*2):t.toString(16)}if(e.startsWith("int")){let t=parseTypeN(r,3);if(t%8||t<8||t>256)throw new InvalidSizeError(e);let i=converters_toNumber(a);if(bitLength(i)>t)throw new InvalidLargeValueError(a);return i<BigInt(0)?toTwosComplement(i.toString(),t/8*2):t?tD(i.toString(16),t/4):i.toString(16)}if("bytes"===r){if(a.replace(/^0x/i,"").length%2!=0)throw new InvalidBytesError(a);return a}if(e.startsWith("bytes")){if(a.replace(/^0x/i,"").length%2!=0)throw new InvalidBytesError(a);let t=parseTypeN(e,5);if(!t||t<1||t>64||t<a.replace(/^0x/i,"").length/2)throw new InvalidBytesError(a);return tP(a,2*t)}return""},processSolidityEncodePackedArgs=e=>{let[t,a]=getType(e);if(Array.isArray(a)){let e=a.map(e=>solidityPack(t,e).replace("0x",""));return e.join("")}let r=solidityPack(t,a);return r.replace("0x","")},encodePacked=(...e)=>{let t=e.map(processSolidityEncodePackedArgs);return`0x${t.join("").toLowerCase()}`},soliditySha3=(...e)=>sha3(encodePacked(...e)),soliditySha3Raw=(...e)=>hash_sha3Raw(encodePacked(...e)),getStorageSlotNumForLongString=e=>sha3(`0x${("number"==typeof e?e.toString():e).padStart(64,"0")}`),random_randomBytes=e=>utils_randomBytes(e),randomHex=e=>converters_bytesToHex(random_randomBytes(e));var promise_helpers_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};function isPromise(e){return("object"==typeof e||"function"==typeof e)&&"function"==typeof e.then}function waitWithTimeout(e,t,a){return promise_helpers_awaiter(this,void 0,void 0,function*(){let r;let i=yield Promise.race([e instanceof Promise?e:e(),new Promise((e,i)=>{r=setTimeout(()=>a?i(a):e(void 0),t)})]);if(r&&clearTimeout(r),i instanceof Error)throw i;return i})}function pollTillDefinedAndReturnIntervalId(e,t){let a;let r=new Promise((r,i)=>{a=setInterval(function intervalCallbackFunc(){return promise_helpers_awaiter(this,void 0,void 0,function*(){try{let i=yield waitWithTimeout(e,t);object_isNullish(i)||(clearInterval(a),r(i))}catch(e){clearInterval(a),i(e)}}),intervalCallbackFunc}(),t)});return[r,a]}function pollTillDefined(e,t){return promise_helpers_awaiter(this,void 0,void 0,function*(){return pollTillDefinedAndReturnIntervalId(e,t)[0]})}function rejectIfTimeout(e,t){let a;let r=new Promise((r,i)=>{a=setTimeout(()=>{i(t)},e)});return[a,r]}function rejectIfConditionAtInterval(e,t){let a;let r=new Promise((r,i)=>{a=setInterval(()=>{promise_helpers_awaiter(this,void 0,void 0,function*(){let t=yield e();t&&(clearInterval(a),i(t))})},t)});return[a,r]}let uuidV4=()=>{let e=random_randomBytes(16);e[6]=15&e[6]|64,e[8]=63&e[8]|128;let t=converters_bytesToHex(e);return[t.substring(2,10),t.substring(10,14),t.substring(14,18),t.substring(18,22),t.substring(22,34)].join("-")},isResponseRpcError=e=>{let t=e.error.code;return K.has(t)||t>=-32099&&t<=-32e3},isResponseWithResult=e=>!Array.isArray(e)&&!!e&&"2.0"===e.jsonrpc&&"result"in e&&object_isNullish(e.error)&&("number"==typeof e.id||"string"==typeof e.id),json_rpc_isResponseWithError=e=>!Array.isArray(e)&&"2.0"===e.jsonrpc&&!!e&&object_isNullish(e.result)&&"error"in e&&("number"==typeof e.id||"string"==typeof e.id),isResponseWithNotification=e=>!Array.isArray(e)&&!!e&&"2.0"===e.jsonrpc&&!object_isNullish(e.params)&&!object_isNullish(e.method),isSubscriptionResult=e=>!Array.isArray(e)&&!!e&&"2.0"===e.jsonrpc&&"id"in e&&"result"in e,validateResponse=e=>isResponseWithResult(e)||json_rpc_isResponseWithError(e),isValidResponse=e=>Array.isArray(e)?e.every(validateResponse):validateResponse(e),isBatchResponse=e=>Array.isArray(e)&&e.length>0&&isValidResponse(e),setRequestIdStart=e=>{s=e},toPayload=e=>{var t,a,r,i;return void 0!==s&&(s+=1),{jsonrpc:null!==(t=e.jsonrpc)&&void 0!==t?t:"2.0",id:null!==(r=null!==(a=e.id)&&void 0!==a?a:s)&&void 0!==r?r:uuidV4(),method:e.method,params:null!==(i=e.params)&&void 0!==i?i:void 0}},toBatchPayload=e=>e.map(e=>toPayload(e)),isBatchRequest=e=>Array.isArray(e)&&e.length>0;var web3_deferred_promise_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let Web3DeferredPromise=class Web3DeferredPromise{constructor({timeout:e,eagerStart:t,timeoutMessage:a}={timeout:0,eagerStart:!1,timeoutMessage:"DeferredPromise timed out"}){this[B]="Promise",this._state="pending",this._promise=new Promise((e,t)=>{this._resolve=e,this._reject=t}),this._timeoutMessage=a,this._timeoutInterval=e,t&&this.startTimer()}get state(){return this._state}then(e,t){return web3_deferred_promise_awaiter(this,void 0,void 0,function*(){return this._promise.then(e,t)})}catch(e){return web3_deferred_promise_awaiter(this,void 0,void 0,function*(){return this._promise.catch(e)})}finally(e){return web3_deferred_promise_awaiter(this,void 0,void 0,function*(){return this._promise.finally(e)})}resolve(e){this._resolve(e),this._state="fulfilled",this._clearTimeout()}reject(e){this._reject(e),this._state="rejected",this._clearTimeout()}startTimer(){this._timeoutInterval&&this._timeoutInterval>0&&(this._timeoutId=setTimeout(this._checkTimeout.bind(this),this._timeoutInterval))}_checkTimeout(){"pending"===this._state&&this._timeoutId&&this.reject(new OperationTimeoutError(this._timeoutMessage))}_clearTimeout(){this._timeoutId&&clearTimeout(this._timeoutId)}};B=Symbol.toStringTag;let ChunkResponseParser=class ChunkResponseParser{constructor(e,t){this.eventEmitter=e,this.autoReconnect=t}clearQueues(){"function"==typeof this._clearQueues&&this._clearQueues()}onError(e){this._clearQueues=e}parseResponse(e){let t=[],a=e.replace(/\}[\n\r]?\{/g,"}|--|{").replace(/\}\][\n\r]?\[\{/g,"}]|--|[{").replace(/\}[\n\r]?\[\{/g,"}|--|[{").replace(/\}\][\n\r]?\{/g,"}]|--|{").split("|--|");return a.forEach(e=>{let a,r=e;this.lastChunk&&(r=this.lastChunk+r);try{a=JSON.parse(r)}catch(e){this.lastChunk=r,this.lastChunkTimeout&&clearTimeout(this.lastChunkTimeout),this.lastChunkTimeout=setTimeout(()=>{this.autoReconnect||(this.clearQueues(),this.eventEmitter.emit("error",new InvalidResponseError({id:1,jsonrpc:"2.0",error:{code:2,message:"Chunk timeout"}})))},15e3);return}clearTimeout(this.lastChunkTimeout),this.lastChunk=void 0,a&&t.push(a)}),t}};var web3_eip1193_provider_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let Eip1193Provider=class Eip1193Provider extends Web3BaseProvider{constructor(){super(...arguments),this._eventEmitter=new tE.EventEmitter,this._chainId="",this._accounts=[]}_getChainId(){var e;return web3_eip1193_provider_awaiter(this,void 0,void 0,function*(){let t=yield this.request(toPayload({method:"eth_chainId",params:[]}));return null!==(e=null==t?void 0:t.result)&&void 0!==e?e:""})}_getAccounts(){var e;return web3_eip1193_provider_awaiter(this,void 0,void 0,function*(){let t=yield this.request(toPayload({method:"eth_accounts",params:[]}));return null!==(e=null==t?void 0:t.result)&&void 0!==e?e:[]})}_onConnect(){Promise.all([this._getChainId().then(e=>{e!==this._chainId&&(this._chainId=e,this._eventEmitter.emit("chainChanged",this._chainId))}).catch(e=>{console.error(e)}),this._getAccounts().then(e=>{this._accounts.length===e.length&&e.every(t=>e.includes(t))||(this._accounts=e,this._onAccountsChanged())}).catch(e=>{console.error(e)})]).then(()=>this._eventEmitter.emit("connect",{chainId:this._chainId})).catch(e=>{console.error(e)})}_onDisconnect(e,t){this._eventEmitter.emit("disconnect",new EIP1193ProviderRpcError(e,t))}_onAccountsChanged(){this._eventEmitter.emit("accountsChanged",this._accounts)}};var socket_provider_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let tM={autoReconnect:!0,delay:5e3,maxAttempts:5};let SocketProvider=class SocketProvider extends Eip1193Provider{constructor(e,t,a){if(super(),this._connectionStatus="connecting",this._onMessageHandler=this._onMessage.bind(this),this._onOpenHandler=this._onConnect.bind(this),this._onCloseHandler=this._onCloseEvent.bind(this),this._onErrorHandler=this._onError.bind(this),!this._validateProviderPath(e))throw new InvalidClientError(e);this._socketPath=e,this._socketOptions=t,this._reconnectOptions=Object.assign(Object.assign({},tM),null!=a?a:{}),this._pendingRequestsQueue=new Map,this._sentRequestsQueue=new Map,this._init(),this.connect(),this.chunkResponseParser=new ChunkResponseParser(this._eventEmitter,this._reconnectOptions.autoReconnect),this.chunkResponseParser.onError(()=>{this._clearQueues()}),this.isReconnecting=!1}get SocketConnection(){return this._socketConnection}_init(){this._reconnectAttempts=0}connect(){try{this._openSocketConnection(),this._connectionStatus="connecting",this._addSocketListeners()}catch(e){if(this.isReconnecting)setImmediate(()=>{this._reconnect()});else{if(this._connectionStatus="disconnected",e&&e.message)throw new ConnectionError(`Error while connecting to ${this._socketPath}. Reason: ${e.message}`);throw new InvalidClientError(this._socketPath)}}}_validateProviderPath(e){return!!e}getPendingRequestQueueSize(){return this._pendingRequestsQueue.size}getSentRequestsQueueSize(){return this._sentRequestsQueue.size}supportsSubscriptions(){return!0}on(e,t){this._eventEmitter.on(e,t)}once(e,t){this._eventEmitter.once(e,t)}removeListener(e,t){this._eventEmitter.removeListener(e,t)}_onDisconnect(e,t){this._connectionStatus="disconnected",super._onDisconnect(e,t)}disconnect(e,t){let a=null!=e?e:1e3;this._removeSocketListeners(),"disconnected"!==this.getStatus()&&this._closeSocketConnection(a,t),this._onDisconnect(a,t)}safeDisconnect(e,t,a=!1,r=1e3){return socket_provider_awaiter(this,void 0,void 0,function*(){let i=0;yield socket_provider_awaiter(this,void 0,void 0,function*(){return new Promise(e=>{let t=setInterval(()=>{a&&5===i&&this.clearQueues(),0===this.getPendingRequestQueueSize()&&0===this.getSentRequestsQueueSize()&&(clearInterval(t),e(!0)),i+=1},r)})}),this.disconnect(e,t)})}removeAllListeners(e){this._eventEmitter.removeAllListeners(e)}_onError(e){this.isReconnecting?this._reconnect():this._eventEmitter.emit("error",e)}reset(){this._sentRequestsQueue.clear(),this._pendingRequestsQueue.clear(),this._init(),this._removeSocketListeners(),this._addSocketListeners()}_reconnect(){this.isReconnecting||(this.isReconnecting=!0,this._sentRequestsQueue.size>0&&this._sentRequestsQueue.forEach((e,t)=>{e.deferredPromise.reject(new PendingRequestsOnReconnectingError),this._sentRequestsQueue.delete(t)}),this._reconnectAttempts<this._reconnectOptions.maxAttempts?(this._reconnectAttempts+=1,setTimeout(()=>{this._removeSocketListeners(),this.connect(),this.isReconnecting=!1},this._reconnectOptions.delay)):(this.isReconnecting=!1,this._clearQueues(),this._removeSocketListeners(),this._eventEmitter.emit("error",new MaxAttemptsReachedOnReconnectingError(this._reconnectOptions.maxAttempts))))}request(e){return socket_provider_awaiter(this,void 0,void 0,function*(){if(tB(this._socketConnection))throw Error("Connection is undefined");"disconnected"===this.getStatus()&&this.connect();let t=isBatchRequest(e)?e[0].id:e.id;if(!t)throw new Web3WSProviderError("Request Id not defined");if(this._sentRequestsQueue.has(t))throw new RequestAlreadySentError(t);let a=new Web3DeferredPromise;a.catch(e=>{this._eventEmitter.emit("error",e)});let r={payload:e,deferredPromise:a};if("connecting"===this.getStatus())return this._pendingRequestsQueue.set(t,r),r.deferredPromise;this._sentRequestsQueue.set(t,r);try{this._sendToSocket(r.payload)}catch(e){this._sentRequestsQueue.delete(t),this._eventEmitter.emit("error",e)}return a})}_onConnect(){this._connectionStatus="connected",this._reconnectAttempts=0,super._onConnect(),this._sendPendingRequests()}_sendPendingRequests(){for(let[e,t]of this._pendingRequestsQueue.entries())this._sendToSocket(t.payload),this._pendingRequestsQueue.delete(e),this._sentRequestsQueue.set(e,t)}_onMessage(e){let t=this._parseResponses(e);if(!tB(t)&&0!==t.length)for(let e of t){if(isResponseWithNotification(e)&&e.method.endsWith("_subscription")){this._eventEmitter.emit("message",e);return}let t=isBatchResponse(e)?e[0].id:e.id,a=this._sentRequestsQueue.get(t);if(!a)return;(isBatchResponse(e)||isResponseWithResult(e)||json_rpc_isResponseWithError(e))&&(this._eventEmitter.emit("message",e),a.deferredPromise.resolve(e)),this._sentRequestsQueue.delete(t)}}clearQueues(e){this._clearQueues(e)}_clearQueues(e){this._pendingRequestsQueue.size>0&&this._pendingRequestsQueue.forEach((t,a)=>{t.deferredPromise.reject(new ConnectionNotOpenError(e)),this._pendingRequestsQueue.delete(a)}),this._sentRequestsQueue.size>0&&this._sentRequestsQueue.forEach((t,a)=>{t.deferredPromise.reject(new ConnectionNotOpenError(e)),this._sentRequestsQueue.delete(a)}),this._removeSocketListeners()}};let Web3EventEmitter=class Web3EventEmitter{constructor(){this._emitter=new EventEmitter}on(e,t){this._emitter.on(e,t)}once(e,t){this._emitter.once(e,t)}off(e,t){this._emitter.off(e,t)}emit(e,t){this._emitter.emit(e,t)}listenerCount(e){return this._emitter.listenerCount(e)}listeners(e){return this._emitter.listeners(e)}eventNames(){return this._emitter.eventNames()}removeAllListeners(){return this._emitter.removeAllListeners()}setMaxListenerWarningThreshold(e){this._emitter.setMaxListeners(e)}getMaxListeners(){return this._emitter.getMaxListeners()}};(P||(P={})).CONFIG_CHANGE="CONFIG_CHANGE";let Web3Config=class Web3Config extends Web3EventEmitter{constructor(e){super(),this.config={handleRevert:!1,defaultAccount:void 0,defaultBlock:"latest",transactionBlockTimeout:50,transactionConfirmationBlocks:24,transactionPollingInterval:1e3,transactionPollingTimeout:75e4,transactionReceiptPollingInterval:void 0,transactionSendTimeout:75e4,transactionConfirmationPollingInterval:void 0,blockHeaderTimeout:10,maxListenersWarningThreshold:100,contractDataInputFill:"data",defaultNetworkId:void 0,defaultChain:"mainnet",defaultHardfork:"london",defaultCommon:void 0,defaultTransactionType:"0x2",defaultMaxPriorityFeePerGas:converters_toHex(25e8),enableExperimentalFeatures:{useSubscriptionWhenCheckingBlockTimeout:!1,useRpcCallSpecification:!1},transactionBuilder:void 0,transactionTypeParser:void 0},this.setConfig(null!=e?e:{})}setConfig(e){let t=Object.keys(e);for(let a of t)this._triggerConfigChange(a,e[a]);Object.assign(this.config,e)}get handleRevert(){return this.config.handleRevert}set handleRevert(e){this._triggerConfigChange("handleRevert",e),this.config.handleRevert=e}get contractDataInputFill(){return this.config.contractDataInputFill}set contractDataInputFill(e){this._triggerConfigChange("contractDataInputFill",e),this.config.contractDataInputFill=e}get defaultAccount(){return this.config.defaultAccount}set defaultAccount(e){this._triggerConfigChange("defaultAccount",e),this.config.defaultAccount=e}get defaultBlock(){return this.config.defaultBlock}set defaultBlock(e){this._triggerConfigChange("defaultBlock",e),this.config.defaultBlock=e}get transactionSendTimeout(){return this.config.transactionSendTimeout}set transactionSendTimeout(e){this._triggerConfigChange("transactionSendTimeout",e),this.config.transactionSendTimeout=e}get transactionBlockTimeout(){return this.config.transactionBlockTimeout}set transactionBlockTimeout(e){this._triggerConfigChange("transactionBlockTimeout",e),this.config.transactionBlockTimeout=e}get transactionConfirmationBlocks(){return this.config.transactionConfirmationBlocks}set transactionConfirmationBlocks(e){this._triggerConfigChange("transactionConfirmationBlocks",e),this.config.transactionConfirmationBlocks=e}get transactionPollingInterval(){return this.config.transactionPollingInterval}set transactionPollingInterval(e){this._triggerConfigChange("transactionPollingInterval",e),this.config.transactionPollingInterval=e,this.transactionReceiptPollingInterval=e,this.transactionConfirmationPollingInterval=e}get transactionPollingTimeout(){return this.config.transactionPollingTimeout}set transactionPollingTimeout(e){this._triggerConfigChange("transactionPollingTimeout",e),this.config.transactionPollingTimeout=e}get transactionReceiptPollingInterval(){return this.config.transactionReceiptPollingInterval}set transactionReceiptPollingInterval(e){this._triggerConfigChange("transactionReceiptPollingInterval",e),this.config.transactionReceiptPollingInterval=e}get transactionConfirmationPollingInterval(){return this.config.transactionConfirmationPollingInterval}set transactionConfirmationPollingInterval(e){this._triggerConfigChange("transactionConfirmationPollingInterval",e),this.config.transactionConfirmationPollingInterval=e}get blockHeaderTimeout(){return this.config.blockHeaderTimeout}set blockHeaderTimeout(e){this._triggerConfigChange("blockHeaderTimeout",e),this.config.blockHeaderTimeout=e}get enableExperimentalFeatures(){return this.config.enableExperimentalFeatures}set enableExperimentalFeatures(e){this._triggerConfigChange("enableExperimentalFeatures",e),this.config.enableExperimentalFeatures=e}get maxListenersWarningThreshold(){return this.config.maxListenersWarningThreshold}set maxListenersWarningThreshold(e){this._triggerConfigChange("maxListenersWarningThreshold",e),this.setMaxListenerWarningThreshold(e),this.config.maxListenersWarningThreshold=e}get defaultNetworkId(){return this.config.defaultNetworkId}set defaultNetworkId(e){this._triggerConfigChange("defaultNetworkId",e),this.config.defaultNetworkId=e}get defaultChain(){return this.config.defaultChain}set defaultChain(e){if(!tB(this.config.defaultCommon)&&!tB(this.config.defaultCommon.baseChain)&&e!==this.config.defaultCommon.baseChain)throw new ConfigChainMismatchError(this.config.defaultChain,e);this._triggerConfigChange("defaultChain",e),this.config.defaultChain=e}get defaultHardfork(){return this.config.defaultHardfork}set defaultHardfork(e){if(!tB(this.config.defaultCommon)&&!tB(this.config.defaultCommon.hardfork)&&e!==this.config.defaultCommon.hardfork)throw new ConfigHardforkMismatchError(this.config.defaultCommon.hardfork,e);this._triggerConfigChange("defaultHardfork",e),this.config.defaultHardfork=e}get defaultCommon(){return this.config.defaultCommon}set defaultCommon(e){if(!tB(this.config.defaultHardfork)&&!tB(e)&&!tB(e.hardfork)&&this.config.defaultHardfork!==e.hardfork)throw new ConfigHardforkMismatchError(this.config.defaultHardfork,e.hardfork);if(!tB(this.config.defaultChain)&&!tB(e)&&!tB(e.baseChain)&&this.config.defaultChain!==e.baseChain)throw new ConfigChainMismatchError(this.config.defaultChain,e.baseChain);this._triggerConfigChange("defaultCommon",e),this.config.defaultCommon=e}get defaultTransactionType(){return this.config.defaultTransactionType}set defaultTransactionType(e){this._triggerConfigChange("defaultTransactionType",e),this.config.defaultTransactionType=e}get defaultMaxPriorityFeePerGas(){return this.config.defaultMaxPriorityFeePerGas}set defaultMaxPriorityFeePerGas(e){this._triggerConfigChange("defaultMaxPriorityFeePerGas",e),this.config.defaultMaxPriorityFeePerGas=e}get transactionBuilder(){return this.config.transactionBuilder}set transactionBuilder(e){this._triggerConfigChange("transactionBuilder",e),this.config.transactionBuilder=e}get transactionTypeParser(){return this.config.transactionTypeParser}set transactionTypeParser(e){this._triggerConfigChange("transactionTypeParser",e),this.config.transactionTypeParser=e}_triggerConfigChange(e,t){this.emit(P.CONFIG_CHANGE,{name:e,oldValue:this.config[e],newValue:t})}};var tL=a(94691);let HttpProvider=class HttpProvider extends Web3BaseProvider{constructor(e,t){if(super(),!HttpProvider.validateClientUrl(e))throw new InvalidClientError(e);this.clientUrl=e,this.httpProviderOptions=t}static validateClientUrl(e){return"string"==typeof e&&/^http(s)?:\/\//i.test(e)}getStatus(){throw new MethodNotImplementedError}supportsSubscriptions(){return!1}request(e,t){var a,r,i,s,n;return r=this,i=void 0,s=void 0,n=function*(){let r=Object.assign(Object.assign({},null===(a=this.httpProviderOptions)||void 0===a?void 0:a.providerOptions),t),i=yield tL(this.clientUrl,Object.assign(Object.assign({},r),{method:"POST",headers:Object.assign(Object.assign({},r.headers),{"Content-Type":"application/json"}),body:JSON.stringify(e)}));if(!i.ok)throw new ResponseError((yield i.json()));return yield i.json()},new(s||(s=Promise))(function(e,t){function fulfilled(e){try{step(n.next(e))}catch(e){t(e)}}function rejected(e){try{step(n.throw(e))}catch(e){t(e)}}function step(t){var a;t.done?e(t.value):((a=t.value)instanceof s?a:new s(function(e){e(a)})).then(fulfilled,rejected)}step((n=n.apply(r,i||[])).next())})}on(){throw new MethodNotImplementedError}removeListener(){throw new MethodNotImplementedError}once(){throw new MethodNotImplementedError}removeAllListeners(){throw new MethodNotImplementedError}connect(){throw new MethodNotImplementedError}disconnect(){throw new MethodNotImplementedError}reset(){throw new MethodNotImplementedError}reconnect(){throw new MethodNotImplementedError}};var tj=a(58816);let isWeb3Provider=e=>Web3BaseProvider.isWeb3Provider(e),isLegacyRequestProvider=e=>"string"!=typeof e&&"request"in e&&"Function"===e.request.constructor.name,isEIP1193Provider=e=>"string"!=typeof e&&"request"in e&&"AsyncFunction"===e.request.constructor.name,isLegacySendProvider=e=>"string"!=typeof e&&"send"in e,isLegacySendAsyncProvider=e=>"string"!=typeof e&&"sendAsync"in e,isSupportedProvider=e=>e&&(isWeb3Provider(e)||isEIP1193Provider(e)||isLegacyRequestProvider(e)||isLegacySendAsyncProvider(e)||isLegacySendProvider(e)),isSupportSubscriptions=e=>e&&"supportsSubscriptions"in e?e.supportsSubscriptions():!!e&&"string"!=typeof e&&"on"in e;var web3_request_manager_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};!function(e){e.PROVIDER_CHANGED="PROVIDER_CHANGED",e.BEFORE_PROVIDER_CHANGE="BEFORE_PROVIDER_CHANGE"}(D||(D={}));let tH={HttpProvider:HttpProvider,WebsocketProvider:class extends SocketProvider{constructor(e,t,a){super(e,t,a)}_validateProviderPath(e){return"string"==typeof e&&/^ws(s)?:\/\//i.test(e)}getStatus(){if(this._socketConnection&&!tB(this._socketConnection))switch(this._socketConnection.readyState){case this._socketConnection.CONNECTING:return"connecting";case this._socketConnection.OPEN:return"connected"}return"disconnected"}_openSocketConnection(){this._socketConnection=new tj(this._socketPath,void 0,this._socketOptions&&0===Object.keys(this._socketOptions).length?void 0:this._socketOptions)}_closeSocketConnection(e,t){var a;null===(a=this._socketConnection)||void 0===a||a.close(e,t)}_sendToSocket(e){var t;if("disconnected"===this.getStatus())throw new ConnectionNotOpenError;null===(t=this._socketConnection)||void 0===t||t.send(JSON.stringify(e))}_parseResponses(e){return this.chunkResponseParser.parseResponse(e.data)}_addSocketListeners(){var e,t,a,r;null===(e=this._socketConnection)||void 0===e||e.addEventListener("open",this._onOpenHandler),null===(t=this._socketConnection)||void 0===t||t.addEventListener("message",this._onMessageHandler),null===(a=this._socketConnection)||void 0===a||a.addEventListener("close",e=>this._onCloseHandler(e)),null===(r=this._socketConnection)||void 0===r||r.addEventListener("error",this._onErrorHandler)}_removeSocketListeners(){var e,t,a;null===(e=this._socketConnection)||void 0===e||e.removeEventListener("message",this._onMessageHandler),null===(t=this._socketConnection)||void 0===t||t.removeEventListener("open",this._onOpenHandler),null===(a=this._socketConnection)||void 0===a||a.removeEventListener("close",this._onCloseHandler)}_onCloseEvent(e){var t;if(this._reconnectOptions.autoReconnect&&(![1e3,1001].includes(e.code)||!e.wasClean)){this._reconnect();return}this._clearQueues(e),this._removeSocketListeners(),this._onDisconnect(e.code,e.reason),null===(t=this._socketConnection)||void 0===t||t.removeEventListener("error",this._onErrorHandler)}}};let Web3RequestManager=class Web3RequestManager extends Web3EventEmitter{constructor(e,t){super(),tB(e)||this.setProvider(e),this.useRpcCallSpecification=t}static get providers(){return tH}get provider(){return this._provider}get providers(){return tH}setProvider(e){let t;if(e&&"string"==typeof e&&this.providers){if(/^http(s)?:\/\//i.test(e))t=new this.providers.HttpProvider(e);else if(/^ws(s)?:\/\//i.test(e))t=new this.providers.WebsocketProvider(e);else throw new ProviderError(`Can't autodetect provider for "${e}"`)}else t=tB(e)?void 0:e;return this.emit(D.BEFORE_PROVIDER_CHANGE,this._provider),this._provider=t,this.emit(D.PROVIDER_CHANGED,this._provider),!0}send(e){return web3_request_manager_awaiter(this,void 0,void 0,function*(){let t=yield this._sendRequest(e);if(isResponseWithResult(t))return t.result;throw new ResponseError(t)})}sendBatch(e){return web3_request_manager_awaiter(this,void 0,void 0,function*(){let t=yield this._sendRequest(e);return t})}_sendRequest(e){return web3_request_manager_awaiter(this,void 0,void 0,function*(){let{provider:t}=this;if(tB(t))throw new ProviderError("Provider not available. Use `.setProvider` or `.provider=` to initialize the provider.");let a=isBatchRequest(e)?toBatchPayload(e):toPayload(e);if(isWeb3Provider(t)){let e;try{e=yield t.request(a)}catch(t){e=t}return this._processJsonRpcResponse(a,e,{legacy:!1,error:!1})}if(isEIP1193Provider(t))return t.request(a).then(e=>this._processJsonRpcResponse(a,e,{legacy:!0,error:!1})).catch(e=>this._processJsonRpcResponse(a,e,{legacy:!0,error:!0}));if(isLegacyRequestProvider(t))return new Promise((e,r)=>{let rejectWithError=e=>r(this._processJsonRpcResponse(a,e,{legacy:!0,error:!0})),resolveWithResponse=t=>e(this._processJsonRpcResponse(a,t,{legacy:!0,error:!1})),i=t.request(a,(e,t)=>e?rejectWithError(e):resolveWithResponse(t));isPromise(i)&&i.then(resolveWithResponse).catch(rejectWithError)});if(isLegacySendProvider(t))return new Promise((e,r)=>{t.send(a,(t,i)=>{if(t)return r(this._processJsonRpcResponse(a,t,{legacy:!0,error:!0}));if(tB(i))throw new ResponseError("",'Got a "nullish" response from provider.');return e(this._processJsonRpcResponse(a,i,{legacy:!0,error:!1}))})});if(isLegacySendAsyncProvider(t))return t.sendAsync(a).then(e=>this._processJsonRpcResponse(a,e,{legacy:!0,error:!1})).catch(e=>this._processJsonRpcResponse(a,e,{legacy:!0,error:!0}));throw new ProviderError("Provider does not have a request or send method to use.")})}_processJsonRpcResponse(e,t,{legacy:a,error:r}){if(tB(t))return this._buildResponse(e,null,r);if(json_rpc_isResponseWithError(t)){if(this.useRpcCallSpecification&&isResponseRpcError(t)){if(K.get(t.error.code)){let e=K.get(t.error.code).error;throw new e(t)}throw new RpcError(t)}if(!Web3RequestManager._isReverted(t))throw new InvalidResponseError(t,e)}if(isResponseWithResult(t))return t;if(t instanceof Error)throw Web3RequestManager._isReverted(t),t;if(!a&&isBatchRequest(e)&&isBatchResponse(t)||a&&!r&&isBatchRequest(e))return t;if(a&&r&&isBatchRequest(e))throw t;if(a&&!json_rpc_isResponseWithError(t)&&!isResponseWithResult(t))return this._buildResponse(e,t,r);if(isBatchRequest(e)&&!Array.isArray(t))throw new ResponseError(t,"Got normal response for a batch request.");if(!isBatchRequest(e)&&Array.isArray(t))throw new ResponseError(t,"Got batch response for a normal request.");if((json_rpc_isResponseWithError(t)||isResponseWithResult(t))&&!isBatchRequest(e)&&t.id&&e.id!==t.id)throw new InvalidResponseError(t);throw new ResponseError(t,"Invalid response")}static _isReverted(e){let t;if(json_rpc_isResponseWithError(e)?t=e.error:e instanceof Error&&(t=e),null==t?void 0:t.message.includes("revert"))throw new ContractExecutionError(t);return!1}_buildResponse(e,t,a){let r={jsonrpc:"2.0",id:isBatchRequest(e)?e[0].id:"id"in e?e.id:null};return a?Object.assign(Object.assign({},r),{error:t}):Object.assign(Object.assign({},r),{result:t})}};var web3_subscription_manager_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let Web3SubscriptionManager=class Web3SubscriptionManager{constructor(e,t,a=!1){this.requestManager=e,this.registeredSubscriptions=t,this.tolerateUnlinkedSubscription=a,this._subscriptions=new Map,this.requestManager.on(D.BEFORE_PROVIDER_CHANGE,()=>web3_subscription_manager_awaiter(this,void 0,void 0,function*(){yield this.unsubscribe()})),this.requestManager.on(D.PROVIDER_CHANGED,()=>{this.clear(),this.listenToProviderEvents()}),this.listenToProviderEvents()}listenToProviderEvents(){let e=this.requestManager.provider;this.requestManager.provider&&("function"!=typeof(null==e?void 0:e.supportsSubscriptions)||(null==e?void 0:e.supportsSubscriptions()))&&"function"==typeof this.requestManager.provider.on&&("function"==typeof this.requestManager.provider.request?this.requestManager.provider.on("message",e=>this.messageListener(e)):e.on("data",e=>this.messageListener(e)))}messageListener(e){var t,a,r;if(!e)throw new SubscriptionError("Should not call messageListener with no data. Type was");let i=(null===(t=e.params)||void 0===t?void 0:t.subscription)||(null===(a=e.data)||void 0===a?void 0:a.subscription)||(null===(r=e.id)||void 0===r?void 0:r.toString(16));if(i){let t=this._subscriptions.get(i);null==t||t.processSubscriptionData(e)}}subscribe(e,t,a=to){return web3_subscription_manager_awaiter(this,void 0,void 0,function*(){let r=this.registeredSubscriptions[e];if(!r)throw new SubscriptionError("Invalid subscription type");let i=new r(null!=t?t:void 0,{subscriptionManager:this,returnFormat:a});return yield this.addSubscription(i),i})}get subscriptions(){return this._subscriptions}addSubscription(e){return web3_subscription_manager_awaiter(this,void 0,void 0,function*(){if(!this.requestManager.provider)throw new ProviderError("Provider not available");if(!this.supportsSubscriptions())throw new SubscriptionError("The current provider does not support subscriptions");if(e.id&&this._subscriptions.has(e.id))throw new SubscriptionError(`Subscription with id "${e.id}" already exists`);if(yield e.sendSubscriptionRequest(),tB(e.id))throw new SubscriptionError("Subscription is not subscribed yet.");return this._subscriptions.set(e.id,e),e.id})}removeSubscription(e){return web3_subscription_manager_awaiter(this,void 0,void 0,function*(){let{id:t}=e;if(tB(t))throw new SubscriptionError("Subscription is not subscribed yet. Or, had already been unsubscribed but not through the Subscription Manager.");if(!this._subscriptions.has(t)&&!this.tolerateUnlinkedSubscription)throw new SubscriptionError(`Subscription with id "${t.toString()}" does not exists`);return yield e.sendUnsubscribeRequest(),this._subscriptions.delete(t),t})}unsubscribe(e){return web3_subscription_manager_awaiter(this,void 0,void 0,function*(){let t=[];for(let[a,r]of this.subscriptions.entries())(!e||"function"==typeof e&&e({id:a,sub:r}))&&t.push(this.removeSubscription(r));return Promise.all(t)})}clear(){this._subscriptions.clear()}supportsSubscriptions(){return!tB(this.requestManager.provider)&&isSupportSubscriptions(this.requestManager.provider)}};var web3_subscriptions_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let Web3Subscription=class Web3Subscription extends Web3EventEmitter{constructor(e,t){var a;super(),this.args=e;let{requestManager:r}=t,{subscriptionManager:i}=t;if(r&&i)throw new SubscriptionError("Only requestManager or subscriptionManager should be provided at Subscription constructor");if(!r&&!i)throw new SubscriptionError("Either requestManager or subscriptionManager should be provided at Subscription constructor");r?this._subscriptionManager=new Web3SubscriptionManager(r,{},!0):this._subscriptionManager=i,this._returnFormat=null!==(a=null==t?void 0:t.returnFormat)&&void 0!==a?a:to}get id(){return this._id}get lastBlock(){return this._lastBlock}subscribe(){return web3_subscriptions_awaiter(this,void 0,void 0,function*(){return this._subscriptionManager.addSubscription(this)})}processSubscriptionData(e){var t,a;(null==e?void 0:e.data)?this._processSubscriptionResult(null!==(a=null===(t=null==e?void 0:e.data)||void 0===t?void 0:t.result)&&void 0!==a?a:null==e?void 0:e.data):e&&isResponseWithNotification(e)&&this._processSubscriptionResult(null==e?void 0:e.params.result)}sendSubscriptionRequest(){return web3_subscriptions_awaiter(this,void 0,void 0,function*(){return this._id=yield this._subscriptionManager.requestManager.send({method:"eth_subscribe",params:this._buildSubscriptionParams()}),this.emit("connected",this._id),this._id})}get returnFormat(){return this._returnFormat}get subscriptionManager(){return this._subscriptionManager}resubscribe(){return web3_subscriptions_awaiter(this,void 0,void 0,function*(){yield this.unsubscribe(),yield this.subscribe()})}unsubscribe(){return web3_subscriptions_awaiter(this,void 0,void 0,function*(){this.id&&(yield this._subscriptionManager.removeSubscription(this))})}sendUnsubscribeRequest(){return web3_subscriptions_awaiter(this,void 0,void 0,function*(){yield this._subscriptionManager.requestManager.send({method:"eth_unsubscribe",params:[this.id]}),this._id=void 0})}formatSubscriptionResult(e){return e}_processSubscriptionResult(e){this.emit("data",this.formatSubscriptionResult(e))}_processSubscriptionError(e){this.emit("error",e)}_buildSubscriptionParams(){throw Error("Implement in the child class")}};var wallet_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let Wallet=class Wallet extends Web3BaseWallet{constructor(){super(...arguments),this._addressMap=new Map,this._defaultKeyName="web3js_wallet"}static getStorage(){let e;try{e=window.localStorage;let t="__storage_test__";return e.setItem(t,t),e.removeItem(t),e}catch(t){return t&&(22===t.code||1014===t.code||"QuotaExceededError"===t.name||"NS_ERROR_DOM_QUOTA_REACHED"===t.name)&&!object_isNullish(e)&&0!==e.length?e:void 0}}create(e){for(let t=0;t<e;t+=1)this.add(this._accountProvider.create());return this}add(e){var t;if("string"==typeof e)return this.add(this._accountProvider.privateKeyToAccount(e));let a=this.length,r=this.get(e.address);return r&&(console.warn(`Account ${e.address.toLowerCase()} already exists.`),a=null!==(t=this._addressMap.get(e.address.toLowerCase()))&&void 0!==t?t:a),this._addressMap.set(e.address.toLowerCase(),a),this[a]=e,this}get(e){if("string"==typeof e){let t=this._addressMap.get(e.toLowerCase());return object_isNullish(t)?void 0:this[t]}return this[e]}remove(e){if("string"==typeof e){let t=this._addressMap.get(e.toLowerCase());return!object_isNullish(t)&&(this._addressMap.delete(e.toLowerCase()),this.splice(t,1),!0)}return!!this[e]&&(this.splice(e,1),!0)}clear(){return this._addressMap.clear(),this.length=0,this}encrypt(e,t){return wallet_awaiter(this,void 0,void 0,function*(){return Promise.all(this.map(a=>wallet_awaiter(this,void 0,void 0,function*(){return a.encrypt(e,t)})))})}decrypt(e,t,a){return wallet_awaiter(this,void 0,void 0,function*(){let r=yield Promise.all(e.map(e=>wallet_awaiter(this,void 0,void 0,function*(){return this._accountProvider.decrypt(e,t,a)})));for(let e of r)this.add(e);return this})}save(e,t){return wallet_awaiter(this,void 0,void 0,function*(){let a=Wallet.getStorage();if(!a)throw Error("Local storage not available.");return a.setItem(null!=t?t:this._defaultKeyName,JSON.stringify((yield this.encrypt(e)))),!0})}load(e,t){return wallet_awaiter(this,void 0,void 0,function*(){let a=Wallet.getStorage();if(!a)throw Error("Local storage not available.");let r=a.getItem(null!=t?t:this._defaultKeyName);return r&&(yield this.decrypt(JSON.parse(r)||[],e)),this})}};let tV={web:ea};function validateOpt(e,t,a){if(!a.startsWith("aes-"))throw Error(`AES submodule doesn't support mode ${a}`);if(16!==t.length)throw Error("AES: wrong IV length");if(a.startsWith("aes-128")&&16!==e.length||a.startsWith("aes-256")&&32!==e.length)throw Error("AES: wrong key length")}async function getBrowserKey(e,t,a){let r;if(!tV.web)throw Error("Browser crypto not available.");if(["aes-128-cbc","aes-256-cbc"].includes(e)&&(r="cbc"),["aes-128-ctr","aes-256-ctr"].includes(e)&&(r="ctr"),!r)throw Error("AES: unsupported mode");let i=await tV.web.subtle.importKey("raw",t,{name:`AES-${r.toUpperCase()}`,length:8*t.length},!0,["encrypt","decrypt"]);return[i,{name:`aes-${r}`,iv:a,counter:a,length:128}]}async function encrypt(e,t,a,r="aes-128-ctr",i=!0){if(validateOpt(t,a,r),tV.web){let[s,n]=await getBrowserKey(r,t,a),o=await tV.web.subtle.encrypt(n,s,e),d=new Uint8Array(o);return i||"aes-cbc"!==n.name||e.length%16||(d=d.slice(0,-16)),d}if(tV.node){let s=tV.node.createCipheriv(r,t,a);return s.setAutoPadding(i),utils_concatBytes(s.update(e),s.final())}throw Error("The environment doesn't have AES module")}async function getPadding(e,t,a,r){let i=e.slice(-16);for(let e=0;e<16;e++)i[e]^=16^a[e];let s=await encrypt(i,t,a,r);return s.slice(0,16)}async function decrypt(e,t,a,r="aes-128-ctr",i=!0){if(validateOpt(t,a,r),tV.web){let[s,n]=await getBrowserKey(r,t,a);if(!i&&"aes-cbc"===n.name){let i=await getPadding(e,t,a,r);e=utils_concatBytes(e,i)}let o=await tV.web.subtle.decrypt(n,s,e),d=new Uint8Array(o);if("aes-cbc"===n.name){let i=await encrypt(d,t,a,r);if(!function(e,t){if(e.length!==t.length)return!1;for(let a=0;a<e.length;a++)if(e[a]!==t[a])return!1;return!0}(i,e))throw Error("AES: wrong padding")}return d}if(tV.node){let s=tV.node.createDecipheriv(r,t,a);return s.setAutoPadding(i),utils_concatBytes(s.update(e),s.final())}throw Error("The environment doesn't have AES module")}let HMAC=class HMAC extends Hash{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,J.hash(e);let a=toBytes(t);if(this.iHash=e.create(),"function"!=typeof this.iHash.update)throw Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;let r=this.blockLen,i=new Uint8Array(r);i.set(a.length>r?e.create().update(a).digest():a);for(let e=0;e<i.length;e++)i[e]^=54;this.iHash.update(i),this.oHash=e.create();for(let e=0;e<i.length;e++)i[e]^=106;this.oHash.update(i),i.fill(0)}update(e){return J.exists(this),this.iHash.update(e),this}digestInto(e){J.exists(this),J.bytes(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){let e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));let{oHash:t,iHash:a,finished:r,destroyed:i,blockLen:s,outputLen:n}=this;return e.finished=r,e.destroyed=i,e.blockLen=s,e.outputLen=n,e.oHash=t._cloneInto(e.oHash),e.iHash=a._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}};let hmac=(e,t,a)=>new HMAC(e,t).update(a).digest();function pbkdf2(e,t,a,r){var i;let s;let{c:n,dkLen:o,DK:d,PRF:p,PRFSalt:l}=function(e,t,a,r){J.hash(e);let i=checkOpts({dkLen:32,asyncTick:10},r),{c:s,dkLen:n,asyncTick:o}=i;if(J.number(s),J.number(n),J.number(o),s<1)throw Error("PBKDF2: iterations (c) should be >= 1");let d=toBytes(t),p=toBytes(a),l=new Uint8Array(n),m=hmac.create(e,d),c=m._cloneInto().update(p);return{c:s,dkLen:n,asyncTick:o,DK:l,PRF:m,PRFSalt:c}}(e,t,a,r),m=new Uint8Array(4),c=utils_createView(m),u=new Uint8Array(p.outputLen);for(let e=1,t=0;t<o;e++,t+=p.outputLen){let a=d.subarray(t,t+p.outputLen);c.setInt32(0,e,!1),(s=l._cloneInto(s)).update(m).digestInto(u),a.set(u.subarray(0,a.length));for(let e=1;e<n;e++){p._cloneInto(s).update(u).digestInto(u);for(let e=0;e<a.length;e++)a[e]^=u[e]}}return i=s,p.destroy(),l.destroy(),i&&i.destroy(),u.fill(0),d}hmac.create=(e,t)=>new HMAC(e,t);let SHA2=class SHA2 extends Hash{constructor(e,t,a,r){super(),this.blockLen=e,this.outputLen=t,this.padOffset=a,this.isLE=r,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=utils_createView(this.buffer)}update(e){J.exists(this);let{view:t,buffer:a,blockLen:r}=this;e=toBytes(e);let i=e.length;for(let s=0;s<i;){let n=Math.min(r-this.pos,i-s);if(n===r){let t=utils_createView(e);for(;r<=i-s;s+=r)this.process(t,s);continue}a.set(e.subarray(s,s+n),this.pos),this.pos+=n,s+=n,this.pos===r&&(this.process(t,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){J.exists(this),J.output(e,this),this.finished=!0;let{buffer:t,view:a,blockLen:r,isLE:i}=this,{pos:s}=this;t[s++]=128,this.buffer.subarray(s).fill(0),this.padOffset>r-s&&(this.process(a,0),s=0);for(let e=s;e<r;e++)t[e]=0;(function(e,t,a,r){if("function"==typeof e.setBigUint64)return e.setBigUint64(t,a,r);let i=BigInt(32),s=BigInt(4294967295),n=Number(a>>i&s),o=Number(a&s),d=r?4:0,p=r?0:4;e.setUint32(t+d,n,r),e.setUint32(t+p,o,r)})(a,r-8,BigInt(8*this.length),i),this.process(a,0);let n=utils_createView(e),o=this.outputLen;if(o%4)throw Error("_sha2: outputLen should be aligned to 32bit");let d=o/4,p=this.get();if(d>p.length)throw Error("_sha2: outputLen bigger than state");for(let e=0;e<d;e++)n.setUint32(4*e,p[e],i)}digest(){let{buffer:e,outputLen:t}=this;this.digestInto(e);let a=e.slice(0,t);return this.destroy(),a}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());let{blockLen:t,buffer:a,length:r,finished:i,destroyed:s,pos:n}=this;return e.length=r,e.pos=n,e.finished=i,e.destroyed=s,r%t&&e.buffer.set(a),e}};let Chi=(e,t,a)=>e&t^~e&a,Maj=(e,t,a)=>e&t^e&a^t&a,tF=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),tU=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),tZ=new Uint32Array(64);let SHA256=class SHA256 extends SHA2{constructor(){super(64,32,8,!1),this.A=0|tU[0],this.B=0|tU[1],this.C=0|tU[2],this.D=0|tU[3],this.E=0|tU[4],this.F=0|tU[5],this.G=0|tU[6],this.H=0|tU[7]}get(){let{A:e,B:t,C:a,D:r,E:i,F:s,G:n,H:o}=this;return[e,t,a,r,i,s,n,o]}set(e,t,a,r,i,s,n,o){this.A=0|e,this.B=0|t,this.C=0|a,this.D=0|r,this.E=0|i,this.F=0|s,this.G=0|n,this.H=0|o}process(e,t){for(let a=0;a<16;a++,t+=4)tZ[a]=e.getUint32(t,!1);for(let e=16;e<64;e++){let t=tZ[e-15],a=tZ[e-2],r=rotr(t,7)^rotr(t,18)^t>>>3,i=rotr(a,17)^rotr(a,19)^a>>>10;tZ[e]=i+tZ[e-7]+r+tZ[e-16]|0}let{A:a,B:r,C:i,D:s,E:n,F:o,G:d,H:p}=this;for(let e=0;e<64;e++){let t=rotr(n,6)^rotr(n,11)^rotr(n,25),l=p+t+Chi(n,o,d)+tF[e]+tZ[e]|0,m=rotr(a,2)^rotr(a,13)^rotr(a,22),c=m+Maj(a,r,i)|0;p=d,d=o,o=n,n=s+l|0,s=i,i=r,r=a,a=l+c|0}a=a+this.A|0,r=r+this.B|0,i=i+this.C|0,s=s+this.D|0,n=n+this.E|0,o=o+this.F|0,d=d+this.G|0,p=p+this.H|0,this.set(a,r,i,s,n,o,d,p)}roundClean(){tZ.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}};let SHA224=class SHA224 extends SHA256{constructor(){super(),this.A=-1056596264,this.B=914150663,this.C=812702999,this.D=-150054599,this.E=-4191439,this.F=1750603025,this.G=1694076839,this.H=-1090891868,this.outputLen=28}};let tG=wrapConstructor(()=>new SHA256);wrapConstructor(()=>new SHA224);let[tW,tq]=X.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(e=>BigInt(e))),tz=new Uint32Array(80),tQ=new Uint32Array(80);let SHA512=class SHA512 extends SHA2{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){let{Ah:e,Al:t,Bh:a,Bl:r,Ch:i,Cl:s,Dh:n,Dl:o,Eh:d,El:p,Fh:l,Fl:m,Gh:c,Gl:u,Hh:f,Hl:v}=this;return[e,t,a,r,i,s,n,o,d,p,l,m,c,u,f,v]}set(e,t,a,r,i,s,n,o,d,p,l,m,c,u,f,v){this.Ah=0|e,this.Al=0|t,this.Bh=0|a,this.Bl=0|r,this.Ch=0|i,this.Cl=0|s,this.Dh=0|n,this.Dl=0|o,this.Eh=0|d,this.El=0|p,this.Fh=0|l,this.Fl=0|m,this.Gh=0|c,this.Gl=0|u,this.Hh=0|f,this.Hl=0|v}process(e,t){for(let a=0;a<16;a++,t+=4)tz[a]=e.getUint32(t),tQ[a]=e.getUint32(t+=4);for(let e=16;e<80;e++){let t=0|tz[e-15],a=0|tQ[e-15],r=X.rotrSH(t,a,1)^X.rotrSH(t,a,8)^X.shrSH(t,a,7),i=X.rotrSL(t,a,1)^X.rotrSL(t,a,8)^X.shrSL(t,a,7),s=0|tz[e-2],n=0|tQ[e-2],o=X.rotrSH(s,n,19)^X.rotrBH(s,n,61)^X.shrSH(s,n,6),d=X.rotrSL(s,n,19)^X.rotrBL(s,n,61)^X.shrSL(s,n,6),p=X.add4L(i,d,tQ[e-7],tQ[e-16]),l=X.add4H(p,r,o,tz[e-7],tz[e-16]);tz[e]=0|l,tQ[e]=0|p}let{Ah:a,Al:r,Bh:i,Bl:s,Ch:n,Cl:o,Dh:d,Dl:p,Eh:l,El:m,Fh:c,Fl:u,Gh:f,Gl:v,Hh:g,Hl:y}=this;for(let e=0;e<80;e++){let t=X.rotrSH(l,m,14)^X.rotrSH(l,m,18)^X.rotrBH(l,m,41),b=X.rotrSL(l,m,14)^X.rotrSL(l,m,18)^X.rotrBL(l,m,41),_=l&c^~l&f,w=m&u^~m&v,A=X.add5L(y,b,w,tq[e],tQ[e]),E=X.add5H(A,g,t,_,tW[e],tz[e]),x=0|A,S=X.rotrSH(a,r,28)^X.rotrBH(a,r,34)^X.rotrBH(a,r,39),T=X.rotrSL(a,r,28)^X.rotrBL(a,r,34)^X.rotrBL(a,r,39),I=a&i^a&n^i&n,k=r&s^r&o^s&o;g=0|f,y=0|v,f=0|c,v=0|u,c=0|l,u=0|m,({h:l,l:m}=X.add(0|d,0|p,0|E,0|x)),d=0|n,p=0|o,n=0|i,o=0|s,i=0|a,s=0|r;let C=X.add3L(x,T,k);a=X.add3H(C,E,S,I),r=0|C}({h:a,l:r}=X.add(0|this.Ah,0|this.Al,0|a,0|r)),({h:i,l:s}=X.add(0|this.Bh,0|this.Bl,0|i,0|s)),({h:n,l:o}=X.add(0|this.Ch,0|this.Cl,0|n,0|o)),({h:d,l:p}=X.add(0|this.Dh,0|this.Dl,0|d,0|p)),({h:l,l:m}=X.add(0|this.Eh,0|this.El,0|l,0|m)),({h:c,l:u}=X.add(0|this.Fh,0|this.Fl,0|c,0|u)),({h:f,l:v}=X.add(0|this.Gh,0|this.Gl,0|f,0|v)),({h:g,l:y}=X.add(0|this.Hh,0|this.Hl,0|g,0|y)),this.set(a,r,i,s,n,o,d,p,l,m,c,u,f,v,g,y)}roundClean(){tz.fill(0),tQ.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}};let SHA512_224=class SHA512_224 extends SHA512{constructor(){super(),this.Ah=-1942145080,this.Al=424955298,this.Bh=1944164710,this.Bl=-1982016298,this.Ch=502970286,this.Cl=855612546,this.Dh=1738396948,this.Dl=1479516111,this.Eh=258812777,this.El=2077511080,this.Fh=2011393907,this.Fl=79989058,this.Gh=1067287976,this.Gl=1780299464,this.Hh=286451373,this.Hl=-1848208735,this.outputLen=28}};let SHA512_256=class SHA512_256 extends SHA512{constructor(){super(),this.Ah=573645204,this.Al=-64227540,this.Bh=-1621794909,this.Bl=-934517566,this.Ch=596883563,this.Cl=1867755857,this.Dh=-1774684391,this.Dl=1497426621,this.Eh=-1775747358,this.El=-1467023389,this.Fh=-1101128155,this.Fl=1401305490,this.Gh=721525244,this.Gl=746961066,this.Hh=246885852,this.Hl=-2117784414,this.outputLen=32}};let SHA384=class SHA384 extends SHA512{constructor(){super(),this.Ah=-876896931,this.Al=-1056596264,this.Bh=1654270250,this.Bl=914150663,this.Ch=-1856437926,this.Cl=812702999,this.Dh=355462360,this.Dl=-150054599,this.Eh=1731405415,this.El=-4191439,this.Fh=-1900787065,this.Fl=1750603025,this.Gh=-619958771,this.Gl=1694076839,this.Hh=1203062813,this.Hl=-1090891868,this.outputLen=48}};let tK=wrapConstructor(()=>new SHA512);function pbkdf2Sync(e,t,a,r,i){if(!["sha256","sha512"].includes(i))throw Error("Only sha256 and sha512 are supported");return eb(e),eb(t),pbkdf2("sha256"===i?tG:tK,e,t,{c:a,dkLen:r})}wrapConstructor(()=>new SHA512_224),wrapConstructor(()=>new SHA512_256),wrapConstructor(()=>new SHA384);let rotl=(e,t)=>e<<t|e>>>32-t;function XorAndSalsa(e,t,a,r,i,s){let n=e[t++]^a[r++],o=e[t++]^a[r++],d=e[t++]^a[r++],p=e[t++]^a[r++],l=e[t++]^a[r++],m=e[t++]^a[r++],c=e[t++]^a[r++],u=e[t++]^a[r++],f=e[t++]^a[r++],v=e[t++]^a[r++],g=e[t++]^a[r++],y=e[t++]^a[r++],b=e[t++]^a[r++],_=e[t++]^a[r++],w=e[t++]^a[r++],A=e[t++]^a[r++],E=n,x=o,S=d,T=p,I=l,k=m,C=c,N=u,B=f,P=v,D=g,O=y,R=b,M=_,L=w,j=A;for(let e=0;e<8;e+=2)I^=rotl(E+R|0,7),B^=rotl(I+E|0,9),R^=rotl(B+I|0,13),E^=rotl(R+B|0,18),P^=rotl(k+x|0,7),M^=rotl(P+k|0,9),x^=rotl(M+P|0,13),k^=rotl(x+M|0,18),L^=rotl(D+C|0,7),S^=rotl(L+D|0,9),C^=rotl(S+L|0,13),D^=rotl(C+S|0,18),T^=rotl(j+O|0,7),N^=rotl(T+j|0,9),O^=rotl(N+T|0,13),j^=rotl(O+N|0,18),x^=rotl(E+T|0,7),S^=rotl(x+E|0,9),T^=rotl(S+x|0,13),E^=rotl(T+S|0,18),C^=rotl(k+I|0,7),N^=rotl(C+k|0,9),I^=rotl(N+C|0,13),k^=rotl(I+N|0,18),O^=rotl(D+P|0,7),B^=rotl(O+D|0,9),P^=rotl(B+O|0,13),D^=rotl(P+B|0,18),R^=rotl(j+L|0,7),M^=rotl(R+j|0,9),L^=rotl(M+R|0,13),j^=rotl(L+M|0,18);i[s++]=n+E|0,i[s++]=o+x|0,i[s++]=d+S|0,i[s++]=p+T|0,i[s++]=l+I|0,i[s++]=m+k|0,i[s++]=c+C|0,i[s++]=u+N|0,i[s++]=f+B|0,i[s++]=v+P|0,i[s++]=g+D|0,i[s++]=y+O|0,i[s++]=b+R|0,i[s++]=_+M|0,i[s++]=w+L|0,i[s++]=A+j|0}function BlockMix(e,t,a,r,i){let s=r+0,n=r+16*i;for(let r=0;r<16;r++)a[n+r]=e[t+(2*i-1)*16+r];for(let r=0;r<i;r++,s+=16,t+=16)XorAndSalsa(a,n,e,t,a,s),r>0&&(n+=16),XorAndSalsa(a,s,e,t+=16,a,n)}function scryptSync(e,t,a,r,i,s,n){return eb(e),eb(t),function(e,t,a){let{N:r,r:i,p:s,dkLen:n,blockSize32:o,V:d,B32:p,B:l,tmp:m,blockMixCb:c}=function(e,t,a){let r=checkOpts({dkLen:32,asyncTick:10,maxmem:1073742848},a),{N:i,r:s,p:n,dkLen:o,asyncTick:d,maxmem:p,onProgress:l}=r;if(J.number(i),J.number(s),J.number(n),J.number(o),J.number(d),J.number(p),void 0!==l&&"function"!=typeof l)throw Error("progressCb should be function");let m=128*s,c=m/4;if(i<=1||(i&i-1)!=0||i>=2**(m/8)||i>4294967296)throw Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");if(n<0||n>(4294967296-1)*32/m)throw Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");if(o<0||o>(4294967296-1)*32)throw Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");let u=m*(i+n);if(u>p)throw Error(`Scrypt: parameters too large, ${u} (128 * r * (N + p)) > ${p} (maxmem)`);let f=pbkdf2(tG,e,t,{c:1,dkLen:m*n}),v=u32(f),g=u32(new Uint8Array(m*i)),y=u32(new Uint8Array(m)),blockMixCb=()=>{};if(l){let e=2*i*n,t=Math.max(Math.floor(e/1e4),1),a=0;blockMixCb=()=>{a++,l&&(!(a%t)||a===e)&&l(a/e)}}return{N:i,r:s,p:n,dkLen:o,blockSize32:c,V:g,B32:v,B:f,tmp:y,blockMixCb,asyncTick:d}}(e,t,a);for(let e=0;e<s;e++){let t=o*e;for(let e=0;e<o;e++)d[e]=p[t+e];for(let e=0,t=0;e<r-1;e++)BlockMix(d,t,d,t+=o,i),c();BlockMix(d,(r-1)*o,p,t,i),c();for(let e=0;e<r;e++){let e=p[t+o-16]%r;for(let a=0;a<o;a++)m[a]=p[t+a]^d[e*o+a];BlockMix(m,0,p,t,i),c()}}return function(e,t,a,r,i){let s=pbkdf2(tG,e,a,{c:1,dkLen:t});return a.fill(0),r.fill(0),i.fill(0),s}(e,n,l,d,m)}(e,t,{N:a,r:i,p:r,dkLen:s,onProgress:n})}BigInt(0);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */let tJ=BigInt(1),t$=BigInt(2),utils_u8a=e=>e instanceof Uint8Array,tY=Array.from({length:256},(e,t)=>t.toString(16).padStart(2,"0"));function utils_bytesToHex(e){if(!utils_u8a(e))throw Error("Uint8Array expected");let t="";for(let a=0;a<e.length;a++)t+=tY[e[a]];return t}function abstract_utils_hexToNumber(e){if("string"!=typeof e)throw Error("hex string expected, got "+typeof e);return BigInt(""===e?"0":`0x${e}`)}function abstract_utils_hexToBytes(e){if("string"!=typeof e)throw Error("hex string expected, got "+typeof e);let t=e.length;if(t%2)throw Error("padded hex string expected, got unpadded hex of length "+t);let a=new Uint8Array(t/2);for(let t=0;t<a.length;t++){let r=2*t,i=e.slice(r,r+2),s=Number.parseInt(i,16);if(Number.isNaN(s)||s<0)throw Error("Invalid byte sequence");a[t]=s}return a}function utils_bytesToNumberBE(e){return abstract_utils_hexToNumber(utils_bytesToHex(e))}function bytesToNumberLE(e){if(!utils_u8a(e))throw Error("Uint8Array expected");return abstract_utils_hexToNumber(utils_bytesToHex(Uint8Array.from(e).reverse()))}function utils_numberToBytesBE(e,t){return abstract_utils_hexToBytes(e.toString(16).padStart(2*t,"0"))}function numberToBytesLE(e,t){return utils_numberToBytesBE(e,t).reverse()}function utils_ensureBytes(e,t,a){let r;if("string"==typeof t)try{r=abstract_utils_hexToBytes(t)}catch(a){throw Error(`${e} must be valid hex string, got "${t}". Cause: ${a}`)}else if(utils_u8a(t))r=Uint8Array.from(t);else throw Error(`${e} must be hex string or Uint8Array`);let i=r.length;if("number"==typeof a&&i!==a)throw Error(`${e} expected ${a} bytes, got ${i}`);return r}function abstract_utils_concatBytes(...e){let t=new Uint8Array(e.reduce((e,t)=>e+t.length,0)),a=0;return e.forEach(e=>{if(!utils_u8a(e))throw Error("Uint8Array expected");t.set(e,a),a+=e.length}),t}let bitMask=e=>(t$<<BigInt(e-1))-tJ,u8n=e=>new Uint8Array(e),u8fr=e=>Uint8Array.from(e);function createHmacDrbg(e,t,a){if("number"!=typeof e||e<2)throw Error("hashLen must be a number");if("number"!=typeof t||t<2)throw Error("qByteLen must be a number");if("function"!=typeof a)throw Error("hmacFn must be a function");let r=u8n(e),i=u8n(e),s=0,reset=()=>{r.fill(1),i.fill(0),s=0},h=(...e)=>a(i,r,...e),reseed=(e=u8n())=>{i=h(u8fr([0]),e),r=h(),0!==e.length&&(i=h(u8fr([1]),e),r=h())},gen=()=>{if(s++>=1e3)throw Error("drbg: tried 1000 values");let e=0,a=[];for(;e<t;){r=h();let t=r.slice();a.push(t),e+=r.length}return abstract_utils_concatBytes(...a)};return(e,t)=>{let a;for(reset(),reseed(e);!(a=t(gen()));)reseed();return reset(),a}}let tX={bigint:e=>"bigint"==typeof e,function:e=>"function"==typeof e,boolean:e=>"boolean"==typeof e,string:e=>"string"==typeof e,isSafeInteger:e=>Number.isSafeInteger(e),array:e=>Array.isArray(e),field:(e,t)=>t.Fp.isValid(e),hash:e=>"function"==typeof e&&Number.isSafeInteger(e.outputLen)};function utils_validateObject(e,t,a={}){let checkField=(t,a,r)=>{let i=tX[a];if("function"!=typeof i)throw Error(`Invalid validator "${a}", expected function`);let s=e[t];if((!r||void 0!==s)&&!i(s,e))throw Error(`Invalid param ${String(t)}=${s} (${typeof s}), expected ${a}`)};for(let[e,a]of Object.entries(t))checkField(e,a,!1);for(let[e,t]of Object.entries(a))checkField(e,t,!0);return e}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */let t1=BigInt(0),t0=BigInt(1),t2=BigInt(2),t6=BigInt(3),t4=BigInt(4),t3=BigInt(5),t9=BigInt(8);function modular_mod(e,t){let a=e%t;return a>=t1?a:t+a}function pow2(e,t,a){let r=e;for(;t-- >t1;)r*=r,r%=a;return r}function invert(e,t){if(e===t1||t<=t1)throw Error(`invert: expected positive integers, got n=${e} mod=${t}`);let a=modular_mod(e,t),r=t,i=t1,s=t0,n=t0,o=t1;for(;a!==t1;){let e=r/a,t=r%a,d=i-n*e,p=s-o*e;r=a,a=t,i=n,s=o,n=d,o=p}let d=r;if(d!==t0)throw Error("invert: does not exist");return modular_mod(i,t)}BigInt(9),BigInt(16);let t8=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function nLength(e,t){let a=void 0!==t?t:e.toString(2).length;return{nBitLength:a,nByteLength:Math.ceil(a/8)}}/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */let t5=BigInt(0),t7=BigInt(1);function validateBasic(e){return function(e){let t=t8.reduce((e,t)=>(e[t]="function",e),{ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"});utils_validateObject(e,t)}(e.Fp),utils_validateObject(e,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...nLength(e.n,e.nBitLength),...e,p:e.Fp.ORDER})}let{bytesToNumberBE:ae,hexToBytes:aa}=W,ar={Err:class extends Error{constructor(e=""){super(e)}},_parseInt(e){let{Err:t}=ar;if(e.length<2||2!==e[0])throw new t("Invalid signature integer tag");let a=e[1],r=e.subarray(2,a+2);if(!a||r.length!==a)throw new t("Invalid signature integer: wrong length");if(128&r[0])throw new t("Invalid signature integer: negative");if(0===r[0]&&!(128&r[1]))throw new t("Invalid signature integer: unnecessary leading zero");return{d:ae(r),l:e.subarray(a+2)}},toSig(e){let{Err:t}=ar,a="string"==typeof e?aa(e):e;if(!(a instanceof Uint8Array))throw Error("ui8a expected");let r=a.length;if(r<2||48!=a[0])throw new t("Invalid signature tag");if(a[1]!==r-2)throw new t("Invalid signature: incorrect length");let{d:i,l:s}=ar._parseInt(a.subarray(2)),{d:n,l:o}=ar._parseInt(s);if(o.length)throw new t("Invalid signature: left bytes after parsing");return{r:i,s:n}},hexFromSig(e){let slice=e=>8&Number.parseInt(e[0],16)?"00"+e:e,h=e=>{let t=e.toString(16);return 1&t.length?`0${t}`:t},t=slice(h(e.s)),a=slice(h(e.r)),r=t.length/2,i=a.length/2,s=h(r),n=h(i);return`30${h(i+r+4)}02${n}${a}02${s}${t}`}},ai=BigInt(0),as=BigInt(1),an=(BigInt(2),BigInt(3));BigInt(4);/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */let ao=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),ad=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),ap=BigInt(1),al=BigInt(2),divNearest=(e,t)=>(e+t/al)/t,am=function(e,t,a=!1,r={}){if(e<=t1)throw Error(`Expected Fp ORDER > 0, got ${e}`);let{nBitLength:i,nByteLength:s}=nLength(e,t);if(s>2048)throw Error("Field lengths over 2048 bytes are not supported");let n=function(e){if(e%t4===t6){let t=(e+t0)/t4;return function(e,a){let r=e.pow(a,t);if(!e.eql(e.sqr(r),a))throw Error("Cannot find square root");return r}}if(e%t9===t3){let t=(e-t3)/t9;return function(e,a){let r=e.mul(a,t2),i=e.pow(r,t),s=e.mul(a,i),n=e.mul(e.mul(s,t2),i),o=e.mul(s,e.sub(n,e.ONE));if(!e.eql(e.sqr(o),a))throw Error("Cannot find square root");return o}}return function(e){let t,a,r;let i=(e-t0)/t2;for(t=e-t0,a=0;t%t2===t1;t/=t2,a++);for(r=t2;r<e&&function(e,t,a){if(a<=t1||t<t1)throw Error("Expected power/modulo > 0");if(a===t0)return t1;let r=t0;for(;t>t1;)t&t0&&(r=r*e%a),e=e*e%a,t>>=t0;return r}(r,i,e)!==e-t0;r++);if(1===a){let t=(e+t0)/t4;return function(e,a){let r=e.pow(a,t);if(!e.eql(e.sqr(r),a))throw Error("Cannot find square root");return r}}let s=(t+t0)/t2;return function(e,n){if(e.pow(n,i)===e.neg(e.ONE))throw Error("Cannot find square root");let o=a,d=e.pow(e.mul(e.ONE,r),t),p=e.pow(n,s),l=e.pow(n,t);for(;!e.eql(l,e.ONE);){if(e.eql(l,e.ZERO))return e.ZERO;let t=1;for(let a=e.sqr(l);t<o&&!e.eql(a,e.ONE);t++)a=e.sqr(a);let a=e.pow(d,t0<<BigInt(o-t-1));d=e.sqr(a),p=e.mul(p,a),l=e.mul(l,d),o=t}return p}}(e)}(e),o=Object.freeze({ORDER:e,BITS:i,BYTES:s,MASK:bitMask(i),ZERO:t1,ONE:t0,create:t=>modular_mod(t,e),isValid:t=>{if("bigint"!=typeof t)throw Error(`Invalid field element: expected bigint, got ${typeof t}`);return t1<=t&&t<e},is0:e=>e===t1,isOdd:e=>(e&t0)===t0,neg:t=>modular_mod(-t,e),eql:(e,t)=>e===t,sqr:t=>modular_mod(t*t,e),add:(t,a)=>modular_mod(t+a,e),sub:(t,a)=>modular_mod(t-a,e),mul:(t,a)=>modular_mod(t*a,e),pow:(e,t)=>(function(e,t,a){if(a<t1)throw Error("Expected power > 0");if(a===t1)return e.ONE;if(a===t0)return t;let r=e.ONE,i=t;for(;a>t1;)a&t0&&(r=e.mul(r,i)),i=e.sqr(i),a>>=t0;return r})(o,e,t),div:(t,a)=>modular_mod(t*invert(a,e),e),sqrN:e=>e*e,addN:(e,t)=>e+t,subN:(e,t)=>e-t,mulN:(e,t)=>e*t,inv:t=>invert(t,e),sqrt:r.sqrt||(e=>n(o,e)),invertBatch:e=>(function(e,t){let a=Array(t.length),r=t.reduce((t,r,i)=>e.is0(r)?t:(a[i]=t,e.mul(t,r)),e.ONE),i=e.inv(r);return t.reduceRight((t,r,i)=>e.is0(r)?t:(a[i]=e.mul(t,a[i]),e.mul(t,r)),i),a})(o,e),cmov:(e,t,a)=>a?t:e,toBytes:e=>a?numberToBytesLE(e,s):utils_numberToBytesBE(e,s),fromBytes:e=>{if(e.length!==s)throw Error(`Fp.fromBytes: expected ${s}, got ${e.length}`);return a?bytesToNumberLE(e):utils_bytesToNumberBE(e)}});return Object.freeze(o)}(ao,void 0,void 0,{sqrt:function(e){let t=BigInt(3),a=BigInt(6),r=BigInt(11),i=BigInt(22),s=BigInt(23),n=BigInt(44),o=BigInt(88),d=e*e*e%ao,p=d*d*e%ao,l=pow2(p,t,ao)*p%ao,m=pow2(l,t,ao)*p%ao,c=pow2(m,al,ao)*d%ao,u=pow2(c,r,ao)*c%ao,f=pow2(u,i,ao)*u%ao,v=pow2(f,n,ao)*f%ao,g=pow2(v,o,ao)*v%ao,y=pow2(g,n,ao)*f%ao,b=pow2(y,t,ao)*p%ao,_=pow2(b,s,ao)*u%ao,w=pow2(_,a,ao)*d%ao,A=pow2(w,al,ao);if(!am.eql(am.sqr(A),e))throw Error("Cannot find square root");return A}}),ac=function(e,t){let create=t=>(function(e){let t=function(e){let t=validateBasic(e);return utils_validateObject(t,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...t})}(e),{Fp:a,n:r}=t,i=a.BYTES+1,s=2*a.BYTES+1;function modN(e){return modular_mod(e,r)}let{ProjectivePoint:n,normPrivateKeyToScalar:o,weierstrassEquation:d,isWithinCurveOrder:p}=function(e){let t=/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function(e){let t=validateBasic(e);utils_validateObject(t,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});let{endo:a,Fp:r,a:i}=t;if(a){if(!r.eql(i,r.ZERO))throw Error("Endomorphism can only be defined for Koblitz curves that have a=0");if("object"!=typeof a||"bigint"!=typeof a.beta||"function"!=typeof a.splitScalar)throw Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...t})}(e),{Fp:a}=t,r=t.toBytes||((e,t,r)=>{let i=t.toAffine();return abstract_utils_concatBytes(Uint8Array.from([4]),a.toBytes(i.x),a.toBytes(i.y))}),i=t.fromBytes||(e=>{let t=e.subarray(1),r=a.fromBytes(t.subarray(0,a.BYTES)),i=a.fromBytes(t.subarray(a.BYTES,2*a.BYTES));return{x:r,y:i}});function weierstrassEquation(e){let{a:r,b:i}=t,s=a.sqr(e),n=a.mul(s,e);return a.add(a.add(n,a.mul(e,r)),i)}if(!a.eql(a.sqr(t.Gy),weierstrassEquation(t.Gx)))throw Error("bad generator point: equation left != right");function isWithinCurveOrder(e){return"bigint"==typeof e&&ai<e&&e<t.n}function assertGE(e){if(!isWithinCurveOrder(e))throw Error("Expected valid bigint: 0 < bigint < curve.n")}function normPrivateKeyToScalar(e){let a;let{allowedPrivateKeyLengths:r,nByteLength:i,wrapPrivateKey:s,n}=t;if(r&&"bigint"!=typeof e){if(e instanceof Uint8Array&&(e=utils_bytesToHex(e)),"string"!=typeof e||!r.includes(e.length))throw Error("Invalid key");e=e.padStart(2*i,"0")}try{a="bigint"==typeof e?e:utils_bytesToNumberBE(utils_ensureBytes("private key",e,i))}catch(t){throw Error(`private key must be ${i} bytes, hex or bigint, not ${typeof e}`)}return s&&(a=modular_mod(a,n)),assertGE(a),a}let s=new Map;function assertPrjPoint(e){if(!(e instanceof Point))throw Error("ProjectivePoint expected")}let Point=class Point{constructor(e,t,r){if(this.px=e,this.py=t,this.pz=r,null==e||!a.isValid(e))throw Error("x required");if(null==t||!a.isValid(t))throw Error("y required");if(null==r||!a.isValid(r))throw Error("z required")}static fromAffine(e){let{x:t,y:r}=e||{};if(!e||!a.isValid(t)||!a.isValid(r))throw Error("invalid affine point");if(e instanceof Point)throw Error("projective point not allowed");let is0=e=>a.eql(e,a.ZERO);return is0(t)&&is0(r)?Point.ZERO:new Point(t,r,a.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(e){let t=a.invertBatch(e.map(e=>e.pz));return e.map((e,a)=>e.toAffine(t[a])).map(Point.fromAffine)}static fromHex(e){let t=Point.fromAffine(i(utils_ensureBytes("pointHex",e)));return t.assertValidity(),t}static fromPrivateKey(e){return Point.BASE.multiply(normPrivateKeyToScalar(e))}_setWindowSize(e){this._WINDOW_SIZE=e,s.delete(this)}assertValidity(){if(this.is0()){if(t.allowInfinityPoint)return;throw Error("bad point: ZERO")}let{x:e,y:r}=this.toAffine();if(!a.isValid(e)||!a.isValid(r))throw Error("bad point: x or y not FE");let i=a.sqr(r),s=weierstrassEquation(e);if(!a.eql(i,s))throw Error("bad point: equation left != right");if(!this.isTorsionFree())throw Error("bad point: not in prime-order subgroup")}hasEvenY(){let{y:e}=this.toAffine();if(a.isOdd)return!a.isOdd(e);throw Error("Field doesn't support isOdd")}equals(e){assertPrjPoint(e);let{px:t,py:r,pz:i}=this,{px:s,py:n,pz:o}=e,d=a.eql(a.mul(t,o),a.mul(s,i)),p=a.eql(a.mul(r,o),a.mul(n,i));return d&&p}negate(){return new Point(this.px,a.neg(this.py),this.pz)}double(){let{a:e,b:r}=t,i=a.mul(r,an),{px:s,py:n,pz:o}=this,d=a.ZERO,p=a.ZERO,l=a.ZERO,m=a.mul(s,s),c=a.mul(n,n),u=a.mul(o,o),f=a.mul(s,n);return f=a.add(f,f),l=a.mul(s,o),l=a.add(l,l),d=a.mul(e,l),p=a.mul(i,u),p=a.add(d,p),d=a.sub(c,p),p=a.add(c,p),p=a.mul(d,p),d=a.mul(f,d),l=a.mul(i,l),u=a.mul(e,u),f=a.sub(m,u),f=a.mul(e,f),f=a.add(f,l),l=a.add(m,m),m=a.add(l,m),m=a.add(m,u),m=a.mul(m,f),p=a.add(p,m),u=a.mul(n,o),u=a.add(u,u),m=a.mul(u,f),d=a.sub(d,m),l=a.mul(u,c),l=a.add(l,l),l=a.add(l,l),new Point(d,p,l)}add(e){assertPrjPoint(e);let{px:r,py:i,pz:s}=this,{px:n,py:o,pz:d}=e,p=a.ZERO,l=a.ZERO,m=a.ZERO,c=t.a,u=a.mul(t.b,an),f=a.mul(r,n),v=a.mul(i,o),g=a.mul(s,d),y=a.add(r,i),b=a.add(n,o);y=a.mul(y,b),b=a.add(f,v),y=a.sub(y,b),b=a.add(r,s);let _=a.add(n,d);return b=a.mul(b,_),_=a.add(f,g),b=a.sub(b,_),_=a.add(i,s),p=a.add(o,d),_=a.mul(_,p),p=a.add(v,g),_=a.sub(_,p),m=a.mul(c,b),p=a.mul(u,g),m=a.add(p,m),p=a.sub(v,m),m=a.add(v,m),l=a.mul(p,m),v=a.add(f,f),v=a.add(v,f),g=a.mul(c,g),b=a.mul(u,b),v=a.add(v,g),g=a.sub(f,g),g=a.mul(c,g),b=a.add(b,g),f=a.mul(v,b),l=a.add(l,f),f=a.mul(_,b),p=a.mul(y,p),p=a.sub(p,f),f=a.mul(y,v),m=a.mul(_,m),m=a.add(m,f),new Point(p,l,m)}subtract(e){return this.add(e.negate())}is0(){return this.equals(Point.ZERO)}wNAF(e){return o.wNAFCached(this,s,e,e=>{let t=a.invertBatch(e.map(e=>e.pz));return e.map((e,a)=>e.toAffine(t[a])).map(Point.fromAffine)})}multiplyUnsafe(e){let r=Point.ZERO;if(e===ai)return r;if(assertGE(e),e===as)return this;let{endo:i}=t;if(!i)return o.unsafeLadder(this,e);let{k1neg:s,k1:n,k2neg:d,k2:p}=i.splitScalar(e),l=r,m=r,c=this;for(;n>ai||p>ai;)n&as&&(l=l.add(c)),p&as&&(m=m.add(c)),c=c.double(),n>>=as,p>>=as;return s&&(l=l.negate()),d&&(m=m.negate()),m=new Point(a.mul(m.px,i.beta),m.py,m.pz),l.add(m)}multiply(e){let r,i;assertGE(e);let{endo:s}=t;if(s){let{k1neg:t,k1:n,k2neg:d,k2:p}=s.splitScalar(e),{p:l,f:m}=this.wNAF(n),{p:c,f:u}=this.wNAF(p);l=o.constTimeNegate(t,l),c=o.constTimeNegate(d,c),c=new Point(a.mul(c.px,s.beta),c.py,c.pz),r=l.add(c),i=m.add(u)}else{let{p:t,f:a}=this.wNAF(e);r=t,i=a}return Point.normalizeZ([r,i])[0]}multiplyAndAddUnsafe(e,t,a){let r=Point.BASE,mul=(e,t)=>t!==ai&&t!==as&&e.equals(r)?e.multiply(t):e.multiplyUnsafe(t),i=mul(this,t).add(mul(e,a));return i.is0()?void 0:i}toAffine(e){let{px:t,py:r,pz:i}=this,s=this.is0();null==e&&(e=s?a.ONE:a.inv(i));let n=a.mul(t,e),o=a.mul(r,e),d=a.mul(i,e);if(s)return{x:a.ZERO,y:a.ZERO};if(!a.eql(d,a.ONE))throw Error("invZ was invalid");return{x:n,y:o}}isTorsionFree(){let{h:e,isTorsionFree:a}=t;if(e===as)return!0;if(a)return a(Point,this);throw Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){let{h:e,clearCofactor:a}=t;return e===as?this:a?a(Point,this):this.multiplyUnsafe(t.h)}toRawBytes(e=!0){return this.assertValidity(),r(Point,this,e)}toHex(e=!0){return utils_bytesToHex(this.toRawBytes(e))}};Point.BASE=new Point(t.Gx,t.Gy,a.ONE),Point.ZERO=new Point(a.ZERO,a.ONE,a.ZERO);let n=t.nBitLength,o=function(e,t){let constTimeNegate=(e,t)=>{let a=t.negate();return e?a:t},opts=e=>({windows:Math.ceil(t/e)+1,windowSize:2**(e-1)});return{constTimeNegate,unsafeLadder(t,a){let r=e.ZERO,i=t;for(;a>t5;)a&t7&&(r=r.add(i)),i=i.double(),a>>=t7;return r},precomputeWindow(e,t){let{windows:a,windowSize:r}=opts(t),i=[],s=e,n=s;for(let e=0;e<a;e++){n=s,i.push(n);for(let e=1;e<r;e++)n=n.add(s),i.push(n);s=n.double()}return i},wNAF(t,a,r){let{windows:i,windowSize:s}=opts(t),n=e.ZERO,o=e.BASE,d=BigInt(2**t-1),p=2**t,l=BigInt(t);for(let e=0;e<i;e++){let t=e*s,i=Number(r&d);r>>=l,i>s&&(i-=p,r+=t7);let m=t+Math.abs(i)-1,c=e%2!=0,u=i<0;0===i?o=o.add(constTimeNegate(c,a[t])):n=n.add(constTimeNegate(u,a[m]))}return{p:n,f:o}},wNAFCached(e,t,a,r){let i=e._WINDOW_SIZE||1,s=t.get(e);return s||(s=this.precomputeWindow(e,i),1!==i&&t.set(e,r(s))),this.wNAF(i,s,a)}}}(Point,t.endo?Math.ceil(n/2):n);return{CURVE:t,ProjectivePoint:Point,normPrivateKeyToScalar,weierstrassEquation,isWithinCurveOrder}}({...t,toBytes(e,t,r){let i=t.toAffine(),s=a.toBytes(i.x),n=abstract_utils_concatBytes;return r?n(Uint8Array.from([t.hasEvenY()?2:3]),s):n(Uint8Array.from([4]),s,a.toBytes(i.y))},fromBytes(e){let t=e.length,r=e[0],n=e.subarray(1);if(t===i&&(2===r||3===r)){let e=utils_bytesToNumberBE(n);if(!(ai<e&&e<a.ORDER))throw Error("Point is not on curve");let t=d(e),i=a.sqrt(t),s=(i&as)===as;return(1&r)==1!==s&&(i=a.neg(i)),{x:e,y:i}}if(t===s&&4===r){let e=a.fromBytes(n.subarray(0,a.BYTES)),t=a.fromBytes(n.subarray(a.BYTES,2*a.BYTES));return{x:e,y:t}}throw Error(`Point of length ${t} was invalid. Expected ${i} compressed bytes or ${s} uncompressed bytes`)}}),numToNByteStr=e=>utils_bytesToHex(utils_numberToBytesBE(e,t.nByteLength));function isBiggerThanHalfOrder(e){let t=r>>as;return e>t}let slcNum=(e,t,a)=>utils_bytesToNumberBE(e.slice(t,a));let Signature=class Signature{constructor(e,t,a){this.r=e,this.s=t,this.recovery=a,this.assertValidity()}static fromCompact(e){let a=t.nByteLength;return e=utils_ensureBytes("compactSignature",e,2*a),new Signature(slcNum(e,0,a),slcNum(e,a,2*a))}static fromDER(e){let{r:t,s:a}=ar.toSig(utils_ensureBytes("DER",e));return new Signature(t,a)}assertValidity(){if(!p(this.r))throw Error("r must be 0 < r < CURVE.n");if(!p(this.s))throw Error("s must be 0 < s < CURVE.n")}addRecoveryBit(e){return new Signature(this.r,this.s,e)}recoverPublicKey(e){let{r:i,s,recovery:o}=this,d=m(utils_ensureBytes("msgHash",e));if(null==o||![0,1,2,3].includes(o))throw Error("recovery id invalid");let p=2===o||3===o?i+t.n:i;if(p>=a.ORDER)throw Error("recovery id 2 or 3 invalid");let l=(1&o)==0?"02":"03",c=n.fromHex(l+numToNByteStr(p)),u=invert(p,r),f=modN(-d*u),v=modN(s*u),g=n.BASE.multiplyAndAddUnsafe(c,f,v);if(!g)throw Error("point at infinify");return g.assertValidity(),g}hasHighS(){return isBiggerThanHalfOrder(this.s)}normalizeS(){return this.hasHighS()?new Signature(this.r,modN(-this.s),this.recovery):this}toDERRawBytes(){return abstract_utils_hexToBytes(this.toDERHex())}toDERHex(){return ar.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return abstract_utils_hexToBytes(this.toCompactHex())}toCompactHex(){return numToNByteStr(this.r)+numToNByteStr(this.s)}};function isProbPub(e){let t=e instanceof Uint8Array,a="string"==typeof e,r=(t||a)&&e.length;return t?r===i||r===s:a?r===2*i||r===2*s:e instanceof n}let l=t.bits2int||function(e){let a=utils_bytesToNumberBE(e),r=8*e.length-t.nBitLength;return r>0?a>>BigInt(r):a},m=t.bits2int_modN||function(e){return modN(l(e))},c=bitMask(t.nBitLength);function int2octets(e){if("bigint"!=typeof e)throw Error("bigint expected");if(!(ai<=e&&e<c))throw Error(`bigint expected < 2^${t.nBitLength}`);return utils_numberToBytesBE(e,t.nByteLength)}let u={lowS:t.lowS,prehash:!1},f={lowS:t.lowS,prehash:!1};return n.BASE._setWindowSize(8),{CURVE:t,getPublicKey:function(e,t=!0){return n.fromPrivateKey(e).toRawBytes(t)},getSharedSecret:function(e,t,a=!0){if(isProbPub(e))throw Error("first arg must be private key");if(!isProbPub(t))throw Error("second arg must be public key");let r=n.fromHex(t);return r.multiply(o(e)).toRawBytes(a)},sign:function(e,i,s=u){let{seed:d,k2sig:c}=function(e,i,s=u){if(["recovered","canonical"].some(e=>e in s))throw Error("sign() legacy options not supported");let{hash:d,randomBytes:c}=t,{lowS:f,prehash:v,extraEntropy:g}=s;null==f&&(f=!0),e=utils_ensureBytes("msgHash",e),v&&(e=utils_ensureBytes("prehashed msgHash",d(e)));let y=m(e),b=o(i),_=[int2octets(b),int2octets(y)];if(null!=g){let e=!0===g?c(a.BYTES):g;_.push(utils_ensureBytes("extraEntropy",e,a.BYTES))}let w=abstract_utils_concatBytes(..._);return{seed:w,k2sig:function(e){let t=l(e);if(!p(t))return;let a=invert(t,r),i=n.BASE.multiply(t).toAffine(),s=modN(i.x);if(s===ai)return;let o=modN(a*modN(y+s*b));if(o===ai)return;let d=(i.x===s?0:2)|Number(i.y&as),m=o;return f&&isBiggerThanHalfOrder(o)&&(m=isBiggerThanHalfOrder(o)?modN(-o):o,d^=1),new Signature(s,m,d)}}}(e,i,s),f=createHmacDrbg(t.hash.outputLen,t.nByteLength,t.hmac);return f(d,c)},verify:function(e,a,i,s=f){let o,d;if(a=utils_ensureBytes("msgHash",a),i=utils_ensureBytes("publicKey",i),"strict"in s)throw Error("options.strict was renamed to lowS");let{lowS:p,prehash:l}=s;try{if("string"==typeof e||e instanceof Uint8Array)try{d=Signature.fromDER(e)}catch(t){if(!(t instanceof ar.Err))throw t;d=Signature.fromCompact(e)}else if("object"==typeof e&&"bigint"==typeof e.r&&"bigint"==typeof e.s){let{r:t,s:a}=e;d=new Signature(t,a)}else throw Error("PARSE");o=n.fromHex(i)}catch(e){if("PARSE"===e.message)throw Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(p&&d.hasHighS())return!1;l&&(a=t.hash(a));let{r:c,s:u}=d,v=m(a),g=invert(u,r),y=modN(v*g),b=modN(c*g),_=n.BASE.multiplyAndAddUnsafe(o,y,b)?.toAffine();if(!_)return!1;let w=modN(_.x);return w===c},ProjectivePoint:n,Signature,utils:{isValidPrivateKey(e){try{return o(e),!0}catch(e){return!1}},normPrivateKeyToScalar:o,randomPrivateKey:()=>{let e=t.randomBytes(a.BYTES+8),i=function(e,t,a=!1){e=utils_ensureBytes("privateHash",e);let r=e.length,i=nLength(t).nByteLength+8;if(i<24||r<i||r>1024)throw Error(`hashToPrivateScalar: expected ${i}-1024 bytes of input, got ${r}`);let s=a?bytesToNumberLE(e):utils_bytesToNumberBE(e);return modular_mod(s,t-t0)+t0}(e,r);return utils_numberToBytesBE(i,t.nByteLength)},precompute:(e=8,t=n.BASE)=>(t._setWindowSize(e),t.multiply(BigInt(3)),t)}}})({...e,hash:t,hmac:(e,...a)=>hmac(t,e,utils_concatBytes(...a)),randomBytes:utils_randomBytes});return Object.freeze({...create(t),create})}({a:BigInt(0),b:BigInt(7),Fp:am,n:ad,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:e=>{let t=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),a=-ap*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),r=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),i=BigInt("0x100000000000000000000000000000000"),s=divNearest(t*e,ad),n=divNearest(-a*e,ad),o=modular_mod(e-s*t-n*r,ad),d=modular_mod(-s*a-n*t,ad),p=o>i,l=d>i;if(p&&(o=ad-o),l&&(d=ad-d),o>i||d>i)throw Error("splitScalar: Endomorphism failed, k="+e);return{k1neg:p,k1:o,k2neg:l,k2:d}}}},tG),au=(BigInt(0),ac.ProjectivePoint,null!=ac?ac:q),ah=BigInt("0xffffffffffffffff"),af=BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),av=au.CURVE.n,ag=av/BigInt(2),ay={type:"object",required:["crypto","id","version","address"],properties:{crypto:{type:"object",required:["cipher","ciphertext","cipherparams","kdf","kdfparams","mac"],properties:{cipher:{type:"string"},ciphertext:{type:"string"},cipherparams:{type:"object"},kdf:{type:"string"},kdfparams:{type:"object"},salt:{type:"string"},mac:{type:"string"}}},id:{type:"string"},version:{type:"number"},address:{type:"string"}}};(function(e){e[e.Mainnet=1]="Mainnet",e[e.Goerli=5]="Goerli",e[e.Sepolia=11155111]="Sepolia"})(O||(O={})),function(e){e.Chainstart="chainstart",e.Homestead="homestead",e.Dao="dao",e.TangerineWhistle="tangerineWhistle",e.SpuriousDragon="spuriousDragon",e.Byzantium="byzantium",e.Constantinople="constantinople",e.Petersburg="petersburg",e.Istanbul="istanbul",e.MuirGlacier="muirGlacier",e.Berlin="berlin",e.London="london",e.ArrowGlacier="arrowGlacier",e.GrayGlacier="grayGlacier",e.MergeForkIdTransition="mergeForkIdTransition",e.Merge="merge",e.Shanghai="shanghai",e.ShardingForkDev="shardingFork"}(R||(R={})),function(e){e.ProofOfStake="pos",e.ProofOfWork="pow",e.ProofOfAuthority="poa"}(M||(M={})),function(e){e.Ethash="ethash",e.Clique="clique",e.Casper="casper"}(L||(L={})),function(e){e.PolygonMainnet="polygon-mainnet",e.PolygonMumbai="polygon-mumbai",e.ArbitrumRinkebyTestnet="arbitrum-rinkeby-testnet",e.ArbitrumOne="arbitrum-one",e.xDaiChain="x-dai-chain",e.OptimisticKovan="optimistic-kovan",e.OptimisticEthereum="optimistic-ethereum"}(j||(j={})),function(e){e[e.Number=0]="Number",e[e.BigInt=1]="BigInt",e[e.Uint8Array=2]="Uint8Array",e[e.PrefixedHexString=3]="PrefixedHexString"}(H||(H={}));let stripHexPrefix=e=>{if("string"!=typeof e)throw Error(`[stripHexPrefix] input must be type 'string', received ${typeof e}`);return isHexPrefixed(e)?e.slice(2):e},intToHex=function(e){if(!Number.isSafeInteger(e)||e<0)throw Error(`Received an invalid integer type: ${e}`);return`0x${e.toString(16)}`};function padToEven(e){let t=e;if("string"!=typeof t)throw Error(`[padToEven] value must be type 'string', received ${typeof t}`);return t.length%2&&(t=`0${t}`),t}let intToUint8Array=function(e){let t=intToHex(e);return converters_hexToBytes(`0x${padToEven(t.slice(2))}`)},toUint8Array=function(e){if(null==e)return new Uint8Array;if(e instanceof Uint8Array)return e;if(Array.isArray(e))return Uint8Array.from(e);if("string"==typeof e){if(!isHexString(e))throw Error(`Cannot convert string to Uint8Array. only supports 0x-prefixed hex strings and this string was given: ${e}`);return converters_hexToBytes(padToEven(stripHexPrefix(e)))}if("number"==typeof e)return toUint8Array(converters_numberToHex(e));if("bigint"==typeof e){if(e<BigInt(0))throw Error(`Cannot convert negative bigint to Uint8Array. Given: ${e}`);let t=e.toString(16);return t.length%2&&(t=`0${t}`),toUint8Array(`0x${t}`)}if(e.toArray)return Uint8Array.from(e.toArray());throw Error("invalid type")};function uint8ArrayToBigInt(e){let t=converters_bytesToHex(e);return"0x"===t?BigInt(0):BigInt(t)}let zeros=function(e){return new Uint8Array(e).fill(0)},setLength=function(e,t,a){let r=zeros(t);return a?e.length<t?(r.set(e),r):e.subarray(0,t):e.length<t?(r.set(e,t-e.length),r):e.subarray(-t)};function assertIsUint8Array(e){if(!(e instanceof Uint8Array)){let t=`This method only supports Uint8Array but input was: ${e}`;throw Error(t)}}let setLengthLeft=function(e,t){return assertIsUint8Array(e),setLength(e,t,!1)},unpadUint8Array=function(e){return assertIsUint8Array(e),function(e){let t=e[0];for(;e.length>0&&"0"===t.toString();)t=(e=e.slice(1))[0];return e}(e)},bigIntToHex=e=>`0x${e.toString(16)}`;function bigIntToUnpaddedUint8Array(e){return unpadUint8Array(toUint8Array(`0x${e.toString(16)}`))}let ecrecover=function(e,t,a,r,i){let s=t===BigInt(0)||t===BigInt(1)?t:void 0===i?t-BigInt(27):t-(i*BigInt(2)+BigInt(35));if(!(s===BigInt(0)||s===BigInt(1)))throw Error("Invalid signature v value");let n=new au.Signature(uint8ArrayToBigInt(a),uint8ArrayToBigInt(r)).addRecoveryBit(Number(s)).recoverPublicKey(e).toRawBytes(!1);return n.slice(1)};function toType(e,t){if(null===e)return null;if(void 0===e)return;if("string"!=typeof e||isHexString(e)){if("number"==typeof e&&!Number.isSafeInteger(e))throw Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)")}else throw Error(`A string must be provided with a 0x-prefix, given: ${e}`);let a=toUint8Array(e);switch(t){case H.Uint8Array:return a;case H.BigInt:return uint8ArrayToBigInt(a);case H.Number:{let e=uint8ArrayToBigInt(a);if(e>BigInt(Number.MAX_SAFE_INTEGER))throw Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)");return Number(e)}case H.PrefixedHexString:return converters_bytesToHex(a);default:throw Error("unknown outputType")}}var ab=a(95974),a_=a(96568);let aw={name:"goerli",chainId:5,networkId:5,defaultHardfork:"merge",consensus:{type:"poa",algorithm:"clique",clique:{period:15,epoch:3e4}},comment:"Cross-client PoA test network",url:"https://github.com/goerli/testnet",genesis:{timestamp:"0x5c51a607",gasLimit:10485760,difficulty:1,nonce:"0x0000000000000000",extraData:"0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"},hardforks:[{name:"chainstart",block:0,forkHash:"0xa3f5ab08"},{name:"homestead",block:0,forkHash:"0xa3f5ab08"},{name:"tangerineWhistle",block:0,forkHash:"0xa3f5ab08"},{name:"spuriousDragon",block:0,forkHash:"0xa3f5ab08"},{name:"byzantium",block:0,forkHash:"0xa3f5ab08"},{name:"constantinople",block:0,forkHash:"0xa3f5ab08"},{name:"petersburg",block:0,forkHash:"0xa3f5ab08"},{name:"istanbul",block:1561651,forkHash:"0xc25efa5c"},{name:"berlin",block:4460644,forkHash:"0x757a1c47"},{name:"london",block:5062605,forkHash:"0xb8c6299d"},{"//_comment":"The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://goerli.etherscan.io/block/7382818",name:"merge",ttd:"10790000",block:7382819,forkHash:"0xb8c6299d"},{name:"mergeForkIdTransition",block:null,forkHash:null},{name:"shanghai",block:null,forkHash:null}],bootstrapNodes:[],dnsNetworks:["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net"]},aA={name:"mainnet",chainId:1,networkId:1,defaultHardfork:"merge",consensus:{type:"pow",algorithm:"ethash",ethash:{}},comment:"The Ethereum main chain",url:"https://ethstats.net/",genesis:{gasLimit:5e3,difficulty:17179869184,nonce:"0x0000000000000042",extraData:"0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa"},hardforks:[{name:"chainstart",block:0,forkHash:"0xfc64ec04"},{name:"homestead",block:115e4,forkHash:"0x97c2c34c"},{name:"dao",block:192e4,forkHash:"0x91d1f948"},{name:"tangerineWhistle",block:2463e3,forkHash:"0x7a64da13"},{name:"spuriousDragon",block:2675e3,forkHash:"0x3edd5b10"},{name:"byzantium",block:437e4,forkHash:"0xa00bc324"},{name:"constantinople",block:728e4,forkHash:"0x668db0af"},{name:"petersburg",block:728e4,forkHash:"0x668db0af"},{name:"istanbul",block:9069e3,forkHash:"0x879d6e30"},{name:"muirGlacier",block:92e5,forkHash:"0xe029e991"},{name:"berlin",block:12244e3,forkHash:"0x0eb440f6"},{name:"london",block:12965e3,forkHash:"0xb715077d"},{name:"arrowGlacier",block:13773e3,forkHash:"0x20c327fc"},{name:"grayGlacier",block:1505e4,forkHash:"0xf0afd0e3"},{"//_comment":"The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://etherscan.io/block/15537393",name:"merge",ttd:"58750000000000000000000",block:15537394,forkHash:"0xf0afd0e3"},{name:"mergeForkIdTransition",block:null,forkHash:null},{name:"shanghai",block:null,forkHash:null}],bootstrapNodes:[],dnsNetworks:["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net"]},aE={name:"sepolia",chainId:11155111,networkId:11155111,defaultHardfork:"merge",consensus:{type:"pow",algorithm:"ethash",ethash:{}},comment:"PoW test network to replace Ropsten",url:"https://github.com/ethereum/go-ethereum/pull/23730",genesis:{timestamp:"0x6159af19",gasLimit:3e7,difficulty:131072,nonce:"0x0000000000000000",extraData:"0x5365706f6c69612c20417468656e732c204174746963612c2047726565636521"},hardforks:[{name:"chainstart",block:0,forkHash:"0xfe3366e7"},{name:"homestead",block:0,forkHash:"0xfe3366e7"},{name:"tangerineWhistle",block:0,forkHash:"0xfe3366e7"},{name:"spuriousDragon",block:0,forkHash:"0xfe3366e7"},{name:"byzantium",block:0,forkHash:"0xfe3366e7"},{name:"constantinople",block:0,forkHash:"0xfe3366e7"},{name:"petersburg",block:0,forkHash:"0xfe3366e7"},{name:"istanbul",block:0,forkHash:"0xfe3366e7"},{name:"muirGlacier",block:0,forkHash:"0xfe3366e7"},{name:"berlin",block:0,forkHash:"0xfe3366e7"},{name:"london",block:0,forkHash:"0xfe3366e7"},{"//_comment":"The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://sepolia.etherscan.io/block/1450408",name:"merge",ttd:"17000000000000000",block:1450409,forkHash:"0xfe3366e7"},{name:"mergeForkIdTransition",block:1735371,forkHash:"0xb96cbd13"},{name:"shanghai",block:null,timestamp:"1677557088",forkHash:"0xf7f9bc08"}],bootstrapNodes:[],dnsNetworks:["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.sepolia.ethdisco.net"]},ax={1153:{name:"EIP-1153",number:1153,comment:"Transient Storage",url:"https://eips.ethereum.org/EIPS/eip-1153",status:"Review",minimumHardfork:"chainstart",requiredEIPs:[],gasConfig:{},gasPrices:{tstore:{v:100,d:"Base fee of the TSTORE opcode"},tload:{v:100,d:"Base fee of the TLOAD opcode"}},vm:{},pow:{}},1559:{name:"EIP-1559",number:1559,comment:"Fee market change for ETH 1.0 chain",url:"https://eips.ethereum.org/EIPS/eip-1559",status:"Final",minimumHardfork:"berlin",requiredEIPs:[2930],gasConfig:{baseFeeMaxChangeDenominator:{v:8,d:"Maximum base fee change denominator"},elasticityMultiplier:{v:2,d:"Maximum block gas target elasticity"},initialBaseFee:{v:1e9,d:"Initial base fee on first EIP1559 block"}},gasPrices:{},vm:{},pow:{}},2315:{name:"EIP-2315",number:2315,comment:"Simple subroutines for the EVM",url:"https://eips.ethereum.org/EIPS/eip-2315",status:"Draft",minimumHardfork:"istanbul",gasConfig:{},gasPrices:{beginsub:{v:2,d:"Base fee of the BEGINSUB opcode"},returnsub:{v:5,d:"Base fee of the RETURNSUB opcode"},jumpsub:{v:10,d:"Base fee of the JUMPSUB opcode"}},vm:{},pow:{}},2537:{name:"EIP-2537",number:2537,comment:"BLS12-381 precompiles",url:"https://eips.ethereum.org/EIPS/eip-2537",status:"Draft",minimumHardfork:"chainstart",gasConfig:{},gasPrices:{Bls12381G1AddGas:{v:600,d:"Gas cost of a single BLS12-381 G1 addition precompile-call"},Bls12381G1MulGas:{v:12e3,d:"Gas cost of a single BLS12-381 G1 multiplication precompile-call"},Bls12381G2AddGas:{v:4500,d:"Gas cost of a single BLS12-381 G2 addition precompile-call"},Bls12381G2MulGas:{v:55e3,d:"Gas cost of a single BLS12-381 G2 multiplication precompile-call"},Bls12381PairingBaseGas:{v:115e3,d:"Base gas cost of BLS12-381 pairing check"},Bls12381PairingPerPairGas:{v:23e3,d:"Per-pair gas cost of BLS12-381 pairing check"},Bls12381MapG1Gas:{v:5500,d:"Gas cost of BLS12-381 map field element to G1"},Bls12381MapG2Gas:{v:11e4,d:"Gas cost of BLS12-381 map field element to G2"},Bls12381MultiExpGasDiscount:{v:[[1,1200],[2,888],[3,764],[4,641],[5,594],[6,547],[7,500],[8,453],[9,438],[10,423],[11,408],[12,394],[13,379],[14,364],[15,349],[16,334],[17,330],[18,326],[19,322],[20,318],[21,314],[22,310],[23,306],[24,302],[25,298],[26,294],[27,289],[28,285],[29,281],[30,277],[31,273],[32,269],[33,268],[34,266],[35,265],[36,263],[37,262],[38,260],[39,259],[40,257],[41,256],[42,254],[43,253],[44,251],[45,250],[46,248],[47,247],[48,245],[49,244],[50,242],[51,241],[52,239],[53,238],[54,236],[55,235],[56,233],[57,232],[58,231],[59,229],[60,228],[61,226],[62,225],[63,223],[64,222],[65,221],[66,220],[67,219],[68,219],[69,218],[70,217],[71,216],[72,216],[73,215],[74,214],[75,213],[76,213],[77,212],[78,211],[79,211],[80,210],[81,209],[82,208],[83,208],[84,207],[85,206],[86,205],[87,205],[88,204],[89,203],[90,202],[91,202],[92,201],[93,200],[94,199],[95,199],[96,198],[97,197],[98,196],[99,196],[100,195],[101,194],[102,193],[103,193],[104,192],[105,191],[106,191],[107,190],[108,189],[109,188],[110,188],[111,187],[112,186],[113,185],[114,185],[115,184],[116,183],[117,182],[118,182],[119,181],[120,180],[121,179],[122,179],[123,178],[124,177],[125,176],[126,176],[127,175],[128,174]],d:"Discount gas costs of calls to the MultiExp precompiles with `k` (point, scalar) pair"}},vm:{},pow:{}},2565:{name:"EIP-2565",number:2565,comment:"ModExp gas cost",url:"https://eips.ethereum.org/EIPS/eip-2565",status:"Final",minimumHardfork:"byzantium",gasConfig:{},gasPrices:{modexpGquaddivisor:{v:3,d:"Gquaddivisor from modexp precompile for gas calculation"}},vm:{},pow:{}},2718:{name:"EIP-2718",comment:"Typed Transaction Envelope",url:"https://eips.ethereum.org/EIPS/eip-2718",status:"Final",minimumHardfork:"chainstart",gasConfig:{},gasPrices:{},vm:{},pow:{}},2929:{name:"EIP-2929",comment:"Gas cost increases for state access opcodes",url:"https://eips.ethereum.org/EIPS/eip-2929",status:"Final",minimumHardfork:"chainstart",gasConfig:{},gasPrices:{coldsload:{v:2100,d:"Gas cost of the first read of storage from a given location (per transaction)"},coldaccountaccess:{v:2600,d:"Gas cost of the first read of a given address (per transaction)"},warmstorageread:{v:100,d:"Gas cost of reading storage locations which have already loaded 'cold'"},sstoreCleanGasEIP2200:{v:2900,d:"Once per SSTORE operation from clean non-zero to something else"},sstoreNoopGasEIP2200:{v:100,d:"Once per SSTORE operation if the value doesn't change"},sstoreDirtyGasEIP2200:{v:100,d:"Once per SSTORE operation if a dirty value is changed"},sstoreInitRefundEIP2200:{v:19900,d:"Once per SSTORE operation for resetting to the original zero value"},sstoreCleanRefundEIP2200:{v:4900,d:"Once per SSTORE operation for resetting to the original non-zero value"},call:{v:0,d:"Base fee of the CALL opcode"},callcode:{v:0,d:"Base fee of the CALLCODE opcode"},delegatecall:{v:0,d:"Base fee of the DELEGATECALL opcode"},staticcall:{v:0,d:"Base fee of the STATICCALL opcode"},balance:{v:0,d:"Base fee of the BALANCE opcode"},extcodesize:{v:0,d:"Base fee of the EXTCODESIZE opcode"},extcodecopy:{v:0,d:"Base fee of the EXTCODECOPY opcode"},extcodehash:{v:0,d:"Base fee of the EXTCODEHASH opcode"},sload:{v:0,d:"Base fee of the SLOAD opcode"},sstore:{v:0,d:"Base fee of the SSTORE opcode"}},vm:{},pow:{}},2930:{name:"EIP-2930",comment:"Optional access lists",url:"https://eips.ethereum.org/EIPS/eip-2930",status:"Final",minimumHardfork:"istanbul",requiredEIPs:[2718,2929],gasConfig:{},gasPrices:{accessListStorageKeyCost:{v:1900,d:"Gas cost per storage key in an Access List transaction"},accessListAddressCost:{v:2400,d:"Gas cost per storage key in an Access List transaction"}},vm:{},pow:{}},3198:{name:"EIP-3198",number:3198,comment:"BASEFEE opcode",url:"https://eips.ethereum.org/EIPS/eip-3198",status:"Final",minimumHardfork:"london",gasConfig:{},gasPrices:{basefee:{v:2,d:"Gas cost of the BASEFEE opcode"}},vm:{},pow:{}},3529:{name:"EIP-3529",comment:"Reduction in refunds",url:"https://eips.ethereum.org/EIPS/eip-3529",status:"Final",minimumHardfork:"berlin",requiredEIPs:[2929],gasConfig:{maxRefundQuotient:{v:5,d:"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)"}},gasPrices:{selfdestructRefund:{v:0,d:"Refunded following a selfdestruct operation"},sstoreClearRefundEIP2200:{v:4800,d:"Once per SSTORE operation for clearing an originally existing storage slot"}},vm:{},pow:{}},3540:{name:"EIP-3540",number:3540,comment:"EVM Object Format (EOF) v1",url:"https://eips.ethereum.org/EIPS/eip-3540",status:"Review",minimumHardfork:"london",requiredEIPs:[3541],gasConfig:{},gasPrices:{},vm:{},pow:{}},3541:{name:"EIP-3541",comment:"Reject new contracts starting with the 0xEF byte",url:"https://eips.ethereum.org/EIPS/eip-3541",status:"Final",minimumHardfork:"berlin",requiredEIPs:[],gasConfig:{},gasPrices:{},vm:{},pow:{}},3554:{name:"EIP-3554",comment:"Reduction in refunds",url:"Difficulty Bomb Delay to December 1st 2021",status:"Final",minimumHardfork:"muirGlacier",requiredEIPs:[],gasConfig:{},gasPrices:{},vm:{},pow:{difficultyBombDelay:{v:95e5,d:"the amount of blocks to delay the difficulty bomb with"}}},3607:{name:"EIP-3607",number:3607,comment:"Reject transactions from senders with deployed code",url:"https://eips.ethereum.org/EIPS/eip-3607",status:"Final",minimumHardfork:"chainstart",requiredEIPs:[],gasConfig:{},gasPrices:{},vm:{},pow:{}},3651:{name:"EIP-3651",number:3198,comment:"Warm COINBASE",url:"https://eips.ethereum.org/EIPS/eip-3651",status:"Review",minimumHardfork:"london",requiredEIPs:[2929],gasConfig:{},gasPrices:{},vm:{},pow:{}},3670:{name:"EIP-3670",number:3670,comment:"EOF - Code Validation",url:"https://eips.ethereum.org/EIPS/eip-3670",status:"Review",minimumHardfork:"london",requiredEIPs:[3540],gasConfig:{},gasPrices:{},vm:{},pow:{}},3675:{name:"EIP-3675",number:3675,comment:"Upgrade consensus to Proof-of-Stake",url:"https://eips.ethereum.org/EIPS/eip-3675",status:"Final",minimumHardfork:"london",requiredEIPs:[],gasConfig:{},gasPrices:{},vm:{},pow:{}},3855:{name:"EIP-3855",number:3855,comment:"PUSH0 instruction",url:"https://eips.ethereum.org/EIPS/eip-3855",status:"Review",minimumHardfork:"chainstart",requiredEIPs:[],gasConfig:{},gasPrices:{push0:{v:2,d:"Base fee of the PUSH0 opcode"}},vm:{},pow:{}},3860:{name:"EIP-3860",number:3860,comment:"Limit and meter initcode",url:"https://eips.ethereum.org/EIPS/eip-3860",status:"Review",minimumHardfork:"spuriousDragon",requiredEIPs:[],gasConfig:{},gasPrices:{initCodeWordCost:{v:2,d:"Gas to pay for each word (32 bytes) of initcode when creating a contract"}},vm:{maxInitCodeSize:{v:49152,d:"Maximum length of initialization code when creating a contract"}},pow:{}},4345:{name:"EIP-4345",number:4345,comment:"Difficulty Bomb Delay to June 2022",url:"https://eips.ethereum.org/EIPS/eip-4345",status:"Final",minimumHardfork:"london",gasConfig:{},gasPrices:{},vm:{},pow:{difficultyBombDelay:{v:107e5,d:"the amount of blocks to delay the difficulty bomb with"}}},4399:{name:"EIP-4399",number:4399,comment:"Supplant DIFFICULTY opcode with PREVRANDAO",url:"https://eips.ethereum.org/EIPS/eip-4399",status:"Review",minimumHardfork:"london",requiredEIPs:[],gasConfig:{},gasPrices:{},vm:{},pow:{}},5133:{name:"EIP-5133",number:5133,comment:"Delaying Difficulty Bomb to mid-September 2022",url:"https://eips.ethereum.org/EIPS/eip-5133",status:"Draft",minimumHardfork:"grayGlacier",gasConfig:{},gasPrices:{},vm:{},pow:{difficultyBombDelay:{v:114e5,d:"the amount of blocks to delay the difficulty bomb with"}}}},aS={chainstart:{name:"chainstart",comment:"Start of the Ethereum main chain",url:"",status:"",gasConfig:{minGasLimit:{v:5e3,d:"Minimum the gas limit may ever be"},gasLimitBoundDivisor:{v:1024,d:"The bound divisor of the gas limit, used in update calculations"},maxRefundQuotient:{v:2,d:"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)"}},gasPrices:{base:{v:2,d:"Gas base cost, used e.g. for ChainID opcode (Istanbul)"},tierStep:{v:[0,2,3,5,8,10,20],d:"Once per operation, for a selection of them"},exp:{v:10,d:"Base fee of the EXP opcode"},expByte:{v:10,d:"Times ceil(log256(exponent)) for the EXP instruction"},sha3:{v:30,d:"Base fee of the SHA3 opcode"},sha3Word:{v:6,d:"Once per word of the SHA3 operation's data"},sload:{v:50,d:"Base fee of the SLOAD opcode"},sstoreSet:{v:2e4,d:"Once per SSTORE operation if the zeroness changes from zero"},sstoreReset:{v:5e3,d:"Once per SSTORE operation if the zeroness does not change from zero"},sstoreRefund:{v:15e3,d:"Once per SSTORE operation if the zeroness changes to zero"},jumpdest:{v:1,d:"Base fee of the JUMPDEST opcode"},log:{v:375,d:"Base fee of the LOG opcode"},logData:{v:8,d:"Per byte in a LOG* operation's data"},logTopic:{v:375,d:"Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas"},create:{v:32e3,d:"Base fee of the CREATE opcode"},call:{v:40,d:"Base fee of the CALL opcode"},callStipend:{v:2300,d:"Free gas given at beginning of call"},callValueTransfer:{v:9e3,d:"Paid for CALL when the value transfor is non-zero"},callNewAccount:{v:25e3,d:"Paid for CALL when the destination address didn't exist prior"},selfdestructRefund:{v:24e3,d:"Refunded following a selfdestruct operation"},memory:{v:3,d:"Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL"},quadCoeffDiv:{v:512,d:"Divisor for the quadratic particle of the memory cost equation"},createData:{v:200,d:""},tx:{v:21e3,d:"Per transaction. NOTE: Not payable on data of calls between transactions"},txCreation:{v:32e3,d:"The cost of creating a contract via tx"},txDataZero:{v:4,d:"Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions"},txDataNonZero:{v:68,d:"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"},copy:{v:3,d:"Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added"},ecRecover:{v:3e3,d:""},sha256:{v:60,d:""},sha256Word:{v:12,d:""},ripemd160:{v:600,d:""},ripemd160Word:{v:120,d:""},identity:{v:15,d:""},identityWord:{v:3,d:""},stop:{v:0,d:"Base fee of the STOP opcode"},add:{v:3,d:"Base fee of the ADD opcode"},mul:{v:5,d:"Base fee of the MUL opcode"},sub:{v:3,d:"Base fee of the SUB opcode"},div:{v:5,d:"Base fee of the DIV opcode"},sdiv:{v:5,d:"Base fee of the SDIV opcode"},mod:{v:5,d:"Base fee of the MOD opcode"},smod:{v:5,d:"Base fee of the SMOD opcode"},addmod:{v:8,d:"Base fee of the ADDMOD opcode"},mulmod:{v:8,d:"Base fee of the MULMOD opcode"},signextend:{v:5,d:"Base fee of the SIGNEXTEND opcode"},lt:{v:3,d:"Base fee of the LT opcode"},gt:{v:3,d:"Base fee of the GT opcode"},slt:{v:3,d:"Base fee of the SLT opcode"},sgt:{v:3,d:"Base fee of the SGT opcode"},eq:{v:3,d:"Base fee of the EQ opcode"},iszero:{v:3,d:"Base fee of the ISZERO opcode"},and:{v:3,d:"Base fee of the AND opcode"},or:{v:3,d:"Base fee of the OR opcode"},xor:{v:3,d:"Base fee of the XOR opcode"},not:{v:3,d:"Base fee of the NOT opcode"},byte:{v:3,d:"Base fee of the BYTE opcode"},address:{v:2,d:"Base fee of the ADDRESS opcode"},balance:{v:20,d:"Base fee of the BALANCE opcode"},origin:{v:2,d:"Base fee of the ORIGIN opcode"},caller:{v:2,d:"Base fee of the CALLER opcode"},callvalue:{v:2,d:"Base fee of the CALLVALUE opcode"},calldataload:{v:3,d:"Base fee of the CALLDATALOAD opcode"},calldatasize:{v:2,d:"Base fee of the CALLDATASIZE opcode"},calldatacopy:{v:3,d:"Base fee of the CALLDATACOPY opcode"},codesize:{v:2,d:"Base fee of the CODESIZE opcode"},codecopy:{v:3,d:"Base fee of the CODECOPY opcode"},gasprice:{v:2,d:"Base fee of the GASPRICE opcode"},extcodesize:{v:20,d:"Base fee of the EXTCODESIZE opcode"},extcodecopy:{v:20,d:"Base fee of the EXTCODECOPY opcode"},blockhash:{v:20,d:"Base fee of the BLOCKHASH opcode"},coinbase:{v:2,d:"Base fee of the COINBASE opcode"},timestamp:{v:2,d:"Base fee of the TIMESTAMP opcode"},number:{v:2,d:"Base fee of the NUMBER opcode"},difficulty:{v:2,d:"Base fee of the DIFFICULTY opcode"},gaslimit:{v:2,d:"Base fee of the GASLIMIT opcode"},pop:{v:2,d:"Base fee of the POP opcode"},mload:{v:3,d:"Base fee of the MLOAD opcode"},mstore:{v:3,d:"Base fee of the MSTORE opcode"},mstore8:{v:3,d:"Base fee of the MSTORE8 opcode"},sstore:{v:0,d:"Base fee of the SSTORE opcode"},jump:{v:8,d:"Base fee of the JUMP opcode"},jumpi:{v:10,d:"Base fee of the JUMPI opcode"},pc:{v:2,d:"Base fee of the PC opcode"},msize:{v:2,d:"Base fee of the MSIZE opcode"},gas:{v:2,d:"Base fee of the GAS opcode"},push:{v:3,d:"Base fee of the PUSH opcode"},dup:{v:3,d:"Base fee of the DUP opcode"},swap:{v:3,d:"Base fee of the SWAP opcode"},callcode:{v:40,d:"Base fee of the CALLCODE opcode"},return:{v:0,d:"Base fee of the RETURN opcode"},invalid:{v:0,d:"Base fee of the INVALID opcode"},selfdestruct:{v:0,d:"Base fee of the SELFDESTRUCT opcode"}},vm:{stackLimit:{v:1024,d:"Maximum size of VM stack allowed"},callCreateDepth:{v:1024,d:"Maximum depth of call/create stack"},maxExtraDataSize:{v:32,d:"Maximum size extra data may be after Genesis"}},pow:{minimumDifficulty:{v:131072,d:"The minimum that the difficulty may ever be"},difficultyBoundDivisor:{v:2048,d:"The bound divisor of the difficulty, used in the update calculations"},durationLimit:{v:13,d:"The decision boundary on the blocktime duration used to determine whether difficulty should go up or not"},epochDuration:{v:3e4,d:"Duration between proof-of-work epochs"},timebombPeriod:{v:1e5,d:"Exponential difficulty timebomb period"},minerReward:{v:"5000000000000000000",d:"the amount a miner get rewarded for mining a block"},difficultyBombDelay:{v:0,d:"the amount of blocks to delay the difficulty bomb with"}}},homestead:{name:"homestead",comment:"Homestead hardfork with protocol and network changes",url:"https://eips.ethereum.org/EIPS/eip-606",status:"Final",gasConfig:{},gasPrices:{delegatecall:{v:40,d:"Base fee of the DELEGATECALL opcode"}},vm:{},pow:{}},dao:{name:"dao",comment:"DAO rescue hardfork",url:"https://eips.ethereum.org/EIPS/eip-779",status:"Final",gasConfig:{},gasPrices:{},vm:{},pow:{}},tangerineWhistle:{name:"tangerineWhistle",comment:"Hardfork with gas cost changes for IO-heavy operations",url:"https://eips.ethereum.org/EIPS/eip-608",status:"Final",gasConfig:{},gasPrices:{sload:{v:200,d:"Once per SLOAD operation"},call:{v:700,d:"Once per CALL operation & message call transaction"},extcodesize:{v:700,d:"Base fee of the EXTCODESIZE opcode"},extcodecopy:{v:700,d:"Base fee of the EXTCODECOPY opcode"},balance:{v:400,d:"Base fee of the BALANCE opcode"},delegatecall:{v:700,d:"Base fee of the DELEGATECALL opcode"},callcode:{v:700,d:"Base fee of the CALLCODE opcode"},selfdestruct:{v:5e3,d:"Base fee of the SELFDESTRUCT opcode"}},vm:{},pow:{}},spuriousDragon:{name:"spuriousDragon",comment:"HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit",url:"https://eips.ethereum.org/EIPS/eip-607",status:"Final",gasConfig:{},gasPrices:{expByte:{v:50,d:"Times ceil(log256(exponent)) for the EXP instruction"}},vm:{maxCodeSize:{v:24576,d:"Maximum length of contract code"}},pow:{}},byzantium:{name:"byzantium",comment:"Hardfork with new precompiles, instructions and other protocol changes",url:"https://eips.ethereum.org/EIPS/eip-609",status:"Final",gasConfig:{},gasPrices:{modexpGquaddivisor:{v:20,d:"Gquaddivisor from modexp precompile for gas calculation"},ecAdd:{v:500,d:"Gas costs for curve addition precompile"},ecMul:{v:4e4,d:"Gas costs for curve multiplication precompile"},ecPairing:{v:1e5,d:"Base gas costs for curve pairing precompile"},ecPairingWord:{v:8e4,d:"Gas costs regarding curve pairing precompile input length"},revert:{v:0,d:"Base fee of the REVERT opcode"},staticcall:{v:700,d:"Base fee of the STATICCALL opcode"},returndatasize:{v:2,d:"Base fee of the RETURNDATASIZE opcode"},returndatacopy:{v:3,d:"Base fee of the RETURNDATACOPY opcode"}},vm:{},pow:{minerReward:{v:"3000000000000000000",d:"the amount a miner get rewarded for mining a block"},difficultyBombDelay:{v:3e6,d:"the amount of blocks to delay the difficulty bomb with"}}},constantinople:{name:"constantinople",comment:"Postponed hardfork including EIP-1283 (SSTORE gas metering changes)",url:"https://eips.ethereum.org/EIPS/eip-1013",status:"Final",gasConfig:{},gasPrices:{netSstoreNoopGas:{v:200,d:"Once per SSTORE operation if the value doesn't change"},netSstoreInitGas:{v:2e4,d:"Once per SSTORE operation from clean zero"},netSstoreCleanGas:{v:5e3,d:"Once per SSTORE operation from clean non-zero"},netSstoreDirtyGas:{v:200,d:"Once per SSTORE operation from dirty"},netSstoreClearRefund:{v:15e3,d:"Once per SSTORE operation for clearing an originally existing storage slot"},netSstoreResetRefund:{v:4800,d:"Once per SSTORE operation for resetting to the original non-zero value"},netSstoreResetClearRefund:{v:19800,d:"Once per SSTORE operation for resetting to the original zero value"},shl:{v:3,d:"Base fee of the SHL opcode"},shr:{v:3,d:"Base fee of the SHR opcode"},sar:{v:3,d:"Base fee of the SAR opcode"},extcodehash:{v:400,d:"Base fee of the EXTCODEHASH opcode"},create2:{v:32e3,d:"Base fee of the CREATE2 opcode"}},vm:{},pow:{minerReward:{v:"2000000000000000000",d:"The amount a miner gets rewarded for mining a block"},difficultyBombDelay:{v:5e6,d:"the amount of blocks to delay the difficulty bomb with"}}},petersburg:{name:"petersburg",comment:"Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople",url:"https://eips.ethereum.org/EIPS/eip-1716",status:"Final",gasConfig:{},gasPrices:{netSstoreNoopGas:{v:null,d:"Removed along EIP-1283"},netSstoreInitGas:{v:null,d:"Removed along EIP-1283"},netSstoreCleanGas:{v:null,d:"Removed along EIP-1283"},netSstoreDirtyGas:{v:null,d:"Removed along EIP-1283"},netSstoreClearRefund:{v:null,d:"Removed along EIP-1283"},netSstoreResetRefund:{v:null,d:"Removed along EIP-1283"},netSstoreResetClearRefund:{v:null,d:"Removed along EIP-1283"}},vm:{},pow:{}},istanbul:{name:"istanbul",comment:"HF targeted for December 2019 following the Constantinople/Petersburg HF",url:"https://eips.ethereum.org/EIPS/eip-1679",status:"Final",gasConfig:{},gasPrices:{blake2Round:{v:1,d:"Gas cost per round for the Blake2 F precompile"},ecAdd:{v:150,d:"Gas costs for curve addition precompile"},ecMul:{v:6e3,d:"Gas costs for curve multiplication precompile"},ecPairing:{v:45e3,d:"Base gas costs for curve pairing precompile"},ecPairingWord:{v:34e3,d:"Gas costs regarding curve pairing precompile input length"},txDataNonZero:{v:16,d:"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"},sstoreSentryGasEIP2200:{v:2300,d:"Minimum gas required to be present for an SSTORE call, not consumed"},sstoreNoopGasEIP2200:{v:800,d:"Once per SSTORE operation if the value doesn't change"},sstoreDirtyGasEIP2200:{v:800,d:"Once per SSTORE operation if a dirty value is changed"},sstoreInitGasEIP2200:{v:2e4,d:"Once per SSTORE operation from clean zero to non-zero"},sstoreInitRefundEIP2200:{v:19200,d:"Once per SSTORE operation for resetting to the original zero value"},sstoreCleanGasEIP2200:{v:5e3,d:"Once per SSTORE operation from clean non-zero to something else"},sstoreCleanRefundEIP2200:{v:4200,d:"Once per SSTORE operation for resetting to the original non-zero value"},sstoreClearRefundEIP2200:{v:15e3,d:"Once per SSTORE operation for clearing an originally existing storage slot"},balance:{v:700,d:"Base fee of the BALANCE opcode"},extcodehash:{v:700,d:"Base fee of the EXTCODEHASH opcode"},chainid:{v:2,d:"Base fee of the CHAINID opcode"},selfbalance:{v:5,d:"Base fee of the SELFBALANCE opcode"},sload:{v:800,d:"Base fee of the SLOAD opcode"}},vm:{},pow:{}},muirGlacier:{name:"muirGlacier",comment:"HF to delay the difficulty bomb",url:"https://eips.ethereum.org/EIPS/eip-2384",status:"Final",gasConfig:{},gasPrices:{},vm:{},pow:{difficultyBombDelay:{v:9e6,d:"the amount of blocks to delay the difficulty bomb with"}}},berlin:{name:"berlin",comment:"HF targeted for July 2020 following the Muir Glacier HF",url:"https://eips.ethereum.org/EIPS/eip-2070",status:"Final",eips:[2565,2929,2718,2930]},london:{name:"london",comment:"HF targeted for July 2021 following the Berlin fork",url:"https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md",status:"Final",eips:[1559,3198,3529,3541]},shanghai:{name:"shanghai",comment:"Next feature hardfork after the merge hardfork having withdrawals, warm coinbase, push0, limit/meter initcode",url:"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/shanghai.md",status:"Final",eips:[3651,3855,3860,4895]},arrowGlacier:{name:"arrowGlacier",comment:"HF to delay the difficulty bomb",url:"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/arrow-glacier.md",status:"Final",eips:[4345],gasConfig:{},gasPrices:{},vm:{},pow:{}},grayGlacier:{name:"grayGlacier",comment:"Delaying the difficulty bomb to Mid September 2022",url:"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/gray-glacier.md",status:"Draft",eips:[5133],gasConfig:{},gasPrices:{},vm:{},pow:{}},mergeForkIdTransition:{name:"mergeForkIdTransition",comment:"Pre-merge hardfork to fork off non-upgraded clients",url:"https://eips.ethereum.org/EIPS/eip-3675",status:"Draft",eips:[]},merge:{name:"merge",comment:"Hardfork to upgrade the consensus mechanism to Proof-of-Stake",url:"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/merge.md",status:"Final",consensus:{type:"pos",algorithm:"casper",casper:{}},eips:[3675,4399]}},{buf:aT}=a_;let Common=class Common extends EventEmitter{constructor(e){var t,a;super(),this._eips=[],this._customChains=null!==(t=e.customChains)&&void 0!==t?t:[],this._chainParams=this.setChain(e.chain),this.DEFAULT_HARDFORK=null!==(a=this._chainParams.defaultHardfork)&&void 0!==a?a:R.Merge,this.HARDFORK_CHANGES=this.hardforks().map(e=>[e.name,aS[e.name]]),this._hardfork=this.DEFAULT_HARDFORK,void 0!==e.hardfork&&this.setHardfork(e.hardfork),e.eips&&this.setEIPs(e.eips)}static custom(e,t={}){var a;let r=null!==(a=t.baseChain)&&void 0!==a?a:"mainnet",i=Object.assign({},Common._getChainParams(r));if(i.name="custom-chain","string"!=typeof e)return new Common(Object.assign({chain:Object.assign(Object.assign({},i),e)},t));if(e===j.PolygonMainnet)return Common.custom({name:j.PolygonMainnet,chainId:137,networkId:137},t);if(e===j.PolygonMumbai)return Common.custom({name:j.PolygonMumbai,chainId:80001,networkId:80001},t);if(e===j.ArbitrumRinkebyTestnet)return Common.custom({name:j.ArbitrumRinkebyTestnet,chainId:421611,networkId:421611},t);if(e===j.ArbitrumOne)return Common.custom({name:j.ArbitrumOne,chainId:42161,networkId:42161},t);if(e===j.xDaiChain)return Common.custom({name:j.xDaiChain,chainId:100,networkId:100},t);if(e===j.OptimisticKovan)return Common.custom({name:j.OptimisticKovan,chainId:69,networkId:69},Object.assign({hardfork:R.Berlin},t));if(e===j.OptimisticEthereum)return Common.custom({name:j.OptimisticEthereum,chainId:10,networkId:10},Object.assign({hardfork:R.Berlin},t));throw Error(`Custom chain ${e} not supported`)}static fromGethGenesis(e,{chain:t,eips:a,genesisHash:r,hardfork:i,mergeForkIdPostMerge:s}){var n;let o=function(e,t,a){try{if(["config","difficulty","gasLimit","alloc"].some(t=>!(t in e)))throw Error("Invalid format, expected geth genesis fields missing");return void 0!==t&&(e.name=t),function(e,t=!0){var a,r,i;let{name:s,config:n,difficulty:o,mixHash:d,gasLimit:p,coinbase:l,baseFeePerGas:m}=e,{extraData:c,timestamp:u,nonce:f}=e,v=Number(u),{chainId:g}=n;if(""===c&&(c="0x"),isHexPrefixed(u)||(u=intToHex(parseInt(u))),18!==f.length&&(f=(i=f)&&"0x0"!==i?isHexPrefixed(i)?`0x${stripHexPrefix(i).padStart(16,"0")}`:`0x${i.padStart(16,"0")}`:"0x0000000000000000"),n.eip155Block!==n.eip158Block)throw Error("EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork");let y={name:s,chainId:g,networkId:g,genesis:{timestamp:u,gasLimit:parseInt(p),difficulty:parseInt(o),nonce:f,extraData:c,mixHash:d,coinbase:l,baseFeePerGas:m},hardfork:void 0,hardforks:[],bootstrapNodes:[],consensus:void 0!==n.clique?{type:"poa",algorithm:"clique",clique:{period:null!==(a=n.clique.period)&&void 0!==a?a:n.clique.blockperiodseconds,epoch:null!==(r=n.clique.epoch)&&void 0!==r?r:n.clique.epochlength}}:{type:"pow",algorithm:"ethash",ethash:{}}},b={[R.Homestead]:{name:"homesteadBlock"},[R.Dao]:{name:"daoForkBlock"},[R.TangerineWhistle]:{name:"eip150Block"},[R.SpuriousDragon]:{name:"eip155Block"},[R.Byzantium]:{name:"byzantiumBlock"},[R.Constantinople]:{name:"constantinopleBlock"},[R.Petersburg]:{name:"petersburgBlock"},[R.Istanbul]:{name:"istanbulBlock"},[R.MuirGlacier]:{name:"muirGlacierBlock"},[R.Berlin]:{name:"berlinBlock"},[R.London]:{name:"londonBlock"},[R.MergeForkIdTransition]:{name:"mergeForkBlock",postMerge:t},[R.Shanghai]:{name:"shanghaiTime",postMerge:!0,isTimestamp:!0},[R.ShardingForkDev]:{name:"shardingForkTime",postMerge:!0,isTimestamp:!0}},_=Object.keys(b).reduce((e,t)=>(e[b[t].name]=t,e),{}),w=Object.keys(n).filter(e=>void 0!==_[e]&&void 0!==n[e]&&null!==n[e]);if(y.hardforks=w.map(e=>({name:_[e],block:!0===b[_[e]].isTimestamp||"number"!=typeof n[e]?null:n[e],timestamp:!0===b[_[e]].isTimestamp&&"number"==typeof n[e]?n[e]:void 0})).filter(e=>null!==e.block||void 0!==e.timestamp),y.hardforks.sort((e,t)=>{var a,r;return(null!==(a=e.block)&&void 0!==a?a:1/0)-(null!==(r=t.block)&&void 0!==r?r:1/0)}),y.hardforks.sort((e,t)=>{var a,r;return(null!==(a=e.timestamp)&&void 0!==a?a:v)-(null!==(r=t.timestamp)&&void 0!==r?r:v)}),void 0!==n.terminalTotalDifficulty){let e={name:R.Merge,ttd:n.terminalTotalDifficulty,block:null},t=y.hardforks.findIndex(e=>{var t;return(null===(t=b[e.name])||void 0===t?void 0:t.postMerge)===!0});-1!==t?y.hardforks.splice(t,0,e):y.hardforks.push(e)}let A=y.hardforks.length>0?y.hardforks.slice(-1)[0]:void 0;return y.hardfork=null==A?void 0:A.name,y.hardforks.unshift({name:R.Chainstart,block:0}),y}(e,a)}catch(e){throw Error(`Error parsing parameters file: ${e.message}`)}}(e,t,s),d=new Common({chain:null!==(n=o.name)&&void 0!==n?n:"custom",customChains:[o],eips:a,hardfork:null!=i?i:o.hardfork});return void 0!==r&&d.setForkHashes(r),d}static isSupportedChainId(e){let t=this._getInitializedChains();return!!t.names[e.toString()]}static _getChainParams(e,t){let a=e,r=this._getInitializedChains(t);if("number"==typeof a||"bigint"==typeof a){if(a=a.toString(),r.names[a]){let e=r.names[a];return r[e]}throw Error(`Chain with ID ${a} not supported`)}if(void 0!==r[a])return r[a];throw Error(`Chain with name ${a} not supported`)}setChain(e){if("number"==typeof e||"bigint"==typeof e||"string"==typeof e)this._chainParams=Common._getChainParams(e,this._customChains);else if("object"==typeof e){if(this._customChains.length>0)throw Error("Chain must be a string, number, or bigint when initialized with customChains passed in");for(let t of["networkId","genesis","hardforks","bootstrapNodes"])if(!(t in e))throw Error(`Missing required chain parameter: ${t}`);this._chainParams=e}else throw Error("Wrong input format");for(let e of this.hardforks())if(void 0===e.block)throw Error("Hardfork cannot have undefined block number");return this._chainParams}setHardfork(e){let t=!1;for(let a of this.HARDFORK_CHANGES)a[0]===e&&(this._hardfork!==e&&(this._hardfork=e,this.emit("hardforkChanged",e)),t=!0);if(!t)throw Error(`Hardfork with name ${e} not supported`)}getHardforkByBlockNumber(e,t,a){let r=toType(e,H.BigInt),i=toType(t,H.BigInt),s=toType(a,H.Number),n=this.hardforks().filter(e=>null!==e.block||null!==e.ttd&&void 0!==e.ttd||void 0!==e.timestamp),o=n.findIndex(e=>null!==e.ttd&&void 0!==e.ttd),d=n.slice(o+1).findIndex(e=>null!==e.ttd&&void 0!==e.ttd);if(d>=0)throw Error("More than one merge hardforks found with ttd specified");let p=n.findIndex(e=>null!==e.block&&e.block>r||void 0!==s&&Number(e.timestamp)>s);if(-1===p)p=n.length;else if(0===p)throw Error("Must have at least one hardfork at block 0");if(void 0===s){let e=n.slice(0,p).reverse().findIndex(e=>null!==e.block||void 0!==e.ttd);p-=e}if(null===n[p-=1].block&&void 0===n[p].timestamp)(null==i||BigInt(n[p].ttd)>i)&&(p-=1);else if(o>=0&&null!=i){if(p>=o&&BigInt(n[o].ttd)>i)throw Error("Maximum HF determined by total difficulty is lower than the block number HF");if(p<o&&BigInt(n[o].ttd)<=i)throw Error("HF determined by block number is lower than the minimum total difficulty HF")}let l=p;for(;p<n.length-1&&n[p].block===n[p+1].block&&n[p].timestamp===n[p+1].timestamp;p+=1);if(s){let e=n.slice(0,l).reduce((e,t)=>{var a;return Math.max(Number(null!==(a=t.timestamp)&&void 0!==a?a:"0"),e)},0);if(e>s)throw Error("Maximum HF determined by timestamp is lower than the block number/ttd HF");let t=n.slice(p+1).reduce((e,t)=>{var a;return Math.min(Number(null!==(a=t.timestamp)&&void 0!==a?a:s),e)},s);if(t<s)throw Error("Maximum HF determined by block number/ttd is lower than timestamp HF")}let m=n[p];return m.name}setHardforkByBlockNumber(e,t,a){let r=this.getHardforkByBlockNumber(e,t,a);return this.setHardfork(r),r}_getHardfork(e){let t=this.hardforks();for(let a of t)if(a.name===e)return a;return null}setEIPs(e=[]){for(let t of e){if(!(t in ax))throw Error(`${t} not supported`);let a=this.gteHardfork(ax[t].minimumHardfork);if(!a)throw Error(`${t} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${a}`);if(void 0!==ax[t].requiredEIPs){for(let a of ax[t].requiredEIPs)if(!(e.includes(a)||this.isActivatedEIP(a)))throw Error(`${t} requires EIP ${a}, but is not included in the EIP list`)}}this._eips=e}param(e,t){let a;for(let r of this._eips)if(void 0!==(a=this.paramByEIP(e,t,r)))return a;return this.paramByHardfork(e,t,this._hardfork)}paramByHardfork(e,t,a){let r=null;for(let i of this.HARDFORK_CHANGES){if("eips"in i[1]){let a=i[1].eips;for(let i of a){let a=this.paramByEIP(e,t,i);r="bigint"==typeof a?a:r}}else{if(void 0===i[1][e])throw Error(`Topic ${e} not defined`);void 0!==i[1][e][t]&&(r=i[1][e][t].v)}if(i[0]===a)break}return BigInt(null!=r?r:0)}paramByEIP(e,t,a){if(!(a in ax))throw Error(`${a} not supported`);let r=ax[a];if(!(e in r))throw Error(`Topic ${e} not defined`);if(void 0===r[e][t])return;let i=r[e][t].v;return BigInt(i)}paramByBlock(e,t,a,r,i){let s=this.getHardforkByBlockNumber(a,r,i);return this.paramByHardfork(e,t,s)}isActivatedEIP(e){if(this.eips().includes(e))return!0;for(let t of this.HARDFORK_CHANGES){let a=t[1];if(this.gteHardfork(a.name)&&"eips"in a&&a.eips.includes(e))return!0}return!1}hardforkIsActiveOnBlock(e,t){let a=toType(t,H.BigInt),r=null!=e?e:this._hardfork,i=this.hardforkBlock(r);return"bigint"==typeof i&&i!==BigInt(0)&&a>=i}activeOnBlock(e){return this.hardforkIsActiveOnBlock(null,e)}hardforkGteHardfork(e,t){let a=null!=e?e:this._hardfork,r=this.hardforks(),i=-1,s=-1,n=0;for(let e of r)e.name===a&&(i=n),e.name===t&&(s=n),n+=1;return i>=s&&-1!==s}gteHardfork(e){return this.hardforkGteHardfork(null,e)}hardforkBlock(e){var t;let a=null!=e?e:this._hardfork,r=null===(t=this._getHardfork(a))||void 0===t?void 0:t.block;return null==r?null:BigInt(r)}hardforkTimestamp(e){var t;let a=null!=e?e:this._hardfork,r=null===(t=this._getHardfork(a))||void 0===t?void 0:t.timestamp;return null==r?null:BigInt(r)}eipBlock(e){for(let t of this.HARDFORK_CHANGES){let a=t[1];if("eips"in a&&a.eips.includes(e))return this.hardforkBlock("number"==typeof t[0]?String(t[0]):t[0])}return null}hardforkTTD(e){var t;let a=null!=e?e:this._hardfork,r=null===(t=this._getHardfork(a))||void 0===t?void 0:t.ttd;return null==r?null:BigInt(r)}isHardforkBlock(e,t){let a=toType(e,H.BigInt),r=null!=t?t:this._hardfork,i=this.hardforkBlock(r);return"bigint"==typeof i&&i!==BigInt(0)&&i===a}nextHardforkBlockOrTimestamp(e){var t,a;let r=null!=e?e:this._hardfork,i=this.hardforks(),s=i.findIndex(e=>e.name===r);if(r===R.Merge&&(s-=1),s<0)return null;let n=null!==(t=i[s].timestamp)&&void 0!==t?t:i[s].block;n=null!=n?Number(n):null;let o=i.slice(s+1).find(e=>{var t;let a=null!==(t=e.timestamp)&&void 0!==t?t:e.block;return a=null!=a?Number(a):null,e.name!==R.Merge&&null!=a&&a!==n});if(void 0===o)return null;let d=null!==(a=o.timestamp)&&void 0!==a?a:o.block;return null==d?null:BigInt(d)}nextHardforkBlock(e){let t=null!=e?e:this._hardfork,a=this.hardforkBlock(t);if(null===a&&t===R.Merge){let e=this.hardforks(),t=e.findIndex(e=>null!==e.ttd&&void 0!==e.ttd);if(t<0)throw Error("Merge hardfork should have been found");a=this.hardforkBlock(e[t-1].name)}if(null===a)return null;let r=this.hardforks().reduce((e,t)=>{let r=BigInt(null===t.block||void 0!==t.ttd&&null!==t.ttd?0:t.block);return r>a&&null===e?r:e},null);return r}isNextHardforkBlock(e,t){let a=toType(e,H.BigInt),r=null!=t?t:this._hardfork,i=this.nextHardforkBlock(r);return null!==i&&i===a}_calcForkHash(e,t){let a=new Uint8Array,r=0;for(let t of this.hardforks()){let{block:i,timestamp:s,name:n}=t,o=null!=s?s:i;if("number"==typeof(o=null!==o?Number(o):null)&&0!==o&&o!==r&&n!==R.Merge){let e=converters_hexToBytes(o.toString(16).padStart(16,"0"));a=uint8ArrayConcat(a,e),r=o}if(t.name===e)break}let i=uint8ArrayConcat(t,a),s=converters_bytesToHex(intToUint8Array(aT(i)>>>0));return s}forkHash(e,t){let a=null!=e?e:this._hardfork,r=this._getHardfork(a);if(null===r||(null==r?void 0:r.block)===null&&(null==r?void 0:r.timestamp)===void 0&&(null==r?void 0:r.ttd)===void 0)throw Error("No fork hash calculation possible for future hardfork");if((null==r?void 0:r.forkHash)!==null&&(null==r?void 0:r.forkHash)!==void 0)return r.forkHash;if(!t)throw Error("genesisHash required for forkHash calculation");return this._calcForkHash(a,t)}hardforkForForkHash(e){let t=this.hardforks().filter(t=>t.forkHash===e);return t.length>=1?t[t.length-1]:null}setForkHashes(e){var t;for(let a of this.hardforks()){let r=null!==(t=a.timestamp)&&void 0!==t?t:a.block;(null===a.forkHash||void 0===a.forkHash)&&(null!=r||void 0!==a.ttd)&&(a.forkHash=this.forkHash(a.name,e))}}genesis(){return this._chainParams.genesis}hardforks(){return this._chainParams.hardforks}bootstrapNodes(){return this._chainParams.bootstrapNodes}dnsNetworks(){return this._chainParams.dnsNetworks}hardfork(){return this._hardfork}chainId(){return BigInt(this._chainParams.chainId)}chainName(){return this._chainParams.name}networkId(){return BigInt(this._chainParams.networkId)}eips(){return this._eips}consensusType(){let e;let t=this.hardfork();for(let a of this.HARDFORK_CHANGES)if("consensus"in a[1]&&(e=a[1].consensus.type),a[0]===t)break;return null!=e?e:this._chainParams.consensus.type}consensusAlgorithm(){let e;let t=this.hardfork();for(let a of this.HARDFORK_CHANGES)if("consensus"in a[1]&&(e=a[1].consensus.algorithm),a[0]===t)break;return null!=e?e:this._chainParams.consensus.algorithm}consensusConfig(){var e;let t;let a=this.hardfork();for(let e of this.HARDFORK_CHANGES)if("consensus"in e[1]&&(t=e[1].consensus[e[1].consensus.algorithm]),e[0]===a)break;return null!==(e=null!=t?t:this._chainParams.consensus[this.consensusAlgorithm()])&&void 0!==e?e:{}}copy(){let e=Object.assign(Object.create(Object.getPrototypeOf(this)),this);return e.removeAllListeners(),e}static _getInitializedChains(e){let t={};for(let[e,a]of Object.entries(O))t[a]=e.toLowerCase();let a={mainnet:aA,goerli:aw,sepolia:aE};if(e)for(let r of e){let{name:e}=r;t[r.chainId.toString()]=e,a[e]=r}return a.names=t,a}};!function(e){e[e.EIP155ReplayProtection=155]="EIP155ReplayProtection",e[e.EIP1559FeeMarket=1559]="EIP1559FeeMarket",e[e.EIP2718TypedTransaction=2718]="EIP2718TypedTransaction",e[e.EIP2930AccessLists=2930]="EIP2930AccessLists"}(V||(V={}));let Address=class Address{constructor(e){if(20!==e.length)throw Error("Invalid address length");this.buf=e}static zero(){return new Address(zeros(20))}equals(e){return uint8ArrayEquals(this.buf,e.buf)}isZero(){return this.equals(Address.zero())}toString(){return converters_bytesToHex(this.buf)}toArray(){return this.buf}static publicToAddress(e,t=!1){let a=e;if(assertIsUint8Array(a),t&&64!==a.length&&(a=au.ProjectivePoint.fromHex(a).toRawBytes(!1).slice(1)),64!==a.length)throw Error("Expected pubKey to be of length 64");return e_(a).slice(-20)}};let checkMaxInitCodeSize=(e,t)=>{let a=e.param("vm","maxInitCodeSize");if(a&&BigInt(t)>a)throw Error(`the initcode size of this transaction is too large: it is ${t} while the max is ${e.param("vm","maxInitCodeSize")}`)},getAccessListData=e=>{let t,a;if(!function(e){if(0===e.length)return!0;let t=e[0];return!!Array.isArray(t)}(e)){t=e;let r=[];for(let t=0;t<e.length;t+=1){let a=e[t],i=toUint8Array(a.address),s=[];for(let e=0;e<a.storageKeys.length;e+=1)s.push(toUint8Array(a.storageKeys[e]));r.push([i,s])}a=r}else{a=null!=e?e:[];let r=[];for(let e=0;e<a.length;e+=1){let t=a[e],i=converters_bytesToHex(t[0]),s=[];for(let e=0;e<t[1].length;e+=1)s.push(converters_bytesToHex(t[1][e]));let n={address:i,storageKeys:s};r.push(n)}t=r}return{AccessListJSON:t,accessList:a}},verifyAccessList=e=>{for(let t=0;t<e.length;t+=1){let a=e[t],r=a[0],i=a[1];if(void 0!==a[2])throw Error("Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.");if(20!==r.length)throw Error("Invalid EIP-2930 transaction: address length should be 20 bytes");for(let e=0;e<i.length;e+=1)if(32!==i[e].length)throw Error("Invalid EIP-2930 transaction: storage slot length should be 32 bytes")}},getAccessListJSON=e=>{let t=[];for(let a=0;a<e.length;a+=1){let r=e[a],i={address:converters_bytesToHex(setLengthLeft(r[0],20)),storageKeys:[]},s=r&&r[1];for(let e=0;e<s.length;e+=1){let t=s[e];i.storageKeys.push(converters_bytesToHex(setLengthLeft(t,32)))}t.push(i)}return t},getDataFeeEIP2930=(e,t)=>{let a=t.param("gasPrices","accessListStorageKeyCost"),r=t.param("gasPrices","accessListAddressCost"),i=0;for(let t=0;t<e.length;t+=1){let a=e[t],r=a[1];i+=r.length}let s=e.length;return s*Number(r)+i*Number(a)};let BaseTransaction=class BaseTransaction{constructor(e,t){var a,r;this.cache={hash:void 0,dataFee:void 0},this.activeCapabilities=[],this.DEFAULT_CHAIN=O.Mainnet,this.DEFAULT_HARDFORK=R.Merge;let{nonce:i,gasLimit:s,to:n,value:o,data:d,v:p,r:l,s:m,type:c}=e;this._type=Number(uint8ArrayToBigInt(toUint8Array(c))),this.txOptions=t;let u=toUint8Array(""===n?"0x":n),f=toUint8Array(""===p?"0x":p),v=toUint8Array(""===l?"0x":l),g=toUint8Array(""===m?"0x":m);this.nonce=uint8ArrayToBigInt(toUint8Array(""===i?"0x":i)),this.gasLimit=uint8ArrayToBigInt(toUint8Array(""===s?"0x":s)),this.to=u.length>0?new Address(u):void 0,this.value=uint8ArrayToBigInt(toUint8Array(""===o?"0x":o)),this.data=toUint8Array(""===d?"0x":d),this.v=f.length>0?uint8ArrayToBigInt(f):void 0,this.r=v.length>0?uint8ArrayToBigInt(v):void 0,this.s=g.length>0?uint8ArrayToBigInt(g):void 0,this._validateCannotExceedMaxInteger({value:this.value,r:this.r,s:this.s}),this._validateCannotExceedMaxInteger({gasLimit:this.gasLimit},64),this._validateCannotExceedMaxInteger({nonce:this.nonce},64,!0);let y=void 0===this.to||null===this.to,b=null!==(a=t.allowUnlimitedInitCodeSize)&&void 0!==a&&a,_=null!==(r=t.common)&&void 0!==r?r:this._getCommon();y&&_.isActivatedEIP(3860)&&!b&&checkMaxInitCodeSize(_,this.data.length)}get type(){return this._type}supports(e){return this.activeCapabilities.includes(e)}validate(e=!1){let t=[];return this.getBaseFee()>this.gasLimit&&t.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`),this.isSigned()&&!this.verifySignature()&&t.push("Invalid Signature"),e?t:0===t.length}_validateYParity(){let{v:e}=this;if(void 0!==e&&e!==BigInt(0)&&e!==BigInt(1)){let e=this._errorMsg("The y-parity of the transaction should either be 0 or 1");throw Error(e)}}_validateHighS(){let{s:e}=this;if(this.common.gteHardfork("homestead")&&void 0!==e&&e>ag){let e=this._errorMsg("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");throw Error(e)}}getBaseFee(){let e=this.common.param("gasPrices","tx"),t=this.getDataFee();if(e&&(t+=e),this.common.gteHardfork("homestead")&&this.toCreationAddress()){let e=this.common.param("gasPrices","txCreation");e&&(t+=e)}return t}getDataFee(){let e=this.common.param("gasPrices","txDataZero"),t=this.common.param("gasPrices","txDataNonZero"),a=BigInt(0);for(let r=0;r<this.data.length;r+=1)0===this.data[r]?a+=e:a+=t;if((void 0===this.to||null===this.to)&&this.common.isActivatedEIP(3860)){let e=BigInt(Math.ceil(this.data.length/32)),t=this.common.param("gasPrices","initCodeWordCost")*e;a+=t}return a}toCreationAddress(){return void 0===this.to||0===this.to.buf.length}isSigned(){let{v:e,r:t,s:a}=this;return void 0!==e&&void 0!==t&&void 0!==a}verifySignature(){try{let e=this.getSenderPublicKey();return 0!==unpadUint8Array(e).length}catch(e){return!1}}getSenderAddress(){return new Address(Address.publicToAddress(this.getSenderPublicKey()))}sign(e){if(32!==e.length){let e=this._errorMsg("Private key must be 32 bytes in length.");throw Error(e)}let t=!1;0===this.type&&this.common.gteHardfork("spuriousDragon")&&!this.supports(V.EIP155ReplayProtection)&&(this.activeCapabilities.push(V.EIP155ReplayProtection),t=!0);let a=this.getMessageToSign(!0),{v:r,r:i,s}=this._ecsign(a,e),n=this._processSignature(r,i,s);if(t){let e=this.activeCapabilities.indexOf(V.EIP155ReplayProtection);e>-1&&this.activeCapabilities.splice(e,1)}return n}_getCommon(e,t){var a;if(void 0!==t){let a=uint8ArrayToBigInt(toUint8Array(t));if(e){if(e.chainId()!==a){let e=this._errorMsg("The chain ID does not match the chain ID of Common");throw Error(e)}return e.copy()}return Common.isSupportedChainId(a)?new Common({chain:a,hardfork:this.DEFAULT_HARDFORK}):Common.custom({name:"custom-chain",networkId:a,chainId:a},{baseChain:this.DEFAULT_CHAIN,hardfork:this.DEFAULT_HARDFORK})}return null!==(a=null==e?void 0:e.copy())&&void 0!==a?a:new Common({chain:this.DEFAULT_CHAIN,hardfork:this.DEFAULT_HARDFORK})}_validateCannotExceedMaxInteger(e,t=256,a=!1){for(let[r,i]of Object.entries(e))switch(t){case 64:if(a){if(void 0!==i&&i>=ah){let e=this._errorMsg(`${r} cannot equal or exceed MAX_UINT64 (2^64-1), given ${i}`);throw Error(e)}}else if(void 0!==i&&i>ah){let e=this._errorMsg(`${r} cannot exceed MAX_UINT64 (2^64-1), given ${i}`);throw Error(e)}break;case 256:if(a){if(void 0!==i&&i>=af){let e=this._errorMsg(`${r} cannot equal or exceed MAX_INTEGER (2^256-1), given ${i}`);throw Error(e)}}else if(void 0!==i&&i>af){let e=this._errorMsg(`${r} cannot exceed MAX_INTEGER (2^256-1), given ${i}`);throw Error(e)}break;default:{let e=this._errorMsg("unimplemented bits value");throw Error(e)}}}static _validateNotArray(e){let t=["nonce","gasPrice","gasLimit","to","value","data","v","r","s","type","baseFee","maxFeePerGas","chainId"];for(let[a,r]of Object.entries(e))if(t.includes(a)&&Array.isArray(r))throw Error(`${a} cannot be an array`)}_getSharedErrorPostfix(){let e="";try{e=this.isSigned()?converters_bytesToHex(this.hash()):"not available (unsigned)"}catch(t){e="error"}let t="";try{t=this.isSigned().toString()}catch(t){e="error"}let a="";try{a=this.common.hardfork()}catch(e){a="error"}return`tx type=${this.type} hash=${e} nonce=${this.nonce} value=${this.value} signed=${t} hf=${a}`}_ecsign(e,t,a){let r=au.sign(e,t),i=r.toCompactRawBytes(),s=i.subarray(0,32),n=i.subarray(32,64),o=void 0===a?BigInt(r.recovery+27):BigInt(r.recovery+35)+BigInt(a)*BigInt(2);return{r:s,s:n,v:o}}static fromSerializedTx(e,t={}){}static fromTxData(e,t={}){}};let aI=converters_hexToBytes("2".padStart(2,"0"));let FeeMarketEIP1559Transaction=class FeeMarketEIP1559Transaction extends BaseTransaction{constructor(e,t={}){var a;super(Object.assign(Object.assign({},e),{type:2}),t),this.DEFAULT_HARDFORK="london";let{chainId:r,accessList:i,maxFeePerGas:s,maxPriorityFeePerGas:n}=e;if(this.common=this._getCommon(t.common,r),this.chainId=this.common.chainId(),!this.common.isActivatedEIP(1559))throw Error("EIP-1559 not enabled on Common");this.activeCapabilities=this.activeCapabilities.concat([1559,2718,2930]);let o=getAccessListData(null!=i?i:[]);if(this.accessList=o.accessList,this.AccessListJSON=o.AccessListJSON,verifyAccessList(this.accessList),this.maxFeePerGas=uint8ArrayToBigInt(toUint8Array(""===s?"0x":s)),this.maxPriorityFeePerGas=uint8ArrayToBigInt(toUint8Array(""===n?"0x":n)),this._validateCannotExceedMaxInteger({maxFeePerGas:this.maxFeePerGas,maxPriorityFeePerGas:this.maxPriorityFeePerGas}),BaseTransaction._validateNotArray(e),this.gasLimit*this.maxFeePerGas>af){let e=this._errorMsg("gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)");throw Error(e)}if(this.maxFeePerGas<this.maxPriorityFeePerGas){let e=this._errorMsg("maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)");throw Error(e)}this._validateYParity(),this._validateHighS();let d=null===(a=null==t?void 0:t.freeze)||void 0===a||a;d&&Object.freeze(this)}static fromTxData(e,t={}){return new FeeMarketEIP1559Transaction(e,t)}static fromSerializedTx(e,t={}){if(!uint8ArrayEquals(e.subarray(0,1),aI))throw Error(`Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: 2, received: ${converters_bytesToHex(e.subarray(0,1))}`);let a=ab.yH.decode(e.subarray(1));if(!Array.isArray(a))throw Error("Invalid serialized tx input: must be array");return FeeMarketEIP1559Transaction.fromValuesArray(a,t)}static fromValuesArray(e,t={}){if(9!==e.length&&12!==e.length)throw Error("Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).");let[a,r,i,s,n,o,d,p,l,m,c,u]=e;return this._validateNotArray({chainId:a,v:m}),validateNoLeadingZeroes({nonce:r,maxPriorityFeePerGas:i,maxFeePerGas:s,gasLimit:n,value:d,v:m,r:c,s:u}),new FeeMarketEIP1559Transaction({chainId:uint8ArrayToBigInt(a),nonce:r,maxPriorityFeePerGas:i,maxFeePerGas:s,gasLimit:n,to:o,value:d,data:p,accessList:null!=l?l:[],v:void 0!==m?uint8ArrayToBigInt(m):void 0,r:c,s:u},t)}getDataFee(){if(this.cache.dataFee&&this.cache.dataFee.hardfork===this.common.hardfork())return this.cache.dataFee.value;let e=super.getDataFee();return e+=BigInt(getDataFeeEIP2930(this.accessList,this.common)),Object.isFrozen(this)&&(this.cache.dataFee={value:e,hardfork:this.common.hardfork()}),e}getUpfrontCost(e=BigInt(0)){let t=this.maxPriorityFeePerGas,a=this.maxFeePerGas-e;return this.gasLimit*((t<a?t:a)+e)+this.value}raw(){return[bigIntToUnpaddedUint8Array(this.chainId),bigIntToUnpaddedUint8Array(this.nonce),bigIntToUnpaddedUint8Array(this.maxPriorityFeePerGas),bigIntToUnpaddedUint8Array(this.maxFeePerGas),bigIntToUnpaddedUint8Array(this.gasLimit),void 0!==this.to?this.to.buf:Uint8Array.from([]),bigIntToUnpaddedUint8Array(this.value),this.data,this.accessList,void 0!==this.v?bigIntToUnpaddedUint8Array(this.v):Uint8Array.from([]),void 0!==this.r?bigIntToUnpaddedUint8Array(this.r):Uint8Array.from([]),void 0!==this.s?bigIntToUnpaddedUint8Array(this.s):Uint8Array.from([])]}serialize(){let e=this.raw();return uint8ArrayConcat(aI,ab.yH.encode(e))}getMessageToSign(e=!0){let t=this.raw().slice(0,9),a=uint8ArrayConcat(aI,ab.yH.encode(t));return e?e_(a):a}hash(){if(!this.isSigned()){let e=this._errorMsg("Cannot call hash method if transaction is not signed");throw Error(e)}return Object.isFrozen(this)?(this.cache.hash||(this.cache.hash=e_(this.serialize())),this.cache.hash):e_(this.serialize())}getMessageToVerifySignature(){return this.getMessageToSign()}getSenderPublicKey(){if(!this.isSigned()){let e=this._errorMsg("Cannot call this method if transaction is not signed");throw Error(e)}let e=this.getMessageToVerifySignature(),{v:t,r:a,s:r}=this;this._validateHighS();try{return ecrecover(e,t+BigInt(27),bigIntToUnpaddedUint8Array(a),bigIntToUnpaddedUint8Array(r))}catch(t){let e=this._errorMsg("Invalid Signature");throw Error(e)}}_processSignature(e,t,a){let r=Object.assign(Object.assign({},this.txOptions),{common:this.common});return FeeMarketEIP1559Transaction.fromTxData({chainId:this.chainId,nonce:this.nonce,maxPriorityFeePerGas:this.maxPriorityFeePerGas,maxFeePerGas:this.maxFeePerGas,gasLimit:this.gasLimit,to:this.to,value:this.value,data:this.data,accessList:this.accessList,v:e-BigInt(27),r:uint8ArrayToBigInt(t),s:uint8ArrayToBigInt(a)},r)}toJSON(){let e=getAccessListJSON(this.accessList);return{chainId:bigIntToHex(this.chainId),nonce:bigIntToHex(this.nonce),maxPriorityFeePerGas:bigIntToHex(this.maxPriorityFeePerGas),maxFeePerGas:bigIntToHex(this.maxFeePerGas),gasLimit:bigIntToHex(this.gasLimit),to:void 0!==this.to?this.to.toString():void 0,value:bigIntToHex(this.value),data:converters_bytesToHex(this.data),accessList:e,v:void 0!==this.v?bigIntToHex(this.v):void 0,r:void 0!==this.r?bigIntToHex(this.r):void 0,s:void 0!==this.s?bigIntToHex(this.s):void 0}}errorStr(){return this._getSharedErrorPostfix()+` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`}_errorMsg(e){return`${e} (${this.errorStr()})`}};let ak=converters_hexToBytes("1".padStart(2,"0"));let AccessListEIP2930Transaction=class AccessListEIP2930Transaction extends BaseTransaction{constructor(e,t={}){var a;super(Object.assign(Object.assign({},e),{type:1}),t),this.DEFAULT_HARDFORK="berlin";let{chainId:r,accessList:i,gasPrice:s}=e;if(this.common=this._getCommon(t.common,r),this.chainId=this.common.chainId(),!this.common.isActivatedEIP(2930))throw Error("EIP-2930 not enabled on Common");this.activeCapabilities=this.activeCapabilities.concat([2718,2930]);let n=getAccessListData(null!=i?i:[]);if(this.accessList=n.accessList,this.AccessListJSON=n.AccessListJSON,verifyAccessList(this.accessList),this.gasPrice=uint8ArrayToBigInt(toUint8Array(""===s?"0x":s)),this._validateCannotExceedMaxInteger({gasPrice:this.gasPrice}),BaseTransaction._validateNotArray(e),this.gasPrice*this.gasLimit>af){let e=this._errorMsg("gasLimit * gasPrice cannot exceed MAX_INTEGER");throw Error(e)}this._validateYParity(),this._validateHighS();let o=null===(a=null==t?void 0:t.freeze)||void 0===a||a;o&&Object.freeze(this)}static fromTxData(e,t={}){return new AccessListEIP2930Transaction(e,t)}static fromSerializedTx(e,t={}){if(!uint8ArrayEquals(e.subarray(0,1),ak))throw Error(`Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: 1, received: ${converters_bytesToHex(e.subarray(0,1))}`);let a=ab.yH.decode(Uint8Array.from(e.subarray(1)));if(!Array.isArray(a))throw Error("Invalid serialized tx input: must be array");return AccessListEIP2930Transaction.fromValuesArray(a,t)}static fromValuesArray(e,t={}){if(8!==e.length&&11!==e.length)throw Error("Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).");let[a,r,i,s,n,o,d,p,l,m,c]=e;return this._validateNotArray({chainId:a,v:l}),validateNoLeadingZeroes({nonce:r,gasPrice:i,gasLimit:s,value:o,v:l,r:m,s:c}),new AccessListEIP2930Transaction({chainId:uint8ArrayToBigInt(a),nonce:r,gasPrice:i,gasLimit:s,to:n,value:o,data:d,accessList:null!=p?p:[],v:void 0!==l?uint8ArrayToBigInt(l):void 0,r:m,s:c},t)}getDataFee(){if(this.cache.dataFee&&this.cache.dataFee.hardfork===this.common.hardfork())return this.cache.dataFee.value;let e=super.getDataFee();return e+=BigInt(getDataFeeEIP2930(this.accessList,this.common)),Object.isFrozen(this)&&(this.cache.dataFee={value:e,hardfork:this.common.hardfork()}),e}getUpfrontCost(){return this.gasLimit*this.gasPrice+this.value}raw(){return[bigIntToUnpaddedUint8Array(this.chainId),bigIntToUnpaddedUint8Array(this.nonce),bigIntToUnpaddedUint8Array(this.gasPrice),bigIntToUnpaddedUint8Array(this.gasLimit),void 0!==this.to?this.to.buf:Uint8Array.from([]),bigIntToUnpaddedUint8Array(this.value),this.data,this.accessList,void 0!==this.v?bigIntToUnpaddedUint8Array(this.v):Uint8Array.from([]),void 0!==this.r?bigIntToUnpaddedUint8Array(this.r):Uint8Array.from([]),void 0!==this.s?bigIntToUnpaddedUint8Array(this.s):Uint8Array.from([])]}serialize(){let e=this.raw();return uint8ArrayConcat(ak,ab.yH.encode(e))}getMessageToSign(e=!0){let t=this.raw().slice(0,8),a=uint8ArrayConcat(ak,ab.yH.encode(t));return e?e_(a):a}hash(){if(!this.isSigned()){let e=this._errorMsg("Cannot call hash method if transaction is not signed");throw Error(e)}return Object.isFrozen(this)?(this.cache.hash||(this.cache.hash=e_(this.serialize())),this.cache.hash):e_(this.serialize())}getMessageToVerifySignature(){return this.getMessageToSign()}getSenderPublicKey(){if(!this.isSigned()){let e=this._errorMsg("Cannot call this method if transaction is not signed");throw Error(e)}let e=this.getMessageToVerifySignature(),{v:t,r:a,s:r}=this;this._validateHighS();try{return ecrecover(e,t+BigInt(27),bigIntToUnpaddedUint8Array(a),bigIntToUnpaddedUint8Array(r))}catch(t){let e=this._errorMsg("Invalid Signature");throw Error(e)}}_processSignature(e,t,a){let r=Object.assign(Object.assign({},this.txOptions),{common:this.common});return AccessListEIP2930Transaction.fromTxData({chainId:this.chainId,nonce:this.nonce,gasPrice:this.gasPrice,gasLimit:this.gasLimit,to:this.to,value:this.value,data:this.data,accessList:this.accessList,v:e-BigInt(27),r:uint8ArrayToBigInt(t),s:uint8ArrayToBigInt(a)},r)}toJSON(){let e=getAccessListJSON(this.accessList);return{chainId:bigIntToHex(this.chainId),nonce:bigIntToHex(this.nonce),gasPrice:bigIntToHex(this.gasPrice),gasLimit:bigIntToHex(this.gasLimit),to:void 0!==this.to?this.to.toString():void 0,value:bigIntToHex(this.value),data:converters_bytesToHex(this.data),accessList:e,v:void 0!==this.v?bigIntToHex(this.v):void 0,r:void 0!==this.r?bigIntToHex(this.r):void 0,s:void 0!==this.s?bigIntToHex(this.s):void 0}}errorStr(){var e,t;return this._getSharedErrorPostfix()+` gasPrice=${this.gasPrice} accessListCount=${null!==(t=null===(e=this.accessList)||void 0===e?void 0:e.length)&&void 0!==t?t:0}`}_errorMsg(e){return`${e} (${this.errorStr()})`}};function meetsEIP155(e,t){let a=Number(e),r=2*Number(t);return a===r+35||a===r+36}let Transaction=class Transaction extends BaseTransaction{constructor(e,t={}){var a;if(super(Object.assign(Object.assign({},e),{type:0}),t),this.common=this._validateTxV(this.v,t.common),this.gasPrice=uint8ArrayToBigInt(toUint8Array(""===e.gasPrice?"0x":e.gasPrice)),this.gasPrice*this.gasLimit>af){let e=this._errorMsg("gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)");throw Error(e)}this._validateCannotExceedMaxInteger({gasPrice:this.gasPrice}),BaseTransaction._validateNotArray(e),this.common.gteHardfork("spuriousDragon")&&(this.isSigned()?meetsEIP155(this.v,this.common.chainId())&&this.activeCapabilities.push(V.EIP155ReplayProtection):this.activeCapabilities.push(V.EIP155ReplayProtection));let r=null===(a=null==t?void 0:t.freeze)||void 0===a||a;r&&Object.freeze(this)}static fromTxData(e,t={}){return new Transaction(e,t)}static fromSerializedTx(e,t={}){let a=ab.yH.decode(e);if(!Array.isArray(a))throw Error("Invalid serialized tx input. Must be array");return this.fromValuesArray(a,t)}static fromValuesArray(e,t={}){if(6!==e.length&&9!==e.length)throw Error("Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).");let[a,r,i,s,n,o,d,p,l]=e;return validateNoLeadingZeroes({nonce:a,gasPrice:r,gasLimit:i,value:n,v:d,r:p,s:l}),new Transaction({nonce:a,gasPrice:r,gasLimit:i,to:s,value:n,data:o,v:d,r:p,s:l},t)}raw(){return[bigIntToUnpaddedUint8Array(this.nonce),bigIntToUnpaddedUint8Array(this.gasPrice),bigIntToUnpaddedUint8Array(this.gasLimit),void 0!==this.to?this.to.buf:Uint8Array.from([]),bigIntToUnpaddedUint8Array(this.value),this.data,void 0!==this.v?bigIntToUnpaddedUint8Array(this.v):Uint8Array.from([]),void 0!==this.r?bigIntToUnpaddedUint8Array(this.r):Uint8Array.from([]),void 0!==this.s?bigIntToUnpaddedUint8Array(this.s):Uint8Array.from([])]}serialize(){return ab.yH.encode(this.raw())}_getMessageToSign(){let e=[bigIntToUnpaddedUint8Array(this.nonce),bigIntToUnpaddedUint8Array(this.gasPrice),bigIntToUnpaddedUint8Array(this.gasLimit),void 0!==this.to?this.to.buf:Uint8Array.from([]),bigIntToUnpaddedUint8Array(this.value),this.data];return this.supports(V.EIP155ReplayProtection)&&(e.push(toUint8Array(this.common.chainId())),e.push(unpadUint8Array(toUint8Array(0))),e.push(unpadUint8Array(toUint8Array(0)))),e}getMessageToSign(e=!0){let t=this._getMessageToSign();return e?e_(ab.yH.encode(t)):t}getDataFee(){return this.cache.dataFee&&this.cache.dataFee.hardfork===this.common.hardfork()?this.cache.dataFee.value:(Object.isFrozen(this)&&(this.cache.dataFee={value:super.getDataFee(),hardfork:this.common.hardfork()}),super.getDataFee())}getUpfrontCost(){return this.gasLimit*this.gasPrice+this.value}hash(){if(!this.isSigned()){let e=this._errorMsg("Cannot call hash method if transaction is not signed");throw Error(e)}return Object.isFrozen(this)?(this.cache.hash||(this.cache.hash=e_(ab.yH.encode(this.raw()))),this.cache.hash):e_(ab.yH.encode(this.raw()))}getMessageToVerifySignature(){if(!this.isSigned()){let e=this._errorMsg("This transaction is not signed");throw Error(e)}let e=this._getMessageToSign();return e_(ab.yH.encode(e))}getSenderPublicKey(){let e=this.getMessageToVerifySignature(),{v:t,r:a,s:r}=this;this._validateHighS();try{return ecrecover(e,t,bigIntToUnpaddedUint8Array(a),bigIntToUnpaddedUint8Array(r),this.supports(V.EIP155ReplayProtection)?this.common.chainId():void 0)}catch(t){let e=this._errorMsg("Invalid Signature");throw Error(e)}}_processSignature(e,t,a){let r=e;this.supports(V.EIP155ReplayProtection)&&(r+=this.common.chainId()*BigInt(2)+BigInt(8));let i=Object.assign(Object.assign({},this.txOptions),{common:this.common});return Transaction.fromTxData({nonce:this.nonce,gasPrice:this.gasPrice,gasLimit:this.gasLimit,to:this.to,value:this.value,data:this.data,v:r,r:uint8ArrayToBigInt(t),s:uint8ArrayToBigInt(a)},i)}toJSON(){return{nonce:bigIntToHex(this.nonce),gasPrice:bigIntToHex(this.gasPrice),gasLimit:bigIntToHex(this.gasLimit),to:void 0!==this.to?this.to.toString():void 0,value:bigIntToHex(this.value),data:converters_bytesToHex(this.data),v:void 0!==this.v?bigIntToHex(this.v):void 0,r:void 0!==this.r?bigIntToHex(this.r):void 0,s:void 0!==this.s?bigIntToHex(this.s):void 0}}_validateTxV(e,t){let a;let r=void 0!==e?Number(e):void 0;if(void 0!==r&&r<37&&27!==r&&28!==r)throw Error(`Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${r}`);if(void 0!==r&&0!==r&&(!t||t.gteHardfork("spuriousDragon"))&&27!==r&&28!==r){if(t){if(!meetsEIP155(BigInt(r),t.chainId()))throw Error(`Incompatible EIP155-based V ${r} and chain id ${t.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`)}else a=BigInt(r-((r-35)%2==0?35:36))/BigInt(2)}return this._getCommon(t,a)}errorStr(){return this._getSharedErrorPostfix()+` gasPrice=${this.gasPrice}`}_errorMsg(e){return`${e} (${this.errorStr()})`}};let aC=new Map;let transactionFactory_TransactionFactory=class transactionFactory_TransactionFactory{constructor(){}static typeToInt(e){return Number(uint8ArrayToBigInt(toUint8Array(e)))}static registerTransactionType(e,t){let a=transactionFactory_TransactionFactory.typeToInt(e);aC.set(a,t)}static fromTxData(e,t={}){if(!("type"in e)||void 0===e.type)return Transaction.fromTxData(e,t);let a=transactionFactory_TransactionFactory.typeToInt(e.type);if(0===a)return Transaction.fromTxData(e,t);if(1===a)return AccessListEIP2930Transaction.fromTxData(e,t);if(2===a)return FeeMarketEIP1559Transaction.fromTxData(e,t);let r=aC.get(a);if(null==r?void 0:r.fromTxData)return r.fromTxData(e,t);throw Error(`Tx instantiation with type ${a} not supported`)}static fromSerializedData(e,t={}){if(!(e[0]<=127))return Transaction.fromSerializedTx(e,t);switch(e[0]){case 1:return AccessListEIP2930Transaction.fromSerializedTx(e,t);case 2:return FeeMarketEIP1559Transaction.fromSerializedTx(e,t);default:{let a=aC.get(Number(e[0]));if(null==a?void 0:a.fromSerializedTx)return a.fromSerializedTx(e,t);throw Error(`TypedTransaction with ID ${e[0]} unknown`)}}}static fromBlockBodyData(e,t={}){if(e instanceof Uint8Array)return this.fromSerializedData(e,t);if(Array.isArray(e))return Transaction.fromValuesArray(e,t);throw Error("Cannot decode transaction: unknown type input")}};var account_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let parseAndValidatePrivateKey=(e,t)=>{let a;if(!t&&"string"==typeof e&&string_isHexStrict(e)&&66!==e.length)throw new PrivateKeyLengthError;try{a=e instanceof Uint8Array?e:bytesToUint8Array(e)}catch(e){throw new InvalidPrivateKeyError}if(!t&&32!==a.byteLength)throw new PrivateKeyLengthError;return a},hashMessage=e=>{let t=string_isHexStrict(e)?e:converters_utf8ToHex(e),a=converters_hexToBytes(t),r=converters_hexToBytes(tg(`\x19Ethereum Signed Message:
${a.byteLength}`)),i=uint8ArrayConcat(r,a);return hash_sha3Raw(i)},sign=(e,t)=>{let a=parseAndValidatePrivateKey(t),r=hashMessage(e),i=au.sign(r.substring(2),a),s=i.toCompactRawBytes(),n=i.r.toString(16).padStart(64,"0"),o=i.s.toString(16).padStart(64,"0"),d=i.recovery+27;return{message:e,messageHash:r,v:converters_numberToHex(d),r:`0x${n}`,s:`0x${o}`,signature:`${converters_bytesToHex(s)}${d.toString(16)}`}},signTransaction=(e,t)=>account_awaiter(void 0,void 0,void 0,function*(){let a=e.sign(converters_hexToBytes(t));if(object_isNullish(a.v)||object_isNullish(a.r)||object_isNullish(a.s))throw new TransactionSigningError("Signer Error");let r=a.validate(!0);if(r.length>0){let e="Signer Error ";for(let t of r)e+=`${e} ${t}.`;throw new TransactionSigningError(e)}let i=converters_bytesToHex(a.serialize()),s=hash_sha3Raw(i);return{messageHash:converters_bytesToHex(a.getMessageToSign(!0)),v:`0x${a.v.toString(16)}`,r:`0x${a.r.toString(16).padStart(64,"0")}`,s:`0x${a.s.toString(16).padStart(64,"0")}`,rawTransaction:i,transactionHash:converters_bytesToHex(s)}}),recoverTransaction=e=>{if(object_isNullish(e))throw new UndefinedRawTransactionError;let t=transactionFactory_TransactionFactory.fromSerializedData(converters_hexToBytes(e));return converters_toChecksumAddress(t.getSenderAddress().toString())},recover=(e,t,a,r,i)=>{if("object"==typeof e){let t=`${e.r}${e.s.slice(2)}${e.v.slice(2)}`;return recover(e.messageHash,t,a)}if("string"==typeof t&&"string"==typeof a&&!object_isNullish(r)){let s=`${a}${r.slice(2)}${t.slice(2)}`;return recover(e,s,i)}if(object_isNullish(t))throw new InvalidSignatureError("signature string undefined");let s=a?e:hashMessage(e),n=parseInt(t.substring(130),16);n>26&&(n-=27);let o=au.Signature.fromCompact(t.slice(2,130)).addRecoveryBit(n).recoverPublicKey(s.replace("0x","")).toRawBytes(!1),d=hash_sha3Raw(o.subarray(1)),p=converters_toChecksumAddress(`0x${d.slice(-40)}`);return p},privateKeyToAddress=e=>{let t=parseAndValidatePrivateKey(e),a=au.getPublicKey(t,!1),r=hash_sha3Raw(a.slice(1)),i=r.slice(-40);return converters_toChecksumAddress(`0x${i}`)},privateKeyToPublicKey=(e,t)=>{let a=parseAndValidatePrivateKey(e);return`0x${converters_bytesToHex(au.getPublicKey(a,t)).slice(4)}`},account_encrypt=(e,t,a)=>account_awaiter(void 0,void 0,void 0,function*(){var r,i,s,n,o,d,p;let l,m,c,u;let f=parseAndValidatePrivateKey(e);if(l=(null==a?void 0:a.salt)?"string"==typeof a.salt?converters_hexToBytes(a.salt):a.salt:random_randomBytes(32),!(isString(t)||t instanceof Uint8Array))throw new InvalidPasswordError;let v="string"==typeof t?converters_hexToBytes(converters_utf8ToHex(t)):t;if(null==a?void 0:a.iv){if(16!==(m="string"==typeof a.iv?converters_hexToBytes(a.iv):a.iv).length)throw new IVLengthError}else m=random_randomBytes(16);let g=null!==(r=null==a?void 0:a.kdf)&&void 0!==r?r:"scrypt";if("pbkdf2"===g){if((u={dklen:null!==(i=null==a?void 0:a.dklen)&&void 0!==i?i:32,salt:converters_bytesToHex(l).replace("0x",""),c:null!==(s=null==a?void 0:a.c)&&void 0!==s?s:262144,prf:"hmac-sha256"}).c<1e3)throw new PBKDF2IterationsError;c=pbkdf2Sync(v,l,u.c,u.dklen,"sha256")}else if("scrypt"===g)u={n:null!==(n=null==a?void 0:a.n)&&void 0!==n?n:8192,r:null!==(o=null==a?void 0:a.r)&&void 0!==o?o:8,p:null!==(d=null==a?void 0:a.p)&&void 0!==d?d:1,dklen:null!==(p=null==a?void 0:a.dklen)&&void 0!==p?p:32,salt:converters_bytesToHex(l).replace("0x","")},c=scryptSync(v,l,u.n,u.p,u.r,u.dklen);else throw new InvalidKdfError;let y=yield encrypt(f,c.slice(0,16),m,"aes-128-ctr"),b=converters_bytesToHex(y).slice(2),_=hash_sha3Raw(uint8ArrayConcat(c.slice(16,32),y)).replace("0x","");return{version:3,id:uuidV4(),address:privateKeyToAddress(f).toLowerCase().replace("0x",""),crypto:{ciphertext:b,cipherparams:{iv:converters_bytesToHex(m).replace("0x","")},cipher:"aes-128-ctr",kdf:g,kdfparams:u,mac:_}}}),privateKeyToAccount=(e,t)=>{let a=parseAndValidatePrivateKey(e,t);return{address:privateKeyToAddress(a),privateKey:converters_bytesToHex(a),signTransaction:e=>{throw new TransactionSigningError("Do not have network access to sign the transaction")},sign:e=>sign("string"==typeof e?e:JSON.stringify(e),a),encrypt:(e,t)=>account_awaiter(void 0,void 0,void 0,function*(){return account_encrypt(a,e,t)})}},create=()=>{let e=au.utils.randomPrivateKey();return privateKeyToAccount(`${converters_bytesToHex(e)}`)},account_decrypt=(e,t,a)=>account_awaiter(void 0,void 0,void 0,function*(){let r;let i="object"==typeof e?e:JSON.parse(a?e.toLowerCase():e);if(tc.validateJSONSchema(ay,i),3!==i.version)throw new KeyStoreVersionError;let s="string"==typeof t?converters_hexToBytes(converters_utf8ToHex(t)):t;if(tc.validate(["bytes"],[s]),"scrypt"===i.crypto.kdf){let e=i.crypto.kdfparams,t="string"==typeof e.salt?converters_hexToBytes(e.salt):e.salt;r=scryptSync(s,t,e.n,e.p,e.r,e.dklen)}else if("pbkdf2"===i.crypto.kdf){let e=i.crypto.kdfparams,t="string"==typeof e.salt?converters_hexToBytes(e.salt):e.salt;r=pbkdf2Sync(s,t,e.c,e.dklen,"sha256")}else throw new InvalidKdfError;let n=converters_hexToBytes(i.crypto.ciphertext),o=hash_sha3Raw(uint8ArrayConcat(r.slice(16,32),n)).replace("0x","");if(o!==i.crypto.mac)throw new KeyDerivationError;let d=yield decrypt(converters_hexToBytes(i.crypto.ciphertext),r.slice(0,16),converters_hexToBytes(i.crypto.cipherparams.iv));return privateKeyToAccount(d)});var web3_batch_request_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let Web3BatchRequest=class Web3BatchRequest{constructor(e){this._requestManager=e,this._requests=new Map}get requests(){return[...this._requests.values()].map(e=>e.payload)}add(e){let t=toPayload(e),a=new Web3DeferredPromise;return this._requests.set(t.id,{payload:t,promise:a}),a}execute(e){var t;return web3_batch_request_awaiter(this,void 0,void 0,function*(){if(0===this.requests.length)return Promise.resolve([]);let a=new Web3DeferredPromise({timeout:null!==(t=null==e?void 0:e.timeout)&&void 0!==t?t:1e3,eagerStart:!0,timeoutMessage:"Batch request timeout"});return this._processBatchRequest(a).catch(e=>a.reject(e)),a.catch(e=>{e instanceof OperationTimeoutError&&this._abortAllRequests("Batch request timeout"),a.reject(e)}),a})}_processBatchRequest(e){var t,a;return web3_batch_request_awaiter(this,void 0,void 0,function*(){let r=yield this._requestManager.sendBatch([...this._requests.values()].map(e=>e.payload));if(r.length!==this._requests.size)throw this._abortAllRequests("Invalid batch response"),new ResponseError(r,`Batch request size mismatch the results size. Requests: ${this._requests.size}, Responses: ${r.length}`);let i=this.requests.map(e=>e.id).map(Number).sort((e,t)=>e-t),s=r.map(e=>e.id).map(Number).sort((e,t)=>e-t);if(JSON.stringify(i)!==JSON.stringify(s))throw this._abortAllRequests("Invalid batch response"),new ResponseError(r,`Batch request mismatch the results. Requests: [${i.join()}], Responses: [${s.join()}]`);for(let e of r)isResponseWithResult(e)?null===(t=this._requests.get(e.id))||void 0===t||t.promise.resolve(e.result):json_rpc_isResponseWithError(e)&&(null===(a=this._requests.get(e.id))||void 0===a||a.promise.reject(e.error));e.resolve(r)})}_abortAllRequests(e){for(let{promise:t}of this._requests.values())t.reject(new OperationAbortError(e))}};let Web3Context=class Web3Context extends Web3Config{constructor(e){var t;if(super(),this.providers=Web3RequestManager.providers,tB(e)||"string"==typeof e&&""!==e.trim()||isSupportedProvider(e)){this._requestManager=new Web3RequestManager(e),this._subscriptionManager=new Web3SubscriptionManager(this._requestManager,{});return}let{config:a,provider:r,requestManager:i,subscriptionManager:s,registeredSubscriptions:n,accountProvider:o,wallet:d}=e;this.setConfig(null!=a?a:{}),this._requestManager=null!=i?i:new Web3RequestManager(r,null===(t=null==a?void 0:a.enableExperimentalFeatures)||void 0===t?void 0:t.useSubscriptionWhenCheckingBlockTimeout),s?this._subscriptionManager=s:this._subscriptionManager=new Web3SubscriptionManager(this.requestManager,null!=n?n:{}),o&&(this._accountProvider=o),d&&(this._wallet=d)}get requestManager(){return this._requestManager}get subscriptionManager(){return this._subscriptionManager}get wallet(){return this._wallet}get accountProvider(){return this._accountProvider}static fromContextObject(...e){return new this(...e.reverse())}getContextObject(){var e;return{config:this.config,provider:this.provider,requestManager:this.requestManager,subscriptionManager:this.subscriptionManager,registeredSubscriptions:null===(e=this.subscriptionManager)||void 0===e?void 0:e.registeredSubscriptions,providers:this.providers,wallet:this.wallet,accountProvider:this.accountProvider}}use(e,...t){let a=new e(...[...t,this.getContextObject()]);return this.on(P.CONFIG_CHANGE,e=>{a.setConfig({[e.name]:e.newValue})}),a}link(e){this.setConfig(e.config),this._requestManager=e.requestManager,this.provider=e.provider,this._subscriptionManager=e.subscriptionManager,this._wallet=e.wallet,this._accountProvider=e._accountProvider,e.on(P.CONFIG_CHANGE,e=>{this.setConfig({[e.name]:e.newValue})})}registerPlugin(e){if(void 0!==this[e.pluginNamespace])throw new ExistingPluginNamespaceError(e.pluginNamespace);let t={[e.pluginNamespace]:e};t[e.pluginNamespace].link(this),Object.assign(this,t)}get provider(){return this.currentProvider}set provider(e){this.requestManager.setProvider(e)}get currentProvider(){return this.requestManager.provider}set currentProvider(e){this.requestManager.setProvider(e)}get givenProvider(){return Web3Context.givenProvider}setProvider(e){return this.provider=e,!0}get BatchRequest(){return Web3BatchRequest.bind(void 0,this._requestManager)}extend(e){var t;return e.property&&!this[e.property]&&(this[e.property]={}),null===(t=e.methods)||void 0===t||t.forEach(t=>{let method=(...e)=>{var a,r,i,s;return a=this,r=void 0,i=void 0,s=function*(){return this.requestManager.send({method:t.call,params:e})},new(i||(i=Promise))(function(e,t){function fulfilled(e){try{step(s.next(e))}catch(e){t(e)}}function rejected(e){try{step(s.throw(e))}catch(e){t(e)}}function step(t){var a;t.done?e(t.value):((a=t.value)instanceof i?a:new i(function(e){e(a)})).then(fulfilled,rejected)}step((s=s.apply(a,r||[])).next())})};e.property?this[e.property][t.name]=method:this[t.name]=method}),this}};Web3Context.providers=Web3RequestManager.providers;let iban_Iban=class iban_Iban{constructor(e){if(this.toAddress=()=>{if(this.isDirect()){let e=this._iban.slice(4),t=iban_Iban._parseInt(e,36),a=tD(t,40);return converters_toChecksumAddress(a)}throw Error("Iban is indirect and cannot be converted. Must be length of 34 or 35")},iban_Iban.isIndirect(e)||iban_Iban.isDirect(e))this._iban=e;else throw Error("Invalid IBAN was provided")}static isDirect(e){return 34===e.length||35===e.length}isDirect(){return iban_Iban.isDirect(this._iban)}static isIndirect(e){return 20===e.length}isIndirect(){return iban_Iban.isIndirect(this._iban)}static isValid(e){return/^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(e)&&1===iban_Iban._mod9710(iban_Iban._iso13616Prepare(e))}isValid(){return iban_Iban.isValid(this._iban)}static fromBban(e){let t=this._mod9710(this._iso13616Prepare(`XE00${e}`)),a=`0${(98-t).toString()}`.slice(-2);return new iban_Iban(`XE${a}${e}`)}static createIndirect(e){return iban_Iban.fromBban(`ETH${e.institution}${e.identifier}`)}static fromAddress(e){if(!address_isAddress(e))throw new InvalidAddressError(e);let t=BigInt(converters_hexToNumber(e)),a=t.toString(36),r=tD(a,15);return iban_Iban.fromBban(r.toUpperCase())}static toIban(e){return iban_Iban.fromAddress(e).toString()}client(){return this.isIndirect()?this._iban.slice(11):""}checksum(){return this._iban.slice(2,4)}institution(){return this.isIndirect()?this._iban.slice(7,11):""}toString(){return this._iban}};iban_Iban._iso13616Prepare=e=>{let t=e.toUpperCase(),a=`${t.slice(4)}${t.slice(0,4)}`;return a.split("").map(e=>{let t=e.charCodeAt(0);return t>=65&&t<=90?t-65+10:e}).join("")},iban_Iban._parseInt=(e,t)=>[...e].reduce((e,a)=>BigInt(parseInt(a,t))+BigInt(t)*e,BigInt(0)),iban_Iban._mod9710=e=>{let t,a=e;for(;a.length>2;)t=a.slice(0,9),a=`${(parseInt(t,10)%97).toString()}${a.slice(t.length)}`;return parseInt(a,10)%97},iban_Iban.toAddress=e=>{let t=new iban_Iban(e);return t.toAddress()};var web3_promi_event_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let Web3PromiEvent=class Web3PromiEvent extends Web3EventEmitter{constructor(e){super(),this[F]="Promise",this._promise=new Promise(e)}then(e,t){return web3_promi_event_awaiter(this,void 0,void 0,function*(){return this._promise.then(e,t)})}catch(e){return web3_promi_event_awaiter(this,void 0,void 0,function*(){return this._promise.catch(e)})}finally(e){return web3_promi_event_awaiter(this,void 0,void 0,function*(){return this._promise.finally(e)})}on(e,t){return super.on(e,t),this}once(e,t){return super.once(e,t),this}};F=Symbol.toStringTag,a(56041);var eth_rpc_methods_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};function getSyncing(e){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return e.send({method:"eth_syncing",params:[]})})}function sendRawTransaction(e,t){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["hex"],[t]),e.send({method:"eth_sendRawTransaction",params:[t]})})}function getBlockByNumber(e,t,a){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["blockNumberOrTag","bool"],[t,a]),e.send({method:"eth_getBlockByNumber",params:[t,a]})})}var net_rpc_methods_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})},personal_rpc_methods_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let personal_rpc_methods_getAccounts=e=>personal_rpc_methods_awaiter(void 0,void 0,void 0,function*(){return e.send({method:"personal_listAccounts",params:[]})}),newAccount=(e,t)=>personal_rpc_methods_awaiter(void 0,void 0,void 0,function*(){return e.send({method:"personal_newAccount",params:[t]})}),unlockAccount=(e,t,a,r)=>personal_rpc_methods_awaiter(void 0,void 0,void 0,function*(){return e.send({method:"personal_unlockAccount",params:[t,a,r]})}),lockAccount=(e,t)=>personal_rpc_methods_awaiter(void 0,void 0,void 0,function*(){return e.send({method:"personal_lockAccount",params:[t]})}),importRawKey=(e,t,a)=>personal_rpc_methods_awaiter(void 0,void 0,void 0,function*(){return e.send({method:"personal_importRawKey",params:[t,a]})}),personal_rpc_methods_sendTransaction=(e,t,a)=>personal_rpc_methods_awaiter(void 0,void 0,void 0,function*(){return e.send({method:"personal_sendTransaction",params:[t,a]})}),personal_rpc_methods_signTransaction=(e,t,a)=>personal_rpc_methods_awaiter(void 0,void 0,void 0,function*(){return e.send({method:"personal_signTransaction",params:[t,a]})}),personal_rpc_methods_sign=(e,t,a,r)=>personal_rpc_methods_awaiter(void 0,void 0,void 0,function*(){return e.send({method:"personal_sign",params:[t,a,r]})}),ecRecover=(e,t,a)=>personal_rpc_methods_awaiter(void 0,void 0,void 0,function*(){return e.send({method:"personal_ecRecover",params:[t,a]})}),aN={type:"object",properties:{accessList:{type:"null"},maxFeePerGas:{type:"null"},maxPriorityFeePerGas:{type:"null"}}},aB={type:"object",properties:{maxFeePerGas:{type:"null"},maxPriorityFeePerGas:{type:"null"}}},aP={type:"object",properties:{gasPrice:{type:"null"}}},validateTxTypeAndHandleErrors=(e,t,a)=>{try{tc.validateJSONSchema(e,t)}catch(e){if(e instanceof Web3ValidatorError)throw new InvalidPropertiesForTransactionTypeError(e.errors,a);throw e}},defaultTransactionTypeParser=e=>{var t,a;if(!object_isNullish(e.type)){let t;switch(e.type){case"0x0":t=aN;break;case"0x1":t=aB;break;case"0x2":t=aP;break;default:return format({format:"uint"},e.type,td)}return validateTxTypeAndHandleErrors(t,e,e.type),format({format:"uint"},e.type,td)}if(!object_isNullish(e.maxFeePerGas)||!object_isNullish(e.maxPriorityFeePerGas))return validateTxTypeAndHandleErrors(aP,e,"0x2"),"0x2";if(!object_isNullish(e.accessList))return validateTxTypeAndHandleErrors(aB,e,"0x1"),"0x1";let r=null!==(t=e.hardfork)&&void 0!==t?t:null===(a=e.common)||void 0===a?void 0:a.hardfork;if(!object_isNullish(r)){let t=Object.keys(N).indexOf(r);if(t>=Object.keys(N).indexOf("london"))return object_isNullish(e.gasPrice)?"0x2":"0x0";if(t===Object.keys(N).indexOf("berlin"))return"0x0"}if(!object_isNullish(e.gasPrice))return validateTxTypeAndHandleErrors(aN,e,"0x0"),"0x0"},detectTransactionType=(e,t)=>{var a;return(null!==(a=null==t?void 0:t.transactionTypeParser)&&void 0!==a?a:defaultTransactionTypeParser)(e)},detectRawTransactionType=e=>e[0]>127?"0x0":converters_toHex(e[0]),aD={type:"array",items:Object.assign({},{type:"object",properties:{address:{format:"address"},storageKeys:{type:"array",items:{format:"bytes32"}}}})},aO={type:"object",properties:{accessList:Object.assign({},aD),gasUsed:{type:"string"}}},aR={type:"string",enum:["goerli","kovan","mainnet","rinkeby","ropsten","sepolia"]},aM={type:"string",enum:["arrowGlacier","berlin","byzantium","chainstart","constantinople","dao","homestead","istanbul","london","merge","muirGlacier","petersburg","shanghai","spuriousDragon","tangerineWhistle"]},aL={type:"object",properties:{from:{format:"address"},to:{oneOf:[{format:"address"},{type:"null"}]},value:{format:"uint"},gas:{format:"uint"},gasPrice:{format:"uint"},effectiveGasPrice:{format:"uint"},type:{format:"uint"},maxFeePerGas:{format:"uint"},maxPriorityFeePerGas:{format:"uint"},accessList:Object.assign({},aD),data:{format:"bytes"},input:{format:"bytes"},nonce:{format:"uint"},chain:Object.assign({},aR),hardfork:Object.assign({},aM),chainId:{format:"uint"},networkId:{format:"uint"},common:{type:"object",properties:{customChain:Object.assign({},{type:"object",properties:{name:{format:"string"},networkId:{format:"uint"},chainId:{format:"uint"}}}),baseChain:Object.assign({},aR),hardfork:Object.assign({},aM)}},gasLimit:{format:"uint"},v:{format:"uint"},r:{format:"bytes32"},s:{format:"bytes32"}}},aj={type:"object",properties:Object.assign(Object.assign({},aL.properties),{blockHash:{format:"bytes32"},blockNumber:{format:"uint"},hash:{format:"bytes32"},transactionIndex:{format:"uint"},from:{format:"address"},to:{oneOf:[{format:"address"},{type:"null"}]},value:{format:"uint"},gas:{format:"uint"},gasPrice:{format:"uint"},effectiveGasPrice:{format:"uint"},type:{format:"uint"},maxFeePerGas:{format:"uint"},maxPriorityFeePerGas:{format:"uint"},accessList:Object.assign({},aD),data:{format:"bytes"},input:{format:"bytes"},nonce:{format:"uint"},gasLimit:{format:"uint"},v:{format:"uint"},r:{format:"bytes32"},s:{format:"bytes32"}})},aH={type:"object",properties:{parentHash:{format:"bytes32"},sha3Uncles:{format:"bytes32"},miner:{format:"bytes"},stateRoot:{format:"bytes32"},transactionsRoot:{format:"bytes32"},receiptsRoot:{format:"bytes32"},logsBloom:{format:"bytes256"},difficulty:{format:"uint"},number:{format:"uint"},gasLimit:{format:"uint"},gasUsed:{format:"uint"},timestamp:{format:"uint"},extraData:{format:"bytes"},mixHash:{format:"bytes32"},nonce:{format:"uint"},totalDifficulty:{format:"uint"},baseFeePerGas:{format:"uint"},size:{format:"uint"},transactions:{oneOf:[{type:"array",items:Object.assign({},aj)},{type:"array",items:{format:"bytes32"}}]},uncles:{type:"array",items:{format:"bytes32"}},hash:{format:"bytes32"}}},aV={type:"object",properties:{author:{format:"bytes32"},hash:{format:"bytes32"},parentHash:{format:"bytes32"},receiptsRoot:{format:"bytes32"},miner:{format:"bytes"},stateRoot:{format:"bytes32"},transactionsRoot:{format:"bytes32"},withdrawalsRoot:{format:"bytes32"},logsBloom:{format:"bytes256"},difficulty:{format:"uint"},totalDifficulty:{format:"uint"},number:{format:"uint"},gasLimit:{format:"uint"},gasUsed:{format:"uint"},timestamp:{format:"uint"},extraData:{format:"bytes"},nonce:{format:"uint"},sha3Uncles:{format:"bytes32"},size:{format:"uint"},baseFeePerGas:{format:"uint"},excessDataGas:{format:"uint"},mixHash:{format:"bytes32"},transactions:{type:"array",items:{format:"bytes32"}},uncles:{type:"array",items:{format:"bytes32"}},withdrawals:{type:"array",items:Object.assign({},{type:"object",properties:{index:{format:"uint"},validatorIndex:{format:"uint"},address:{format:"address"},amount:{format:"uint"}}})}}},aF={type:"object",properties:{removed:{format:"bool"},logIndex:{format:"uint"},transactionIndex:{format:"uint"},transactionHash:{format:"bytes32"},blockHash:{format:"bytes32"},blockNumber:{format:"uint"},address:{format:"address"},data:{format:"bytes"},topics:{type:"array",items:{format:"bytes32"}}}},aU={type:"object",properties:{startingBlock:{format:"string"},currentBlock:{format:"string"},highestBlock:{format:"string"},knownStates:{format:"string"},pulledStates:{format:"string"}}},aZ={type:"object",properties:{transactionHash:{format:"bytes32"},transactionIndex:{format:"uint"},blockHash:{format:"bytes32"},blockNumber:{format:"uint"},from:{format:"address"},to:{format:"address"},cumulativeGasUsed:{format:"uint"},gasUsed:{format:"uint"},effectiveGasPrice:{format:"uint"},contractAddress:{format:"address"},logs:{type:"array",items:Object.assign({},aF)},logsBloom:{format:"bytes"},root:{format:"bytes"},status:{format:"uint"},type:{format:"uint"}}},aG={type:"object",properties:{messageHash:{format:"bytes"},r:{format:"bytes32"},s:{format:"bytes32"},v:{format:"bytes"},message:{format:"bytes"},signature:{format:"bytes"}}},aW={type:"object",properties:{oldestBlock:{format:"uint"},baseFeePerGas:{type:"array",items:{format:"uint"}},reward:{type:"array",items:{type:"array",items:{format:"uint"}}},gasUsedRatio:{type:"array",items:{type:"number"}}}},aq={type:"object",properties:{balance:{format:"uint"},codeHash:{format:"bytes32"},nonce:{format:"uint"},storageHash:{format:"bytes32"},accountProof:{type:"array",items:{format:"bytes32"}},storageProof:{type:"array",items:Object.assign({},{type:"object",properties:{key:{format:"bytes32"},value:{format:"uint"},proof:{type:"array",items:{format:"bytes32"}}}})}}};function formatTransaction(e,t=to,a={transactionSchema:aj,fillInputAndData:!1}){var r,i;let s=objects_mergeDeep({},e);if(object_isNullish(null==e?void 0:e.common)||(s.common=Object.assign({},e.common),object_isNullish(null===(r=e.common)||void 0===r?void 0:r.customChain)||(s.common.customChain=Object.assign({},e.common.customChain))),!object_isNullish((s=format(null!==(i=a.transactionSchema)&&void 0!==i?i:aj,s,t)).data)&&!object_isNullish(s.input)&&converters_toHex(s.data)!==converters_toHex(s.input))throw new TransactionDataAndInputError({data:converters_bytesToHex(s.data),input:converters_bytesToHex(s.input)});return a.fillInputAndData&&(object_isNullish(s.data)?object_isNullish(s.input)||(s.data=s.input):s.input=s.data),object_isNullish(s.gasLimit)||(s.gas=s.gasLimit,delete s.gasLimit),s}var rpc_method_wrappers_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};function rpc_method_wrappers_getId(e,t){return rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let a=yield function(e){return net_rpc_methods_awaiter(this,void 0,void 0,function*(){return e.send({method:"net_version",params:[]})})}(e.requestManager);return format({format:"uint"},a,t)})}let rpc_method_wrappers_isListening=e=>rpc_method_wrappers_awaiter(void 0,void 0,void 0,function*(){return function(e){return net_rpc_methods_awaiter(this,void 0,void 0,function*(){return e.send({method:"net_listening",params:[]})})}(e.requestManager)});var net_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let net_Net=class net_Net extends Web3Context{getId(e=to){return net_awaiter(this,void 0,void 0,function*(){return rpc_method_wrappers_getId(this,e)})}getPeerCount(e=to){return net_awaiter(this,void 0,void 0,function*(){return function(e,t){return rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let a=yield function(e){return net_rpc_methods_awaiter(this,void 0,void 0,function*(){return e.send({method:"net_peerCount",params:[]})})}(e.requestManager);return format({format:"uint"},a,t)})}(this,e)})}isListening(){return net_awaiter(this,void 0,void 0,function*(){return rpc_method_wrappers_isListening(this)})}};let az="ALLEVENTS",aQ={name:az,signature:"",type:"event",inputs:[]},aK={bytes:k.HEX,number:I.NUMBER};var get_transaction_gas_pricing_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};function getTransactionGasPricing(e,t,a){return get_transaction_gas_pricing_awaiter(this,void 0,void 0,function*(){let r=getTransactionType(e,t);if(!object_isNullish(r)){if(r.startsWith("-")||0>Number(r)||Number(r)>127)throw new UnsupportedTransactionTypeError(r);if(object_isNullish(e.gasPrice)&&("0x0"===r||"0x1"===r))return{gasPrice:yield rpc_method_wrappers_getGasPrice(t,a),maxPriorityFeePerGas:void 0,maxFeePerGas:void 0};if("0x2"===r)return Object.assign({gasPrice:void 0},(yield function(e,t,a){var r,i,s;return get_transaction_gas_pricing_awaiter(this,void 0,void 0,function*(){let n=yield getBlock(t,t.defaultBlock,!1,a);if(object_isNullish(n.baseFeePerGas))throw new Eip1559NotSupportedError;if(!object_isNullish(e.gasPrice)){let t=format({format:"uint"},e.gasPrice,a);return{maxPriorityFeePerGas:t,maxFeePerGas:t}}return{maxPriorityFeePerGas:format({format:"uint"},null!==(r=e.maxPriorityFeePerGas)&&void 0!==r?r:t.defaultMaxPriorityFeePerGas,a),maxFeePerGas:format({format:"uint"},null!==(i=e.maxFeePerGas)&&void 0!==i?i:BigInt(n.baseFeePerGas)*BigInt(2)+BigInt(null!==(s=e.maxPriorityFeePerGas)&&void 0!==s?s:t.defaultMaxPriorityFeePerGas),a)}})}(e,t,a)))}})}var transaction_builder_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let getTransactionFromOrToAttr=(e,t,a,r)=>{if(void 0!==a&&e in a&&void 0!==a[e]){if("string"==typeof a[e]&&address_isAddress(a[e]))return a[e];if(!string_isHexStrict(a[e])&&isNumber(a[e])){if(t.wallet){let r=t.wallet.get(format({format:"uint"},a[e],aK));if(!object_isNullish(r))return r.address}throw new LocalWalletNotAvailableError}throw"from"===e?new transaction_errors_InvalidTransactionWithSender(a.from):new InvalidTransactionWithReceiver(a.to)}if("from"===e){if(!object_isNullish(r))return privateKeyToAddress(r);if(!object_isNullish(t.defaultAccount))return t.defaultAccount}},getTransactionNonce=(e,t,a=to)=>transaction_builder_awaiter(void 0,void 0,void 0,function*(){if(object_isNullish(t))throw new UnableToPopulateNonceError;return rpc_method_wrappers_getTransactionCount(e,t,e.defaultBlock,a)}),getTransactionType=(e,t)=>{let a=detectTransactionType(e,t);return object_isNullish(a)?object_isNullish(t.defaultTransactionType)?void 0:format({format:"uint"},t.defaultTransactionType,td):a},transactionBuilder=e=>transaction_builder_awaiter(void 0,void 0,void 0,function*(){var t;return(null!==(t=e.web3Context.transactionBuilder)&&void 0!==t?t:function(e){var t,a;return transaction_builder_awaiter(this,void 0,void 0,function*(){let r=format(aL,e.transaction,to);if(object_isNullish(r.from)&&(r.from=getTransactionFromOrToAttr("from",e.web3Context,void 0,e.privateKey)),object_isNullish(r.nonce)&&(r.nonce=yield getTransactionNonce(e.web3Context,r.from,td)),object_isNullish(r.value)&&(r.value="0x0"),object_isNullish(r.data))object_isNullish(r.input)?r.input="0x":r.input.startsWith("0x")||(r.input=`0x${r.input}`);else{if(!object_isNullish(r.input)&&r.data!==r.input)throw new TransactionDataAndInputError({data:converters_bytesToHex(r.data),input:converters_bytesToHex(r.input)});r.data.startsWith("0x")||(r.data=`0x${r.data}`)}if(object_isNullish(r.common)){if(e.web3Context.defaultCommon){let t=e.web3Context.defaultCommon,a=t.customChain.chainId,i=t.customChain.networkId,s=t.customChain.name;r.common=Object.assign(Object.assign({},t),{customChain:{chainId:a,networkId:i,name:s}})}object_isNullish(r.chain)&&(r.chain=e.web3Context.defaultChain),object_isNullish(r.hardfork)&&(r.hardfork=e.web3Context.defaultHardfork)}if(object_isNullish(r.chainId)&&object_isNullish(null===(t=r.common)||void 0===t?void 0:t.customChain.chainId)&&(r.chainId=yield rpc_method_wrappers_getChainId(e.web3Context,td)),object_isNullish(r.networkId)&&(r.networkId=null!==(a=e.web3Context.defaultNetworkId)&&void 0!==a?a:yield rpc_method_wrappers_getId(e.web3Context,td)),object_isNullish(r.gasLimit)&&!object_isNullish(r.gas)&&(r.gasLimit=r.gas),r.type=getTransactionType(r,e.web3Context),object_isNullish(r.accessList)&&("0x1"===r.type||"0x2"===r.type)&&(r.accessList=[]),e.fillGasPrice&&(r=Object.assign(Object.assign({},r),(yield getTransactionGasPricing(r,e.web3Context,td)))),object_isNullish(r.gas)&&object_isNullish(r.gasLimit)&&e.fillGasLimit){let t=yield rpc_method_wrappers_estimateGas(e.web3Context,r,"latest",td);r=Object.assign(Object.assign({},r),{gas:format({format:"uint"},t,td)})}return r})})(Object.assign(Object.assign({},e),{transaction:e.transaction}))});var reject_if_block_timeout_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};function resolveByPolling(e,t,a){let r=e.transactionPollingInterval,[i,s]=rejectIfConditionAtInterval(()=>reject_if_block_timeout_awaiter(this,void 0,void 0,function*(){let r;try{r=yield rpc_method_wrappers_getBlockNumber(e,aK)}catch(e){console.warn("An error happen while trying to get the block number",e);return}let i=r-t;if(i>=e.transactionBlockTimeout)return new TransactionBlockTimeoutError({starterBlockNumber:t,numberOfBlocks:i,transactionHash:a})}),r);return[s,{clean:()=>{clearInterval(i)}}]}function rejectIfBlockTimeout(e,t){var a,r;return reject_if_block_timeout_awaiter(this,void 0,void 0,function*(){let{provider:i}=e.requestManager,s=yield rpc_method_wrappers_getBlockNumber(e,aK);return(null===(r=(a=i).supportsSubscriptions)||void 0===r?void 0:r.call(a))&&e.enableExperimentalFeatures.useSubscriptionWhenCheckingBlockTimeout?yield function(e,t,a){var r;return reject_if_block_timeout_awaiter(this,void 0,void 0,function*(){let i,s,n=!0;function revertToPolling(r,i){i&&console.warn("error happened at subscription. So revert to polling...",i),s.clean(),n=!1;let[o,d]=resolveByPolling(e,t,a);s.clean=d.clean,o.catch(e=>r(e))}try{i=yield null===(r=e.subscriptionManager)||void 0===r?void 0:r.subscribe("newHeads"),s={clean:()=>{var t;i.id&&(null===(t=e.subscriptionManager)||void 0===t||t.removeSubscription(i).then(()=>{}).catch(()=>{}))}}}catch(r){return resolveByPolling(e,t,a)}let o=new Promise((r,s)=>{try{i.on("data",r=>{if(n=!1,!(null==r?void 0:r.number))return;let i=Number(BigInt(r.number)-BigInt(t));i>=e.transactionBlockTimeout&&s(new TransactionBlockTimeoutError({starterBlockNumber:t,numberOfBlocks:i,transactionHash:a}))}),i.on("error",e=>{revertToPolling(s,e)})}catch(e){revertToPolling(s,e)}setTimeout(()=>{n&&revertToPolling(s)},1e3*e.blockHeaderTimeout)});return[o,s]})}(e,s,t):resolveByPolling(e,s,t)})}function trySendTransaction(e,t,a){var r,i,s,n;return r=this,i=void 0,s=void 0,n=function*(){let[r,i]=rejectIfTimeout(e.transactionSendTimeout,new TransactionSendTimeoutError({numberOfSeconds:e.transactionSendTimeout/1e3,transactionHash:a})),[s,n]=yield rejectIfBlockTimeout(e,a);try{return yield Promise.race([t(),i,s])}finally{clearTimeout(r),n.clean()}},new(s||(s=Promise))(function(e,t){function fulfilled(e){try{step(n.next(e))}catch(e){t(e)}}function rejected(e){try{step(n.throw(e))}catch(e){t(e)}}function step(t){var a;t.done?e(t.value):((a=t.value)instanceof s?a:new s(function(e){e(a)})).then(fulfilled,rejected)}step((n=n.apply(r,i||[])).next())})}var wait_for_transaction_receipt_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};function waitForTransactionReceipt(e,t,a){var r;return wait_for_transaction_receipt_awaiter(this,void 0,void 0,function*(){let i=null!==(r=e.transactionReceiptPollingInterval)&&void 0!==r?r:e.transactionPollingInterval,[s,n]=pollTillDefinedAndReturnIntervalId(()=>wait_for_transaction_receipt_awaiter(this,void 0,void 0,function*(){try{return rpc_method_wrappers_getTransactionReceipt(e,t,a)}catch(e){console.warn("An error happen while trying to get the transaction receipt",e);return}}),i),[o,d]=rejectIfTimeout(e.transactionPollingTimeout,new TransactionPollingTimeoutError({numberOfSeconds:e.transactionPollingTimeout/1e3,transactionHash:t})),[p,l]=yield rejectIfBlockTimeout(e,t);try{return yield Promise.race([s,d,p])}finally{o&&clearTimeout(o),n&&clearInterval(n),l.clean()}})}let watchTransactionByPolling=({web3Context:e,transactionReceipt:t,transactionPromiEvent:a,returnFormat:r})=>{var i;let s=1,n=setInterval(()=>{!function(e,t,a,r){new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})}(void 0,void 0,void 0,function*(){s>=e.transactionConfirmationBlocks&&clearInterval(n);let i=yield getBlockByNumber(e.requestManager,converters_numberToHex(BigInt(t.blockNumber)+BigInt(s)),!1);(null==i?void 0:i.hash)&&(s+=1,a.emit("confirmation",{confirmations:format({format:"uint"},s,r),receipt:format(aZ,t,r),latestBlockHash:format({format:"bytes32"},i.hash,r)}))})},null!==(i=e.transactionReceiptPollingInterval)&&void 0!==i?i:e.transactionPollingInterval)};var watch_transaction_by_subscription_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let watchTransactionBySubscription=({web3Context:e,transactionReceipt:t,transactionPromiEvent:a,returnFormat:r})=>{let i,s=!0;setImmediate(()=>{var n;null===(n=e.subscriptionManager)||void 0===n||n.subscribe("newHeads").then(n=>{n.on("data",o=>watch_transaction_by_subscription_awaiter(void 0,void 0,void 0,function*(){var d;if(s=!1,!(null==o?void 0:o.number)||i===(null==o?void 0:o.parentHash))return;i=null==o?void 0:o.parentHash;let p=BigInt(o.number)-BigInt(t.blockNumber)+BigInt(1);a.emit("confirmation",{confirmations:format({format:"uint"},p,r),receipt:format(aZ,t,r),latestBlockHash:format({format:"bytes32"},o.parentHash,r)}),p>=e.transactionConfirmationBlocks&&(yield null===(d=e.subscriptionManager)||void 0===d?void 0:d.removeSubscription(n))})),n.on("error",()=>watch_transaction_by_subscription_awaiter(void 0,void 0,void 0,function*(){var i;yield null===(i=e.subscriptionManager)||void 0===i?void 0:i.removeSubscription(n),s=!1,watchTransactionByPolling({web3Context:e,transactionReceipt:t,transactionPromiEvent:a,returnFormat:r})}))}).catch(()=>{s=!1,watchTransactionByPolling({web3Context:e,transactionReceipt:t,transactionPromiEvent:a,returnFormat:r})})}),setTimeout(()=>{s&&watchTransactionByPolling({web3Context:e,transactionReceipt:t,transactionPromiEvent:a,returnFormat:r})},1e3*e.blockHeaderTimeout)},isAbiErrorFragment=e=>!tB(e)&&"object"==typeof e&&!tB(e.type)&&"error"===e.type,isAbiEventFragment=e=>!tB(e)&&"object"==typeof e&&!tB(e.type)&&"event"===e.type,isAbiFunctionFragment=e=>!tB(e)&&"object"==typeof e&&!tB(e.type)&&"function"===e.type,isAbiConstructorFragment=e=>!tB(e)&&"object"==typeof e&&!tB(e.type)&&"constructor"===e.type,isSimplifiedStructFormat=e=>"object"==typeof e&&void 0===e.components&&void 0===e.name,mapStructNameAndType=e=>e.includes("[]")?{type:"tuple[]",name:e.slice(0,-2)}:{type:"tuple",name:e},mapStructToCoderFormat=e=>{let t=[];for(let a of Object.keys(e)){let r=e[a];"object"==typeof r?t.push(Object.assign(Object.assign({},mapStructNameAndType(a)),{components:mapStructToCoderFormat(r)})):t.push({name:a,type:e[a]})}return t},flattenTypes=(e,t)=>{let a=[];return t.forEach(t=>{if("object"==typeof t.components){if(!t.type.startsWith("tuple"))throw new AbiError(`Invalid value given "${t.type}". Error: components found but type is not tuple.`);let r=t.type.indexOf("["),i=r>=0?t.type.substring(r):"",s=flattenTypes(e,t.components);Array.isArray(s)&&e?a.push(`tuple(${s.join(",")})${i}`):e?a.push(`(${s.join()})`):a.push(`(${s.join(",")})${i}`)}else a.push(t.type)}),a},jsonInterfaceMethodToString=e=>{var t,a,r,i;return isAbiErrorFragment(e)||isAbiEventFragment(e)||isAbiFunctionFragment(e)?(null===(t=e.name)||void 0===t?void 0:t.includes("("))?e.name:`${null!==(a=e.name)&&void 0!==a?a:""}(${flattenTypes(!1,null!==(r=e.inputs)&&void 0!==r?r:[]).join(",")})`:`(${flattenTypes(!1,null!==(i=e.inputs)&&void 0!==i?i:[]).join(",")})`},encodeErrorSignature=e=>{if("string"!=typeof e&&!isAbiErrorFragment(e))throw new AbiError("Invalid parameter value in encodeErrorSignature");return hash_sha3Raw(e&&("function"==typeof e||"object"==typeof e)?jsonInterfaceMethodToString(e):e)},encodeEventSignature=e=>{if("string"!=typeof e&&!isAbiEventFragment(e))throw new AbiError("Invalid parameter value in encodeEventSignature");return hash_sha3Raw(e&&("function"==typeof e||"object"==typeof e)?jsonInterfaceMethodToString(e):e)};function chunk_WP7KDV47_execTyped(e,t){let a=e.exec(t);return a?.groups}var aJ=/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/,a$=/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/,aY=/^\(.+?\).*?$/,aX=Object.defineProperty,__defNormalProp=(e,t,a)=>t in e?aX(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,__publicField=(e,t,a)=>(__defNormalProp(e,"symbol"!=typeof t?t+"":t,a),a),a1=class extends Error{constructor(e,t={}){let a=t.cause instanceof a1?t.cause.details:t.cause?.message?t.cause.message:t.details,r=t.cause instanceof a1&&t.cause.docsPath||t.docsPath,i=[e||"An error occurred.","",...t.metaMessages?[...t.metaMessages,""]:[],...r?[`Docs: https://abitype.dev${r}`]:[],...a?[`Details: ${a}`]:[],"Version: abitype@0.7.1"].join("\n");super(i),__publicField(this,"details"),__publicField(this,"docsPath"),__publicField(this,"metaMessages"),__publicField(this,"shortMessage"),__publicField(this,"name","AbiTypeError"),t.cause&&(this.cause=t.cause),this.details=a,this.docsPath=r,this.metaMessages=t.metaMessages,this.shortMessage=e}},a0=/^struct (?<name>[a-zA-Z0-9_]+) \{(?<properties>.*?)\}$/,a2=new Set(["memory","indexed","storage","calldata"]),a6=new Set(["calldata","memory","storage"]),a4=new Map([["address",{type:"address"}],["bool",{type:"bool"}],["bytes",{type:"bytes"}],["bytes32",{type:"bytes32"}],["int",{type:"int256"}],["int256",{type:"int256"}],["string",{type:"string"}],["uint",{type:"uint256"}],["uint8",{type:"uint8"}],["uint16",{type:"uint16"}],["uint24",{type:"uint24"}],["uint32",{type:"uint32"}],["uint64",{type:"uint64"}],["uint96",{type:"uint96"}],["uint112",{type:"uint112"}],["uint160",{type:"uint160"}],["uint192",{type:"uint192"}],["uint256",{type:"uint256"}],["address owner",{type:"address",name:"owner"}],["address to",{type:"address",name:"to"}],["bool approved",{type:"bool",name:"approved"}],["bytes _data",{type:"bytes",name:"_data"}],["bytes data",{type:"bytes",name:"data"}],["bytes signature",{type:"bytes",name:"signature"}],["bytes32 hash",{type:"bytes32",name:"hash"}],["bytes32 r",{type:"bytes32",name:"r"}],["bytes32 root",{type:"bytes32",name:"root"}],["bytes32 s",{type:"bytes32",name:"s"}],["string name",{type:"string",name:"name"}],["string symbol",{type:"string",name:"symbol"}],["string tokenURI",{type:"string",name:"tokenURI"}],["uint tokenId",{type:"uint256",name:"tokenId"}],["uint8 v",{type:"uint8",name:"v"}],["uint256 balance",{type:"uint256",name:"balance"}],["uint256 tokenId",{type:"uint256",name:"tokenId"}],["uint256 value",{type:"uint256",name:"value"}],["event:address indexed from",{type:"address",name:"from",indexed:!0}],["event:address indexed to",{type:"address",name:"to",indexed:!0}],["event:uint indexed tokenId",{type:"uint256",name:"tokenId",indexed:!0}],["event:uint256 indexed tokenId",{type:"uint256",name:"tokenId",indexed:!0}]]),a3=/^(?<type>[a-zA-Z0-9_]+?)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z0-9_]+))?$/,a9=/^\((?<type>.+?)\)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z0-9_]+))?$/,a8=/^u?int$/;function parseAbiParameter(e,t){var a,r,i;let s;let n=(a=t?.type)?`${a}:${e}`:e;if(a4.has(n))return a4.get(n);let o=aY.test(e),d=chunk_WP7KDV47_execTyped(o?a9:a3,e);if(!d)throw new a1("Invalid ABI parameter.",{details:e});if(d.name&&("address"===(r=d.name)||"bool"===r||"function"===r||"string"===r||"tuple"===r||aJ.test(r)||a$.test(r)||a5.test(r)))throw new a1("Invalid ABI parameter.",{details:e,metaMessages:[`"${d.name}" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`]});let p=d.name?{name:d.name}:{},l="indexed"===d.modifier?{indexed:!0}:{},m=t?.structs??{},c={};if(o){s="tuple";let e=function splitParameters(e,t=[],a="",r=0){if(""===e){if(""===a)return t;if(0!==r)throw new a1("Unbalanced parentheses.",{metaMessages:[`"${a.trim()}" has too many ${r>0?"opening":"closing"} parentheses.`],details:`Depth "${r}"`});return[...t,a.trim()]}let i=e.length;for(let s=0;s<i;s++){let i=e[s],n=e.slice(s+1);switch(i){case",":return 0===r?splitParameters(n,[...t,a.trim()]):splitParameters(n,t,`${a}${i}`,r);case"(":return splitParameters(n,t,`${a}${i}`,r+1);case")":return splitParameters(n,t,`${a}${i}`,r-1);default:return splitParameters(n,t,`${a}${i}`,r)}}return[]}(d.type),t=[],a=e.length;for(let r=0;r<a;r++)t.push(parseAbiParameter(e[r],{structs:m}));c={components:t}}else if(d.type in m)s="tuple",c={components:m[d.type]};else if(a8.test(d.type))s=`${d.type}256`;else if(s=d.type,t?.type!=="struct"&&!isSolidityType(s))throw new a1("Unknown type.",{metaMessages:[`Type "${s}" is not a valid ABI type.`]});if(d.modifier){if(!t?.modifiers?.has?.(d.modifier))throw new a1("Invalid ABI parameter.",{details:e,metaMessages:[`Modifier "${d.modifier}" not allowed${t?.type?` in "${t.type}" type`:""}.`]});if(a6.has(d.modifier)&&(i=s,!d.array&&"bytes"!==i&&"string"!==i&&"tuple"!==i))throw new a1("Invalid ABI parameter.",{details:e,metaMessages:[`Modifier "${d.modifier}" not allowed${t?.type?` in "${t.type}" type`:""}.`,`Data location can only be specified for array, struct, or mapping types, but "${d.modifier}" was given.`]})}let u={type:`${s}${d.array??""}`,...p,...l,...c};return a4.set(n,u),u}function isSolidityType(e){return"address"===e||"bool"===e||"function"===e||"string"===e||aJ.test(e)||a$.test(e)}var a5=/^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/,a7=/^(?<type>[a-zA-Z0-9_]+?)(?<array>(?:\[\d*?\])+?)?$/;function alloc(e=0){var t;if((null===(t=globalThis.Buffer)||void 0===t?void 0:t.alloc)!==void 0){let t=globalThis.Buffer.alloc(e);return new Uint8Array(t.buffer,t.byteOffset,t.byteLength)}return new Uint8Array(e)}function toAbiParams(e){return e.map(e=>{var t;if(!tB(e)&&"object"==typeof e&&!tB(e.type)&&"string"==typeof e.type)return e;if("string"==typeof e)return function convertExternalAbiParameter(e){var t,a;return Object.assign(Object.assign({},e),{name:null!==(t=e.name)&&void 0!==t?t:"",components:null===(a=e.components)||void 0===a?void 0:a.map(e=>convertExternalAbiParameter(e))})}(function(e){let t;if("string"==typeof e)t=parseAbiParameter(e,{modifiers:a2});else{let a=function(e){let t={},a=e.length;for(let r=0;r<a;r++){let a=e[r];if(!a0.test(a))continue;let i=chunk_WP7KDV47_execTyped(a0,a);if(!i)throw new a1("Invalid struct signature.",{details:a});let s=i.properties.split(";"),n=[],o=s.length;for(let e=0;e<o;e++){let t=s[e],a=t.trim();if(!a)continue;let r=parseAbiParameter(a,{type:"struct"});n.push(r)}if(!n.length)throw new a1("Invalid struct signature.",{details:a,metaMessages:["No properties exist."]});t[i.name]=n}let r={},i=Object.entries(t),s=i.length;for(let e=0;e<s;e++){let[a,s]=i[e];r[a]=function resolveStructs(e,t,a=new Set){let r=[],i=e.length;for(let s=0;s<i;s++){let i=e[s],n=aY.test(i.type);if(n)r.push(i);else{let e=chunk_WP7KDV47_execTyped(a7,i.type);if(!e?.type)throw new a1("Invalid ABI parameter.",{details:JSON.stringify(i,null,2),metaMessages:["ABI parameter type is invalid."]});let{array:s,type:n}=e;if(n in t){if(a.has(n))throw new a1("Circular reference detected.",{metaMessages:[`Struct "${n}" is a circular reference.`]});r.push({...i,type:`tuple${s??""}`,components:resolveStructs(t[n]??[],t,new Set([...a,n]))})}else if(isSolidityType(n))r.push(i);else throw new a1("Unknown type.",{metaMessages:[`Type "${n}" is not a valid ABI type. Perhaps you forgot to include a struct signature?`]})}}return r}(s,t)}return r}(e),r=e.length;for(let i=0;i<r;i++){let r=e[i];if(!a0.test(r)){t=parseAbiParameter(r,{modifiers:a2,structs:a});break}}}if(!t)throw new a1("Failed to parse ABI parameter.",{details:`parseAbiParameter(${JSON.stringify(e,null,2)})`,docsPath:"/api/human.html#parseabiparameter-1"});return t}(e.replace(/tuple/,"")));if(isSimplifiedStructFormat(e)){let a=Object.keys(e)[0],r=mapStructNameAndType(a);return r.name=null!==(t=r.name)&&void 0!==t?t:"",Object.assign(Object.assign({},r),{components:mapStructToCoderFormat(e[a])})}throw new AbiError("Invalid abi")})}function extractArrayType(e){let t=e.type.lastIndexOf("["),a=e.type.substring(0,t),r=e.type.substring(t),i=-1;if("[]"!==r&&isNaN(i=Number(r.slice(1,-1))))throw new AbiError("Invalid fixed array size",{size:r});return{param:{type:a,name:"",components:e.components},size:i}}function isDynamic(e){var t,a;return!!("string"===e.type||"bytes"===e.type||e.type.endsWith("[]"))||("tuple"===e.type?null!==(a=null===(t=e.components)||void 0===t?void 0:t.some(isDynamic))&&void 0!==a&&a:!!e.type.endsWith("]")&&isDynamic(extractArrayType(e).param))}let re=new Map,rt=BigInt(256);for(let e=8;e<=256;e+=8)re.set(`uint${e}`,{min:BigInt(0),max:rt-BigInt(1)}),re.set(`int${e}`,{min:-rt/BigInt(2),max:rt/BigInt(2)-BigInt(1)}),rt*=BigInt(256);re.set("int",re.get("int256")),re.set("uint",re.get("uint256"));let ra=BigInt(1)<<BigInt(256);function encodeNumber(e,t){let a;try{a=toBigInt(t)}catch(a){throw new AbiError("provided input is not number value",{type:e.type,value:t,name:e.name})}let r=re.get(e.type);if(!r)throw new AbiError("provided abi contains invalid number datatype",{type:e.type});if(a<r.min)throw new AbiError("provided input is less then minimum for given type",{type:e.type,value:t,name:e.name,minimum:r.min.toString()});if(a>r.max)throw new AbiError("provided input is greater then maximum for given type",{type:e.type,value:t,name:e.name,maximum:r.max.toString()});return{dynamic:!1,encoded:function(e,t=32){return hexToUint8Array(string_manipulation_padLeft(e<0?(ra+e).toString(16):e.toString(16),2*t))}(a)}}function decodeNumber(e,t){if(t.length<32)throw new AbiError("Not enough bytes left to decode",{param:e,bytesLeft:t.length});let a=t.subarray(0,32),r=re.get(e.type);if(!r)throw new AbiError("provided abi contains invalid number datatype",{type:e.type});let i=function(e,t){let a=uint8ArrayToHexString(e),r=BigInt(a);return r<=t?r:r-ra}(a,r.max);if(i<r.min)throw new AbiError("decoded value is less then minimum for given type",{type:e.type,value:i,name:e.name,minimum:r.min.toString()});if(i>r.max)throw new AbiError("decoded value is greater then maximum for given type",{type:e.type,value:i,name:e.name,maximum:r.max.toString()});return{result:i,encoded:t.subarray(32),consumed:32}}function encodeBytes(e,t){if("string"==typeof t&&t.length%2!=0&&(t+="0"),!isBytes(t))throw new AbiError("provided input is not valid bytes value",{type:e.type,value:t,name:e.name});let a=bytesToUint8Array(t),[,r]=e.type.split("bytes");if(r){if(Number(r)>32||1>Number(r))throw new AbiError("invalid bytes type. Static byte type can have between 1 and 32 bytes",{type:e.type});if(Number(r)<a.length)throw new AbiError("provided input size is different than type size",{type:e.type,value:t,name:e.name});let i=alloc(32);return i.set(a),{dynamic:!1,encoded:i}}let i=Math.ceil(a.length/32),s=alloc(32+32*i);return s.set(encodeNumber({type:"uint32",name:""},a.length).encoded),s.set(a,32),{dynamic:!0,encoded:s}}function decodeBytes(e,t){let[,a]=e.type.split("bytes"),r=Number(a),i=t,s=1,n=0;if(!r){let e=decodeNumber({type:"uint32",name:""},i);r=Number(e.result),n+=e.consumed,i=e.encoded,s=Math.ceil(r/32)}if(r>t.length)throw new AbiError("there is not enough data to decode",{type:e.type,encoded:t,size:r});return{result:converters_bytesToHex(i.subarray(0,r)),encoded:i.subarray(32*s),consumed:n+32*s}}function encodeDynamicParams(e){let t=0,a=0,r=[],i=[];for(let a of e)a.dynamic?t+=32:t+=a.encoded.length;for(let s of e)s.dynamic?(r.push(encodeNumber({type:"uint256",name:""},t+a)),i.push(s),a+=s.encoded.length):r.push(s);return uint8ArrayConcat(...r.map(e=>e.encoded),...i.map(e=>e.encoded))}function encodeParamFromAbiParameter(e,t){if("string"===e.type)return function(e,t){if("string"!=typeof t)throw new AbiError("invalid input, should be string",{input:t});let a=tb(t);return encodeBytes({type:"bytes",name:""},a)}(0,t);if("bool"===e.type)return function(e,t){let a;try{a=toBool(t)}catch(a){if(a instanceof InvalidBooleanError)throw new AbiError("provided input is not valid boolean value",{type:e.type,value:t,name:e.name})}return encodeNumber({type:"uint8",name:""},Number(a))}(e,t);if("address"===e.type)return function(e,t){if("string"!=typeof t)throw new AbiError("address type expects string as input type",{value:t,name:e.name,type:e.type});let a=t.toLowerCase();if(a.startsWith("0x")||(a=`0x${a}`),!address_isAddress(a))throw new AbiError("provided input is not valid address",{value:t,name:e.name,type:e.type});let r=hexToUint8Array(a),i=alloc(32);return i.set(r,12),{dynamic:!1,encoded:i}}(e,t);if("tuple"===e.type)return encodeTuple(e,t);if(e.type.endsWith("]"))return function(e,t){if(!Array.isArray(t))throw new AbiError("Expected value to be array",{abi:e,values:t});let{size:a,param:r}=extractArrayType(e),i=t.map(e=>encodeParamFromAbiParameter(r,e)),s=-1===a,n=i.length>0&&i[0].dynamic;if(!s&&t.length!==a)throw new AbiError("Given arguments count doesn't match array length",{arrayLength:a,argumentsLength:t.length});if(s||n){let e=encodeDynamicParams(i);if(s){let t=encodeNumber({type:"uint256",name:""},i.length).encoded;return{dynamic:!0,encoded:i.length>0?uint8ArrayConcat(t,e):t}}return{dynamic:!0,encoded:e}}return{dynamic:!1,encoded:uint8ArrayConcat(...i.map(e=>e.encoded))}}(e,t);if(e.type.startsWith("bytes"))return encodeBytes(e,t);if(e.type.startsWith("uint")||e.type.startsWith("int"))return encodeNumber(e,t);throw Error("Unsupported")}function decodeParamFromAbiParameter(e,t){if("string"===e.type)return function(e,t){let a=decodeBytes({type:"bytes",name:""},t);return{result:hexToUtf8(a.result),encoded:a.encoded,consumed:a.consumed}}(0,t);if("bool"===e.type)return function(e,t){let a=decodeNumber({type:"uint8",name:""},t);if(a.result>1||a.result<0)throw new AbiError("Invalid boolean value encoded",{boolBytes:t.subarray(0,32),numberResult:a});return{result:a.result===BigInt(1),encoded:a.encoded,consumed:32}}(0,t);if("address"===e.type)return function(e,t){let a=t.subarray(12,32);if(20!==a.length)throw new AbiError("Invalid decoding input, not enough bytes to decode address",{bytes:t});let r=uint8ArrayToHexString(a);return{result:converters_toChecksumAddress(r),encoded:t.subarray(32),consumed:32}}(0,t);if("tuple"===e.type)return decodeTuple(e,t);if(e.type.endsWith("]"))return function(e,t){let{size:a,param:r}=extractArrayType(e),i=-1===a,s=0,n=[],o=t;if(i){let e=decodeNumber({type:"uint32",name:""},t);a=Number(e.result),s=e.consumed,o=e.encoded}let d=isDynamic(r);if(d){for(let e=0;e<a;e+=1){let t=decodeNumber({type:"uint32",name:""},o.subarray(32*e));s+=t.consumed;let a=decodeParamFromAbiParameter(r,o.subarray(Number(t.result)));s+=a.consumed,n.push(a.result)}return{result:n,encoded:o.subarray(s),consumed:s}}for(let e=0;e<a;e+=1){let e=decodeParamFromAbiParameter(r,t.subarray(s));s+=e.consumed,n.push(e.result)}return{result:n,encoded:t.subarray(s),consumed:s}}(e,t);if(e.type.startsWith("bytes"))return decodeBytes(e,t);if(e.type.startsWith("uint")||e.type.startsWith("int"))return decodeNumber(e,t);throw Error("Unsupported")}function encodeTuple(e,t){var a,r,i;let s=!1;if(!Array.isArray(t)&&"object"!=typeof t)throw new AbiError("param must be either Array or Object",{param:e,input:t});let n=[];for(let o=0;o<(null!==(r=null===(a=e.components)||void 0===a?void 0:a.length)&&void 0!==r?r:0);o+=1){let a;let r=e.components[o];if(Array.isArray(t)){if(o>=t.length)throw new AbiError("input param length missmatch",{param:e,input:t});a=encodeParamFromAbiParameter(r,t[o])}else{let s=t[null!==(i=r.name)&&void 0!==i?i:""];if(null==s)throw new AbiError("missing input defined in abi",{param:e,input:t,paramName:r.name});a=encodeParamFromAbiParameter(r,s)}a.dynamic&&(s=!0),n.push(a)}return s?{dynamic:!0,encoded:encodeDynamicParams(n)}:{dynamic:!1,encoded:uint8ArrayConcat(...n.map(e=>e.encoded))}}function decodeTuple(e,t){let a={__length__:0},r=0;if(!e.components)return{result:a,encoded:t,consumed:r};let i=0;for(let[s,n]of e.components.entries()){let e;if(isDynamic(n)){let a=decodeNumber({type:"uint32",name:""},t.subarray(r));e=decodeParamFromAbiParameter(n,t.subarray(Number(a.result))),r+=a.consumed,i+=e.consumed}else e=decodeParamFromAbiParameter(n,t.subarray(r)),r+=e.consumed;a.__length__+=1,a[s]=e.result,n.name&&""!==n.name&&(a[n.name]=e.result)}return{encoded:t.subarray(r+i),result:a,consumed:r+i}}let parameters_api_encodeParameters=(e,t)=>(function(e,t){if(e.length!==t.length)throw new AbiError("Invalid number of values received for given ABI",{expected:e.length,received:t.length});let a=toAbiParams(e);return uint8ArrayToHexString(encodeTuple({type:"tuple",name:"",components:a},t).encoded)})(e,t),encodeParameter=(e,t)=>parameters_api_encodeParameters([e],[t]),decodeParametersWith=(e,t,a)=>{try{if(e.length>0&&(!t||"0x"===t||"0X"===t))throw new AbiError("Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced.");return function(e,t,a){let r=toAbiParams(e),i=hexToUint8Array(t);return decodeTuple({type:"tuple",name:"",components:r},i).result}(e,`0x${t.replace(/0x/i,"")}`,0)}catch(e){throw new AbiError(`Parameter decoding error: ${e.message}`,{internalErr:e})}},parameters_api_decodeParameters=(e,t)=>decodeParametersWith(e,t,!1),decodeParameter=(e,t)=>parameters_api_decodeParameters([e],t)["0"],encodeFunctionSignature=e=>{if("string"!=typeof e&&!isAbiFunctionFragment(e))throw new AbiError("Invalid parameter value in encodeFunctionSignature");return hash_sha3Raw(e&&("function"==typeof e||"object"==typeof e)?jsonInterfaceMethodToString(e):e).slice(0,10)},rr=["bool","string","int","uint","address","fixed","ufixed"],_decodeParameter=(e,t)=>"string"===e?t:decodeParameter(e,t),decodeLog=(e,t,a)=>{let r=Array.isArray(a)?a:[a],i={},s={};for(let[t,a]of e.entries())a.indexed?i[t]=a:s[t]=a;let n=t?decodeParametersWith(Object.values(s),t,!0):{__length__:0},o=r.length-Object.keys(i).length,d=Object.values(i).map((e,t)=>rr.some(t=>e.type.startsWith(t))?_decodeParameter(e.type,r[t+o]):r[t+o]),p={__length__:0},l=0,m=0;for(let[t,a]of e.entries())p[t]="string"===a.type?"":void 0,i[t]&&(p[t]=d[l],l+=1),s[t]&&(p[t]=n[String(m)],m+=1),a.name&&(p[a.name]=p[t]),p.__length__+=1;return p},decodeContractErrorData=(e,t)=>{if(null==t?void 0:t.data){let a,r,i;try{let s=t.data.slice(0,10),n=e.find(e=>encodeErrorSignature(e).startsWith(s));(null==n?void 0:n.inputs)&&(a=n.name,r=jsonInterfaceMethodToString(n),i=parameters_api_decodeParameters([...n.inputs],t.data.substring(10)))}catch(e){console.error(e)}a&&t.setDecodedProperties(a,r,i)}},ri=/^\w+/,rs=/^(.*)\[([0-9]*?)]$/,getDependencies=(e,t,a=[])=>{let r=t.match(ri),i=r[0];return a.includes(i)||!e.types[i]?a:[i,...e.types[i].reduce((t,a)=>[...t,...getDependencies(e,a.type,t).filter(e=>!t.includes(e))],[])]},encodeType=(e,t)=>{let[a,...r]=getDependencies(e,t),i=[a,...r.sort()];return i.map(t=>`${t}(${e.types[t].map(e=>`${e.type} ${e.name}`)})`).join("")},getTypeHash=(e,t)=>keccak256(encodeType(e,t)),getStructHash=(e,t,a)=>keccak256(encodeData(e,t,a)),encodeValue=(e,t,a)=>{let r=t.match(rs);if(r){let t=r[1],i=Number(r[2])||void 0;if(!Array.isArray(a))throw Error("Cannot encode data: value is not of array type");if(i&&a.length!==i)throw Error(`Cannot encode data: expected length of ${i}, but got ${a.length}`);let s=a.map(a=>encodeValue(e,t,a)),n=s.map(e=>e[0]),o=s.map(e=>e[1]);return["bytes32",keccak256(encodeParameters(n,o))]}return e.types[t]?["bytes32",getStructHash(e,t,a)]:"string"===t||"bytes"===t?["bytes32",keccak256(a)]:[t,a]},encodeData=(e,t,a)=>{let[r,i]=e.types[t].reduce(([t,r],i)=>{if(isNullish(a[i.name])||isNullish(a[i.name]))throw Error(`Cannot encode data: missing data for '${i.name}'`);let s=a[i.name],[n,o]=encodeValue(e,i.type,s);return[[...t,n],[...r,o]]},[["bytes32"],[getTypeHash(e,t)]]);return encodeParameters(r,i)},parseTransactionError=(e,t)=>{var a,r,i,s;if(e instanceof ContractExecutionError&&e.innerError instanceof Eip838ExecutionError){if(void 0!==t){let i=t.filter(e=>isAbiErrorFragment(e));return decodeContractErrorData(i,e.innerError),{reason:e.innerError.message,signature:null===(a=e.innerError.data)||void 0===a?void 0:a.slice(0,10),data:null===(r=e.innerError.data)||void 0===r?void 0:r.substring(10),customErrorName:e.innerError.errorName,customErrorDecodedSignature:e.innerError.errorSignature,customErrorArguments:e.innerError.errorArgs}}return{reason:e.innerError.message,signature:null===(i=e.innerError.data)||void 0===i?void 0:i.slice(0,10),data:null===(s=e.innerError.data)||void 0===s?void 0:s.substring(10)}}if(e instanceof InvalidResponseError&&!Array.isArray(e.innerError)&&void 0!==e.innerError)return e.innerError.message;throw e};function getRevertReason(e,t,a,r=to){var i,s,n,o;return i=this,s=void 0,n=void 0,o=function*(){try{yield rpc_method_wrappers_call(e,t,e.defaultBlock,r);return}catch(e){return parseTransactionError(e,a)}},new(n||(n=Promise))(function(e,t){function fulfilled(e){try{step(o.next(e))}catch(e){t(e)}}function rejected(e){try{step(o.throw(e))}catch(e){t(e)}}function step(t){var a;t.done?e(t.value):((a=t.value)instanceof n?a:new n(function(e){e(a)})).then(fulfilled,rejected)}step((o=o.apply(i,s||[])).next())})}function getTransactionError(e,t,a,r,i,s){var n,o,d,p;return n=this,o=void 0,d=void 0,p=function*(){let n,o=s;if(void 0===o&&(void 0!==r?o=parseTransactionError(r):e.handleRevert&&void 0!==t&&(o=yield getRevertReason(e,t,i))),void 0===o)n=new TransactionRevertedWithoutReasonError(a);else if("string"==typeof o)n=new TransactionRevertInstructionError(o,void 0,a);else if(void 0!==o.customErrorName&&void 0!==o.customErrorDecodedSignature&&void 0!==o.customErrorArguments){let e=o;n=new TransactionRevertWithCustomError(e.reason,e.customErrorName,e.customErrorDecodedSignature,e.customErrorArguments,e.signature,a,e.data)}else n=new TransactionRevertInstructionError(o.reason,o.signature,a,o.data);return n},new(d||(d=Promise))(function(e,t){function fulfilled(e){try{step(p.next(e))}catch(e){t(e)}}function rejected(e){try{step(p.throw(e))}catch(e){t(e)}}function step(t){var a;t.done?e(t.value):((a=t.value)instanceof d?a:new d(function(e){e(a)})).then(fulfilled,rejected)}step((p=p.apply(n,o||[])).next())})}let decodeEventABI=(e,t,a,r=to)=>{var i,s,n,o,d;let p=Object.assign({},e),l=format(aF,t,r);if([az,"allEvents"].includes(p.name)){let e=a.find(e=>e.signature===t.topics[0]);p=e||{anonymous:!0}}if(p.inputs=null!==(s=null!==(i=p.inputs)&&void 0!==i?i:e.inputs)&&void 0!==s?s:[],!p.anonymous){let e=0;(null!==(n=p.inputs)&&void 0!==n?n:[]).forEach(t=>{t.indexed&&(e+=1)}),e>0&&(null==t?void 0:t.topics)&&(null==t?void 0:t.topics.length)!==e+1&&(p=Object.assign(Object.assign({},p),{anonymous:!0,inputs:[]}))}let m=p.anonymous?t.topics:(null!==(o=t.topics)&&void 0!==o?o:[]).slice(1);return Object.assign(Object.assign({},l),{returnValues:decodeLog([...null!==(d=p.inputs)&&void 0!==d?d:[]],t.data,m),event:p.name,signature:!p.anonymous&&t.topics&&0!==t.topics.length&&t.topics[0]?t.topics[0]:void 0,raw:{data:t.data,topics:t.topics}})};var send_tx_helper_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let SendTxHelper=class SendTxHelper{constructor({options:e,web3Context:t,promiEvent:a,returnFormat:r}){this.options={checkRevertBeforeSending:!0},this.options=e,this.web3Context=t,this.promiEvent=a,this.returnFormat=r}getReceiptWithEvents(e){var t,a;let r=Object.assign({},null!=e?e:{});if((null===(t=this.options)||void 0===t?void 0:t.contractAbi)&&r.logs&&r.logs.length>0)for(let e of(r.events={},r.logs)){let t=decodeEventABI(aQ,e,null===(a=this.options)||void 0===a?void 0:a.contractAbi,this.returnFormat);t.event&&(r.events[t.event]=t)}return r}checkRevertBeforeSending(e){return send_tx_helper_awaiter(this,void 0,void 0,function*(){if(!1!==this.options.checkRevertBeforeSending){let t=yield getRevertReason(this.web3Context,e,this.options.contractAbi);if(void 0!==t)throw yield getTransactionError(this.web3Context,e,void 0,void 0,this.options.contractAbi,t)}})}emitSending(e){this.promiEvent.listenerCount("sending")>0&&this.promiEvent.emit("sending",e)}populateGasPrice({transactionFormatted:e,transaction:t}){var a;return send_tx_helper_awaiter(this,void 0,void 0,function*(){let r=e;return!(null===(a=this.options)||void 0===a?void 0:a.ignoreGasPricing)&&object_isNullish(e.gasPrice)&&(object_isNullish(t.maxPriorityFeePerGas)||object_isNullish(t.maxFeePerGas))&&(r=Object.assign(Object.assign({},e),(yield getTransactionGasPricing(e,this.web3Context,td)))),r})}signAndSend({wallet:e,tx:t}){return send_tx_helper_awaiter(this,void 0,void 0,function*(){if(e){let a=yield e.signTransaction(t);return trySendTransaction(this.web3Context,()=>send_tx_helper_awaiter(this,void 0,void 0,function*(){return sendRawTransaction(this.web3Context.requestManager,a.rawTransaction)}),a.transactionHash)}return trySendTransaction(this.web3Context,()=>send_tx_helper_awaiter(this,void 0,void 0,function*(){return function(e,t){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return e.send({method:"eth_sendTransaction",params:[t]})})}(this.web3Context.requestManager,t)}))})}emitSent(e){this.promiEvent.listenerCount("sent")>0&&this.promiEvent.emit("sent",e)}emitTransactionHash(e){this.promiEvent.listenerCount("transactionHash")>0&&this.promiEvent.emit("transactionHash",e)}emitReceipt(e){this.promiEvent.listenerCount("receipt")>0&&this.promiEvent.emit("receipt",e)}handleError({error:e,tx:t}){var a;return send_tx_helper_awaiter(this,void 0,void 0,function*(){let r=e;return r instanceof ContractExecutionError&&this.web3Context.handleRevert&&(r=yield getTransactionError(this.web3Context,t,void 0,void 0,null===(a=this.options)||void 0===a?void 0:a.contractAbi)),(r instanceof InvalidResponseError||r instanceof ContractExecutionError||r instanceof TransactionRevertWithCustomError||r instanceof TransactionRevertedWithoutReasonError||r instanceof TransactionRevertInstructionError)&&this.promiEvent.listenerCount("error")>0&&this.promiEvent.emit("error",r),r})}emitConfirmation({receipt:e,transactionHash:t}){this.promiEvent.listenerCount("confirmation")>0&&function(e,t,a,r,i){if(object_isNullish(a)||object_isNullish(a.blockHash))throw new TransactionMissingReceiptOrBlockHashError({receipt:a,blockHash:format({format:"bytes32"},null==a?void 0:a.blockHash,i),transactionHash:format({format:"bytes32"},r,i)});if(!a.blockNumber)throw new TransactionReceiptMissingBlockNumberError({receipt:a});t.emit("confirmation",{confirmations:format({format:"uint"},1,i),receipt:format(aZ,a,i),latestBlockHash:format({format:"bytes32"},a.blockHash,i)});let s=e.requestManager.provider;s&&"supportsSubscriptions"in s&&s.supportsSubscriptions()?watchTransactionBySubscription({web3Context:e,transactionReceipt:a,transactionPromiEvent:t,returnFormat:i}):watchTransactionByPolling({web3Context:e,transactionReceipt:a,transactionPromiEvent:t,returnFormat:i})}(this.web3Context,this.promiEvent,e,t,this.returnFormat)}handleResolve({receipt:e,tx:t}){var a,r,i;return send_tx_helper_awaiter(this,void 0,void 0,function*(){if(null===(a=this.options)||void 0===a?void 0:a.transactionResolver)return null===(r=this.options)||void 0===r?void 0:r.transactionResolver(e);if(e.status!==BigInt(0))return e;{let a=yield getTransactionError(this.web3Context,t,e,void 0,null===(i=this.options)||void 0===i?void 0:i.contractAbi);throw this.promiEvent.listenerCount("error")>0&&this.promiEvent.emit("error",a),a}})}};var esm_rpc_method_wrappers_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})},__rest=function(e,t){var a={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&0>t.indexOf(r)&&(a[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var i=0,r=Object.getOwnPropertySymbols(e);i<r.length;i++)0>t.indexOf(r[i])&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(a[r[i]]=e[r[i]]);return a};let isSyncing=e=>esm_rpc_method_wrappers_awaiter(void 0,void 0,void 0,function*(){return getSyncing(e.requestManager)});function rpc_method_wrappers_getGasPrice(e,t){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let a=yield function(e){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return e.send({method:"eth_gasPrice",params:[]})})}(e.requestManager);return format({format:"uint"},a,t)})}function rpc_method_wrappers_getBlockNumber(e,t){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let a=yield function(e){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return e.send({method:"eth_blockNumber",params:[]})})}(e.requestManager);return format({format:"uint"},a,t)})}function getBlock(e,t=e.defaultBlock,a=!1,r){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let i;if(isBytes(t)){let r=format({format:"bytes32"},t,td);i=yield function(e,t,a){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["bytes32","bool"],[t,a]),e.send({method:"eth_getBlockByHash",params:[t,a]})})}(e.requestManager,r,a)}else{let r=block_isBlockTag(t)?t:format({format:"uint"},t,td);i=yield getBlockByNumber(e.requestManager,r,a)}return format(aH,i,r)})}function rpc_method_wrappers_getTransactionReceipt(e,t,a){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let r=format({format:"bytes32"},t,to),i=yield function(e,t){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["bytes32"],[t]),e.send({method:"eth_getTransactionReceipt",params:[t]})})}(e.requestManager,r);return object_isNullish(i)?i:format(aZ,i,a)})}function rpc_method_wrappers_getTransactionCount(e,t,a=e.defaultBlock,r){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let i=block_isBlockTag(a)?a:format({format:"uint"},a,td),s=yield function(e,t,a){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["address","blockNumberOrTag"],[t,a]),e.send({method:"eth_getTransactionCount",params:[t,a]})})}(e.requestManager,t,i);return format({format:"uint"},s,r)})}function rpc_method_wrappers_sendTransaction(e,t,a,r={checkRevertBeforeSending:!0}){let i=new Web3PromiEvent((s,n)=>{setImmediate(()=>{esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let o=new SendTxHelper({web3Context:e,promiEvent:i,options:r,returnFormat:a}),d=formatTransaction(Object.assign(Object.assign({},t),{from:getTransactionFromOrToAttr("from",e,t),to:getTransactionFromOrToAttr("to",e,t)}),td);try{let r;d=yield o.populateGasPrice({transaction:t,transactionFormatted:d}),yield o.checkRevertBeforeSending(d),o.emitSending(d),e.wallet&&!object_isNullish(d.from)&&(r=e.wallet.get(d.from));let i=yield o.signAndSend({wallet:r,tx:d}),n=format({format:"bytes32"},i,a);o.emitSent(d),o.emitTransactionHash(n);let p=yield waitForTransactionReceipt(e,i,a),l=o.getReceiptWithEvents(format(aZ,p,a));o.emitReceipt(l),s((yield o.handleResolve({receipt:l,tx:d}))),o.emitConfirmation({receipt:l,transactionHash:i})}catch(e){n((yield o.handleError({error:e,tx:d})))}})})});return i}function rpc_method_wrappers_call(e,t,a=e.defaultBlock,r){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let i=block_isBlockTag(a)?a:format({format:"uint"},a,td),s=yield function(e,t,a){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["blockNumberOrTag"],[a]),e.send({method:"eth_call",params:[t,a]})})}(e.requestManager,formatTransaction(t,td),i);return format({format:"bytes"},s,r)})}function rpc_method_wrappers_estimateGas(e,t,a=e.defaultBlock,r){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let i=formatTransaction(t,td),s=block_isBlockTag(a)?a:format({format:"uint"},a,td),n=yield function(e,t,a){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["blockNumberOrTag"],[a]),e.send({method:"eth_estimateGas",params:[t,a]})})}(e.requestManager,i,s);return format({format:"uint"},n,r)})}function rpc_method_wrappers_getLogs(e,t,a){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let{toBlock:r,fromBlock:i}=t;object_isNullish(r)||"number"!=typeof r&&"bigint"!=typeof r||(r=converters_numberToHex(r)),object_isNullish(i)||"number"!=typeof i&&"bigint"!=typeof i||(i=converters_numberToHex(i));let s=Object.assign(Object.assign({},t),{fromBlock:i,toBlock:r}),n=yield function(e,t){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["filter"],[t]),e.send({method:"eth_getLogs",params:[t]})})}(e.requestManager,s),o=n.map(e=>"string"==typeof e?e:format(aF,e,a));return o})}function rpc_method_wrappers_getChainId(e,t){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let a=yield function(e){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return e.send({method:"eth_chainId",params:[]})})}(e.requestManager);return format({format:"uint"},a,t)})}function rpc_method_wrappers_createAccessList(e,t,a=e.defaultBlock,r){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let i=block_isBlockTag(a)?a:format({format:"uint"},a,td),s=yield function(e,t,a){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["blockNumberOrTag"],[a]),e.send({method:"eth_createAccessList",params:[t,a]})})}(e.requestManager,formatTransaction(t,td),i);return format(aO,s,r)})}let LogsSubscription=class LogsSubscription extends Web3Subscription{_buildSubscriptionParams(){return["logs",this.args]}formatSubscriptionResult(e){return format(aF,e,super.returnFormat)}};let NewPendingTransactionsSubscription=class NewPendingTransactionsSubscription extends Web3Subscription{_buildSubscriptionParams(){return["newPendingTransactions"]}formatSubscriptionResult(e){return format({format:"string"},e,super.returnFormat)}};let NewHeadsSubscription=class NewHeadsSubscription extends Web3Subscription{_buildSubscriptionParams(){return["newHeads"]}formatSubscriptionResult(e){return format(aV,e,super.returnFormat)}};let SyncingSubscription=class SyncingSubscription extends Web3Subscription{_buildSubscriptionParams(){return["syncing"]}_processSubscriptionResult(e){if("boolean"==typeof e)this.emit("changed",e);else{let t=Object.fromEntries(Object.entries(e.status).map(([e,t])=>[e.charAt(0).toLowerCase()+e.substring(1),t]));this.emit("changed",e.syncing),this.emit("data",format(aU,t,super.returnFormat))}}};var web3_eth_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let rn={logs:LogsSubscription,newPendingTransactions:NewPendingTransactionsSubscription,newHeads:NewHeadsSubscription,syncing:SyncingSubscription,pendingTransactions:NewPendingTransactionsSubscription,newBlockHeaders:NewHeadsSubscription};let web3_eth_Web3Eth=class web3_eth_Web3Eth extends Web3Context{constructor(e){if("string"==typeof e||isSupportedProvider(e)){super({provider:e,registeredSubscriptions:rn});return}if(e.registeredSubscriptions){super(e);return}super(Object.assign(Object.assign({},e),{registeredSubscriptions:rn}))}getProtocolVersion(){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return e.send({method:"eth_protocolVersion",params:[]})})}(this.requestManager)})}isSyncing(){return web3_eth_awaiter(this,void 0,void 0,function*(){return getSyncing(this.requestManager)})}getCoinbase(){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return e.send({method:"eth_coinbase",params:[]})})}(this.requestManager)})}isMining(){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return e.send({method:"eth_mining",params:[]})})}(this.requestManager)})}getHashrate(e=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return this.getHashRate(e)})}getHashRate(e=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e,t){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let a=yield function(e){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return e.send({method:"eth_hashrate",params:[]})})}(e.requestManager);return format({format:"uint"},a,t)})}(this,e)})}getGasPrice(e=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return rpc_method_wrappers_getGasPrice(this,e)})}getAccounts(){var e;return web3_eth_awaiter(this,void 0,void 0,function*(){let t=null!==(e=yield function(e){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return e.send({method:"eth_accounts",params:[]})})}(this.requestManager))&&void 0!==e?e:[];return t.map(e=>converters_toChecksumAddress(e))})}getBlockNumber(e=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return rpc_method_wrappers_getBlockNumber(this,e)})}getBalance(e,t=this.defaultBlock,a=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e,t,a=e.defaultBlock,r){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let i=block_isBlockTag(a)?a:format({format:"uint"},a,td),s=yield function(e,t,a){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["address","blockNumberOrTag"],[t,a]),e.send({method:"eth_getBalance",params:[t,a]})})}(e.requestManager,t,i);return format({format:"uint"},s,r)})}(this,e,t,a)})}getStorageAt(e,t,a=this.defaultBlock,r=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e,t,a,r=e.defaultBlock,i){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let s=format({format:"uint"},a,td),n=block_isBlockTag(r)?r:format({format:"uint"},r,td),o=yield function(e,t,a,r){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["address","hex","blockNumberOrTag"],[t,a,r]),e.send({method:"eth_getStorageAt",params:[t,a,r]})})}(e.requestManager,t,s,n);return format({format:"bytes"},o,i)})}(this,e,t,a,r)})}getCode(e,t=this.defaultBlock,a=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e,t,a=e.defaultBlock,r){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let i=block_isBlockTag(a)?a:format({format:"uint"},a,td),s=yield function(e,t,a){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["address","blockNumberOrTag"],[t,a]),e.send({method:"eth_getCode",params:[t,a]})})}(e.requestManager,t,i);return format({format:"bytes"},s,r)})}(this,e,t,a)})}getBlock(e=this.defaultBlock,t=!1,a=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return getBlock(this,e,t,a)})}getBlockTransactionCount(e=this.defaultBlock,t=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e,t=e.defaultBlock,a){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let r;if(isBytes(t)){let a=format({format:"bytes32"},t,td);r=yield function(e,t){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["bytes32"],[t]),e.send({method:"eth_getBlockTransactionCountByHash",params:[t]})})}(e.requestManager,a)}else{let a=block_isBlockTag(t)?t:format({format:"uint"},t,td);r=yield function(e,t){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["blockNumberOrTag"],[t]),e.send({method:"eth_getBlockTransactionCountByNumber",params:[t]})})}(e.requestManager,a)}return format({format:"uint"},r,a)})}(this,e,t)})}getBlockUncleCount(e=this.defaultBlock,t=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e,t=e.defaultBlock,a){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let r;if(isBytes(t)){let a=format({format:"bytes32"},t,td);r=yield function(e,t){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["bytes32"],[t]),e.send({method:"eth_getUncleCountByBlockHash",params:[t]})})}(e.requestManager,a)}else{let a=block_isBlockTag(t)?t:format({format:"uint"},t,td);r=yield function(e,t){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["blockNumberOrTag"],[t]),e.send({method:"eth_getUncleCountByBlockNumber",params:[t]})})}(e.requestManager,a)}return format({format:"uint"},r,a)})}(this,e,t)})}getUncle(e=this.defaultBlock,t,a=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e,t=e.defaultBlock,a,r){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let i;let s=format({format:"uint"},a,td);if(isBytes(t)){let a=format({format:"bytes32"},t,td);i=yield function(e,t,a){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["bytes32","hex"],[t,a]),e.send({method:"eth_getUncleByBlockHashAndIndex",params:[t,a]})})}(e.requestManager,a,s)}else{let a=block_isBlockTag(t)?t:format({format:"uint"},t,td);i=yield function(e,t,a){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["blockNumberOrTag","hex"],[t,a]),e.send({method:"eth_getUncleByBlockNumberAndIndex",params:[t,a]})})}(e.requestManager,a,s)}return format(aH,i,r)})}(this,e,t,a)})}getTransaction(e,t=to){return web3_eth_awaiter(this,void 0,void 0,function*(){let a=yield function(e,t,a){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let r=format({format:"bytes32"},t,to),i=yield function(e,t){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["bytes32"],[t]),e.send({method:"eth_getTransactionByHash",params:[t]})})}(e.requestManager,r);return object_isNullish(i)?i:formatTransaction(i,a,{fillInputAndData:!0})})}(this,e,t);if(!a)throw new TransactionNotFound;return a})}getPendingTransactions(e=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e,t){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let a=yield function(e){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return e.send({method:"eth_pendingTransactions",params:[]})})}(e.requestManager);return a.map(e=>formatTransaction(e,t,{fillInputAndData:!0}))})}(this,e)})}getTransactionFromBlock(e=this.defaultBlock,t,a=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e,t=e.defaultBlock,a,r){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let i;let s=format({format:"uint"},a,td);if(isBytes(t)){let a=format({format:"bytes32"},t,td);i=yield function(e,t,a){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["bytes32","hex"],[t,a]),e.send({method:"eth_getTransactionByBlockHashAndIndex",params:[t,a]})})}(e.requestManager,a,s)}else{let a=block_isBlockTag(t)?t:format({format:"uint"},t,td);i=yield function(e,t,a){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["blockNumberOrTag","hex"],[t,a]),e.send({method:"eth_getTransactionByBlockNumberAndIndex",params:[t,a]})})}(e.requestManager,a,s)}return object_isNullish(i)?i:formatTransaction(i,r,{fillInputAndData:!0})})}(this,e,t,a)})}getTransactionReceipt(e,t=to){return web3_eth_awaiter(this,void 0,void 0,function*(){let a=yield rpc_method_wrappers_getTransactionReceipt(this,e,t);if(!a)throw new TransactionNotFound;return a})}getTransactionCount(e,t=this.defaultBlock,a=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return rpc_method_wrappers_getTransactionCount(this,e,t,a)})}sendTransaction(e,t=to,a){return rpc_method_wrappers_sendTransaction(this,e,t,a)}sendSignedTransaction(e,t=to,a){return function(e,t,a,r={checkRevertBeforeSending:!0}){let i=new Web3PromiEvent((s,n)=>{setImmediate(()=>{esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let o=new SendTxHelper({web3Context:e,promiEvent:i,options:r,returnFormat:a}),d=format({format:"bytes"},t,td),p=transactionFactory_TransactionFactory.fromSerializedData(bytesToUint8Array(converters_hexToBytes(d))),l=Object.assign(Object.assign({},p.toJSON()),{from:p.getSenderAddress().toString()});try{let{v:t,r,s:i}=l,n=__rest(l,["v","r","s"]);yield o.checkRevertBeforeSending(n),o.emitSending(d);let p=yield trySendTransaction(e,()=>esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){return sendRawTransaction(e.requestManager,d)}));o.emitSent(d);let m=format({format:"bytes32"},p,a);o.emitTransactionHash(m);let c=yield waitForTransactionReceipt(e,p,a),u=o.getReceiptWithEvents(format(aZ,c,a));o.emitReceipt(u),s((yield o.handleResolve({receipt:u,tx:l}))),o.emitConfirmation({receipt:u,transactionHash:p})}catch(e){n((yield o.handleError({error:e,tx:l})))}})})});return i}(this,e,t,a)}sign(e,t,a=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e,t,a,r){var i;return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let s=format({format:"bytes"},t,to);if(null===(i=e.wallet)||void 0===i?void 0:i.get(a)){let t=e.wallet.get(a),i=t.sign(s);return format(aG,i,r)}if("number"==typeof a)throw new SignatureError(t,'RPC method "eth_sign" does not support index signatures');let n=yield function(e,t,a){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["address","hex"],[t,a]),e.send({method:"eth_sign",params:[t,a]})})}(e.requestManager,a,s);return format({format:"bytes"},n,r)})}(this,e,t,a)})}signTransaction(e,t=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e,t,a){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let r=yield function(e,t){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return e.send({method:"eth_signTransaction",params:[t]})})}(e.requestManager,formatTransaction(t,td));return isString(r)?function(e,t,a={fillInputAndData:!1}){return{raw:format({format:"bytes"},e,t),tx:formatTransaction(Object.assign(Object.assign({},transactionFactory_TransactionFactory.fromSerializedData(converters_hexToBytes(e)).toJSON()),{hash:converters_bytesToHex(keccak256Wrapper(converters_hexToBytes(e))),type:detectRawTransactionType(converters_hexToBytes(e))}),t,{fillInputAndData:a.fillInputAndData})}}(r,a,{fillInputAndData:!0}):{raw:format({format:"bytes"},r.raw,a),tx:formatTransaction(r.tx,a,{fillInputAndData:!0})}})}(this,e,t)})}call(e,t=this.defaultBlock,a=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return rpc_method_wrappers_call(this,e,t,a)})}estimateGas(e,t=this.defaultBlock,a=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return rpc_method_wrappers_estimateGas(this,e,t,a)})}getPastLogs(e,t=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return rpc_method_wrappers_getLogs(this,e,t)})}getWork(){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return e.send({method:"eth_getWork",params:[]})})}(this.requestManager)})}submitWork(e,t,a){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e,t,a,r){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["bytes8","bytes32","bytes32"],[t,a,r]),e.send({method:"eth_submitWork",params:[t,a,r]})})}(this.requestManager,e,t,a)})}requestAccounts(){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return e.send({method:"eth_requestAccounts",params:[]})})}(this.requestManager)})}getChainId(e=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return rpc_method_wrappers_getChainId(this,e)})}getNodeInfo(){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return e.send({method:"web3_clientVersion",params:[]})})}(this.requestManager)})}getProof(e,t,a=this.defaultBlock,r=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e,t,a,r=e.defaultBlock,i){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let s=a.map(e=>format({format:"bytes"},e,td)),n=block_isBlockTag(r)?r:format({format:"uint"},r,td),o=yield function(e,t,a,r){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["address","bytes32[]","blockNumberOrTag"],[t,a,r]),e.send({method:"eth_getProof",params:[t,a,r]})})}(e.requestManager,t,s,n);return format(aq,o,i)})}(this,e,t,a,r)})}getFeeHistory(e,t=this.defaultBlock,a,r=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e,t,a=e.defaultBlock,r,i){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let s=format({format:"uint"},t,td),n=block_isBlockTag(a)?a:format({format:"uint"},a,td),o=format({type:"array",items:{format:"uint"}},r,aK),d=yield function(e,t,a,r){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){for(let e of(tc.validate(["hex","blockNumberOrTag"],[t,a]),r))tc.validate(["number"],[e]);return e.send({method:"eth_feeHistory",params:[t,a,r]})})}(e.requestManager,s,n,o);return format(aW,d,i)})}(this,e,t,a,r)})}createAccessList(e,t=this.defaultBlock,a=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return rpc_method_wrappers_createAccessList(this,e,t,a)})}signTypedData(e,t,a=!1,r=to){return web3_eth_awaiter(this,void 0,void 0,function*(){return function(e,t,a,r,i){return esm_rpc_method_wrappers_awaiter(this,void 0,void 0,function*(){let s=yield function(e,t,a,r=!1){return eth_rpc_methods_awaiter(this,void 0,void 0,function*(){return tc.validate(["address"],[t]),e.send({method:`eth_signTypedData${r?"":"_v4"}`,params:[t,a]})})}(e.requestManager,t,a,r);return format({format:"bytes"},s,i)})}(this,e,t,a,r)})}subscribe(e,t,a=to){var r;return web3_eth_awaiter(this,void 0,void 0,function*(){let i=yield null===(r=this.subscriptionManager)||void 0===r?void 0:r.subscribe(e,t,a);return i instanceof LogsSubscription&&"logs"===e&&"object"==typeof t&&!tB(t.fromBlock)&&Number.isFinite(Number(t.fromBlock))&&setImmediate(()=>{this.getPastLogs(t).then(e=>{for(let t of e)i._processSubscriptionResult(t)}).catch(e=>{i._processSubscriptionError(e)})}),i})}static shouldClearSubscription({sub:e}){return!(e instanceof SyncingSubscription)}clearSubscriptions(e=!1){var t;return null===(t=this.subscriptionManager)||void 0===t?void 0:t.unsubscribe(e?web3_eth_Web3Eth.shouldClearSubscription:void 0)}};let validateCustomChainInfo=e=>{if(!object_isNullish(e.common)){if(object_isNullish(e.common.customChain))throw new MissingCustomChainError;if(object_isNullish(e.common.customChain.chainId))throw new MissingCustomChainIdError;if(!object_isNullish(e.chainId)&&e.chainId!==e.common.customChain.chainId)throw new ChainIdMismatchError({txChainId:e.chainId,customChainId:e.common.customChain.chainId})}},validateChainInfo=e=>{if(!object_isNullish(e.common)&&!object_isNullish(e.chain)&&!object_isNullish(e.hardfork))throw new CommonOrChainAndHardforkError;if(!object_isNullish(e.chain)&&object_isNullish(e.hardfork)||!object_isNullish(e.hardfork)&&object_isNullish(e.chain))throw new MissingChainOrHardforkError({chain:e.chain,hardfork:e.hardfork})},validateBaseChain=e=>{if(!object_isNullish(e.common)&&!object_isNullish(e.common.baseChain)&&!object_isNullish(e.chain)&&e.chain!==e.common.baseChain)throw new ChainMismatchError({txChain:e.chain,baseChain:e.common.baseChain})},validateHardfork=e=>{if(!object_isNullish(e.common)&&!object_isNullish(e.common.hardfork)&&!object_isNullish(e.hardfork)&&e.hardfork!==e.common.hardfork)throw new HardforkMismatchError({txHardfork:e.hardfork,commonHardfork:e.common.hardfork})},validateLegacyGas=e=>{if(object_isNullish(e.gas)||!isUInt(e.gas)||object_isNullish(e.gasPrice)||!isUInt(e.gasPrice))throw new InvalidGasOrGasPrice({gas:e.gas,gasPrice:e.gasPrice});if(!object_isNullish(e.maxFeePerGas)||!object_isNullish(e.maxPriorityFeePerGas))throw new UnsupportedFeeMarketError({maxFeePerGas:e.maxFeePerGas,maxPriorityFeePerGas:e.maxPriorityFeePerGas})},validateFeeMarketGas=e=>{if(!object_isNullish(e.gasPrice)&&"0x2"===e.type)throw new Eip1559GasPriceError(e.gasPrice);if("0x0"===e.type||"0x1"===e.type)throw new UnsupportedFeeMarketError({maxFeePerGas:e.maxFeePerGas,maxPriorityFeePerGas:e.maxPriorityFeePerGas});if(object_isNullish(e.maxFeePerGas)||!isUInt(e.maxFeePerGas)||object_isNullish(e.maxPriorityFeePerGas)||!isUInt(e.maxPriorityFeePerGas))throw new InvalidMaxPriorityFeePerGasOrMaxFeePerGas({maxPriorityFeePerGas:e.maxPriorityFeePerGas,maxFeePerGas:e.maxFeePerGas})},validateGas=e=>{let t=!object_isNullish(e.gas)||!object_isNullish(e.gasLimit),a=t&&!object_isNullish(e.gasPrice),r=t&&!object_isNullish(e.maxPriorityFeePerGas)&&!object_isNullish(e.maxFeePerGas);if(!a&&!r)throw new MissingGasError({gas:e.gas,gasPrice:e.gasPrice,maxPriorityFeePerGas:e.maxPriorityFeePerGas,maxFeePerGas:e.maxFeePerGas});if(a&&r)throw new TransactionGasMismatchError({gas:e.gas,gasPrice:e.gasPrice,maxPriorityFeePerGas:e.maxPriorityFeePerGas,maxFeePerGas:e.maxFeePerGas});(a?validateLegacyGas:validateFeeMarketGas)(e),(!object_isNullish(e.type)&&e.type>"0x1"?validateFeeMarketGas:validateLegacyGas)(e)},validateTransactionForSigning=(e,t)=>{if(!object_isNullish(t)){t(e);return}if("object"!=typeof e||object_isNullish(e))throw new InvalidTransactionObjectError(e);validateCustomChainInfo(e),validateChainInfo(e),validateBaseChain(e),validateHardfork(e);let a=formatTransaction(e,td);if(validateGas(a),object_isNullish(a.nonce)||object_isNullish(a.chainId)||a.nonce.startsWith("-")||a.chainId.startsWith("-"))throw new InvalidNonceOrChainIdError({nonce:e.nonce,chainId:e.chainId})},getEthereumjsTxDataFromTransaction=e=>{var t,a;return{nonce:e.nonce,gasPrice:e.gasPrice,gasLimit:null!==(t=e.gasLimit)&&void 0!==t?t:e.gas,to:e.to,value:e.value,data:null!==(a=e.data)&&void 0!==a?a:e.input,type:e.type,chainId:e.chainId,accessList:e.accessList,maxPriorityFeePerGas:e.maxPriorityFeePerGas,maxFeePerGas:e.maxFeePerGas}},getEthereumjsTransactionOptions=(e,t)=>{var a,r,i,s,n,o,d,p,l,m,c,u,f,v,g,y,b,_;let w;let A=!object_isNullish(e.chain)&&!object_isNullish(e.hardfork)||!object_isNullish(e.common);if(A){let a=null!==(o=null!==(n=null===(s=null===(i=null==e?void 0:e.common)||void 0===i?void 0:i.customChain)||void 0===s?void 0:s.name)&&void 0!==n?n:e.chain)&&void 0!==o?o:"custom-network",r=converters_toNumber(null!==(l=null===(p=null===(d=null==e?void 0:e.common)||void 0===d?void 0:d.customChain)||void 0===p?void 0:p.chainId)&&void 0!==l?l:null==e?void 0:e.chainId),A=converters_toNumber(null!==(u=null===(c=null===(m=null==e?void 0:e.common)||void 0===m?void 0:m.customChain)||void 0===c?void 0:c.networkId)&&void 0!==u?u:null==e?void 0:e.networkId),E=null!==(g=null!==(v=null===(f=null==e?void 0:e.common)||void 0===f?void 0:f.hardfork)&&void 0!==v?v:null==e?void 0:e.hardfork)&&void 0!==g?g:t.defaultHardfork,x=null!==(_=null!==(b=null===(y=e.common)||void 0===y?void 0:y.baseChain)&&void 0!==b?b:e.chain)&&void 0!==_?_:t.defaultChain;r&&A&&a&&(w=Common.custom({name:a,chainId:r,networkId:A,defaultHardfork:E},{baseChain:x}))}else t.defaultCommon?(object_isNullish((w=t.defaultCommon).hardfork)&&(w.hardfork=null!==(a=e.hardfork)&&void 0!==a?a:t.defaultHardfork),object_isNullish(w.baseChain)&&(w.baseChain=t.defaultChain)):w=Common.custom({name:"custom-network",chainId:converters_toNumber(e.chainId),networkId:object_isNullish(e.networkId)?void 0:converters_toNumber(e.networkId),defaultHardfork:null!==(r=e.hardfork)&&void 0!==r?r:t.defaultHardfork},{baseChain:t.defaultChain});return{common:w}},prepareTransactionForSigning=(e,t,a,r=!1,i=!0)=>(function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})})(void 0,void 0,void 0,function*(){let s=yield transactionBuilder({transaction:e,web3Context:t,privateKey:a,fillGasPrice:r,fillGasLimit:i}),n=formatTransaction(s,td);return validateTransactionForSigning(n),transactionFactory_TransactionFactory.fromTxData(getEthereumjsTxDataFromTransaction(n),getEthereumjsTransactionOptions(n,t))}),encodeEventABI=({address:e},t,a)=>{var r,i;let s=null==a?void 0:a.topics,n=null!==(r=null==a?void 0:a.filter)&&void 0!==r?r:{},o={};if(tB(null==a?void 0:a.fromBlock)||(o.fromBlock=format(aH.properties.number,null==a?void 0:a.fromBlock,{number:I.HEX,bytes:k.HEX})),tB(null==a?void 0:a.toBlock)||(o.toBlock=format(aH.properties.number,null==a?void 0:a.toBlock,{number:I.HEX,bytes:k.HEX})),s&&Array.isArray(s))o.topics=[...s];else if(o.topics=[],!t||t.anonymous||[az,"allEvents"].includes(t.name)||o.topics.push(null!==(i=t.signature)&&void 0!==i?i:encodeEventSignature(jsonInterfaceMethodToString(t))),![az,"allEvents"].includes(t.name)&&t.inputs)for(let e of t.inputs){if(!e.indexed)continue;let t=n[e.name];if(!t){o.topics.push(null);continue}Array.isArray(t)?o.topics.push(t.map(t=>encodeParameter(e.type,t))):"string"===e.type?o.topics.push(keccak256Wrapper(t)):o.topics.push(encodeParameter(e.type,t))}return o.topics.length||delete o.topics,e&&(o.address=e.toLowerCase()),o},encodeMethodABI=(e,t,a)=>{let r=Array.isArray(e.inputs)?e.inputs.length:0;if(r!==t.length)throw new Web3ContractError(`The number of arguments is not matching the methods required number. You need to pass ${r} arguments.`);let i=parameters_api_encodeParameters(Array.isArray(e.inputs)?e.inputs:[],t).replace("0x","");if(isAbiConstructorFragment(e)){if(!a)throw new Web3ContractError("The contract has no contract data option set. This is necessary to append the constructor parameters.");return a.startsWith("0x")?`${a}${i}`:`0x${a}${i}`}return`${encodeFunctionSignature(e)}${i}`},decodeMethodReturn=(e,t)=>{if("constructor"===e.type)return t;if(!t)return null;let a=t.length>=2?t.slice(2):t;if(!e.outputs)return null;let r=parameters_api_decodeParameters([...e.outputs],a);return 1===r.__length__?r[0]:r};let log_subscription_LogsSubscription=class log_subscription_LogsSubscription extends Web3Subscription{constructor(e,t){super(e,t),this.address=e.address,this.topics=e.topics,this.abi=e.abi,this.jsonInterface=e.jsonInterface}_buildSubscriptionParams(){return["logs",{address:this.address,topics:this.topics}]}formatSubscriptionResult(e){return decodeEventABI(this.abi,e,this.jsonInterface,super.returnFormat)}};let dataInputEncodeMethodHelper=(e,t,a,r)=>{var i,s;let n={};return tB(e.data)&&"both"!==r||(n.data=encodeMethodABI(t,a,null!==(i=e.data)&&void 0!==i?i:e.input)),tB(e.input)&&"both"!==r||(n.input=encodeMethodABI(t,a,null!==(s=e.input)&&void 0!==s?s:e.data)),tB(n.input)&&tB(n.data)&&(n[r]=encodeMethodABI(t,a)),{data:n.data,input:n.input}},getSendTxParams=({abi:e,params:t,options:a,contractOptions:r})=>{var i,s,n;let o=null!==(n=null!==(s=null!==(i=null==a?void 0:a.input)&&void 0!==i?i:null==a?void 0:a.data)&&void 0!==s?s:r.input)&&void 0!==n?n:r.data;if(!o&&!(null==a?void 0:a.to)&&!r.address)throw new Web3ContractError("Contract address not specified");if(!(null==a?void 0:a.from)&&!r.from)throw new Web3ContractError('Contract "from" address not specified');let d=objects_mergeDeep({to:r.address,gas:r.gas,gasPrice:r.gasPrice,from:r.from,input:r.input,maxPriorityFeePerGas:r.maxPriorityFeePerGas,maxFeePerGas:r.maxFeePerGas,data:r.data},a),p=dataInputEncodeMethodHelper(d,e,t,null==a?void 0:a.dataInputFill);return Object.assign(Object.assign({},d),{data:p.data,input:p.input})},getEthTxCallParams=({abi:e,params:t,options:a,contractOptions:r})=>{if(!(null==a?void 0:a.to)&&!r.address)throw new Web3ContractError("Contract address not specified");let i=objects_mergeDeep({to:r.address,gas:r.gas,gasPrice:r.gasPrice,from:r.from,input:r.input,maxPriorityFeePerGas:r.maxPriorityFeePerGas,maxFeePerGas:r.maxFeePerGas,data:r.data},a),s=dataInputEncodeMethodHelper(i,e,t,null==a?void 0:a.dataInputFill);return Object.assign(Object.assign({},i),{data:s.data,input:s.input})},getEstimateGasParams=({abi:e,params:t,options:a,contractOptions:r})=>{let i=objects_mergeDeep({to:r.address,gas:r.gas,gasPrice:r.gasPrice,from:r.from,input:r.input,data:r.data},a),s=dataInputEncodeMethodHelper(i,e,t,null==a?void 0:a.dataInputFill);return Object.assign(Object.assign({},i),{data:s.data,input:s.input})},isWeb3ContractContext=e=>"object"==typeof e&&!tB(e)&&0!==Object.keys(e).length&&!isContractInitOptions(e),getCreateAccessListParams=({abi:e,params:t,options:a,contractOptions:r})=>{if(!(null==a?void 0:a.to)&&!r.address)throw new Web3ContractError("Contract address not specified");if(!(null==a?void 0:a.from)&&!r.from)throw new Web3ContractError('Contract "from" address not specified');let i=objects_mergeDeep({to:r.address,gas:r.gas,gasPrice:r.gasPrice,from:r.from,input:r.input,maxPriorityFeePerGas:r.maxPriorityFeePerGas,maxFeePerGas:r.maxFeePerGas,data:r.data},a),s=dataInputEncodeMethodHelper(i,e,t,null==a?void 0:a.dataInputFill);return Object.assign(Object.assign({},i),{data:s.data,input:s.input})};var contract_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let ro={logs:log_subscription_LogsSubscription,newHeads:NewHeadsSubscription,newBlockHeaders:NewHeadsSubscription};let Contract=class Contract extends Web3Context{constructor(e,t,a,r,i){var s,n,o;let d;let p=isContractInitOptions(t)?t:isContractInitOptions(a)?a:void 0;if(super(Object.assign(Object.assign({},d=isWeb3ContractContext(t)?t:isWeb3ContractContext(a)?a:r),{provider:"object"==typeof t&&"provider"in t?t.provider:"object"==typeof a&&"provider"in a?a.provider:"object"==typeof r&&"provider"in r?r.provider:Contract.givenProvider,registeredSubscriptions:ro})),this.syncWithContext=!1,this._functions={},!object_isNullish(p)&&!object_isNullish(p.data)&&!object_isNullish(p.input)&&"both"!==this.config.contractDataInputFill)throw new ContractTransactionDataAndInputError({data:p.data,input:p.input});this._overloadedMethodAbis=new Map;let l=isDataFormat(r)?r:isDataFormat(a)?a:null!=i?i:to,m="string"==typeof t?t:void 0;this.config.contractDataInputFill=null!==(s=null==p?void 0:p.dataInputFill)&&void 0!==s?s:this.config.contractDataInputFill,this._parseAndSetJsonInterface(e,l),object_isNullish(m)||this._parseAndSetAddress(m,l),this.options={address:m,jsonInterface:this._jsonInterface,gas:null!==(n=null==p?void 0:p.gas)&&void 0!==n?n:null==p?void 0:p.gasLimit,gasPrice:null==p?void 0:p.gasPrice,from:null==p?void 0:p.from,input:null==p?void 0:p.input,data:null==p?void 0:p.data},this.syncWithContext=null!==(o=null==p?void 0:p.syncWithContext)&&void 0!==o&&o,d instanceof Web3Context&&this.subscribeToContextEvents(d),Object.defineProperty(this.options,"address",{set:e=>this._parseAndSetAddress(e,l),get:()=>this._address}),Object.defineProperty(this.options,"jsonInterface",{set:e=>this._parseAndSetJsonInterface(e,l),get:()=>this._jsonInterface}),d instanceof Web3Context&&d.on(P.CONFIG_CHANGE,e=>{this.setConfig({[e.name]:e.newValue})})}get events(){return this._events}get methods(){return this._methods}clone(){let e;return e=this.options.address?new Contract([...this._jsonInterface,...this._errorsInterface],this.options.address,{gas:this.options.gas,gasPrice:this.options.gasPrice,from:this.options.from,input:this.options.input,data:this.options.data,provider:this.currentProvider,syncWithContext:this.syncWithContext,dataInputFill:this.config.contractDataInputFill},this.getContextObject()):new Contract([...this._jsonInterface,...this._errorsInterface],{gas:this.options.gas,gasPrice:this.options.gasPrice,from:this.options.from,input:this.options.input,data:this.options.data,provider:this.currentProvider,syncWithContext:this.syncWithContext,dataInputFill:this.config.contractDataInputFill},this.getContextObject()),this.context&&e.subscribeToContextEvents(this.context),e}deploy(e){var t,a,r;let i=this._jsonInterface.find(e=>"constructor"===e.type);i||(i={type:"constructor",inputs:[],stateMutability:""});let s=format({format:"bytes"},null!==(t=null==e?void 0:e.input)&&void 0!==t?t:this.options.input,to),n=format({format:"bytes"},null!==(a=null==e?void 0:e.data)&&void 0!==a?a:this.options.data,to);if((!s||"0x"===s.trim())&&(!n||"0x"===n.trim()))throw new Web3ContractError("contract creation without any data provided.");let o=null!==(r=null==e?void 0:e.arguments)&&void 0!==r?r:[],d=Object.assign(Object.assign({},this.options),{input:s,data:n}),p=null!=s?s:n;return{arguments:o,send:e=>{let t=Object.assign({},e);return this._contractMethodDeploySend(i,o,t,d)},estimateGas:(e,t=to)=>contract_awaiter(this,void 0,void 0,function*(){let a=Object.assign({},e);return this._contractMethodEstimateGas({abi:i,params:o,returnFormat:t,options:a,contractOptions:d})}),encodeABI:()=>encodeMethodABI(i,o,format({format:"bytes"},p,to))}}getPastEvents(e,t,a){var r;return contract_awaiter(this,void 0,void 0,function*(){let i="string"==typeof e?e:az,s="string"==typeof e||isDataFormat(e)?isDataFormat(t)?{}:t:e,n=isDataFormat(e)?e:isDataFormat(t)?t:null!=a?a:to,o="allEvents"===i||i===az?aQ:this._jsonInterface.find(e=>"name"in e&&e.name===i);if(!o)throw new Web3ContractError(`Event ${i} not found.`);let{fromBlock:d,toBlock:p,topics:l,address:m}=encodeEventABI(this.options,o,null!=s?s:{}),c=yield rpc_method_wrappers_getLogs(this,{fromBlock:d,toBlock:p,topics:l,address:m},n),u=c.map(e=>"string"==typeof e?e:decodeEventABI(o,e,this._jsonInterface,n)),f=null!==(r=null==s?void 0:s.filter)&&void 0!==r?r:{},v=Object.keys(f);return v.length>0?u.filter(e=>"string"==typeof e||v.every(t=>{var a;if(Array.isArray(f[t]))return f[t].some(a=>String(e.returnValues[t]).toUpperCase()===String(a).toUpperCase());let r=null===(a=o.inputs)||void 0===a?void 0:a.filter(e=>e.name===t)[0];if((null==r?void 0:r.indexed)&&"string"===r.type){let a=keccak256Wrapper(f[t]);if(a===String(e.returnValues[t]))return!0}return String(e.returnValues[t]).toUpperCase()===String(f[t]).toUpperCase()})):u})}_parseAndSetAddress(e,t=to){this._address=e?converters_toChecksumAddress(format({format:"address"},e,t)):e}_parseAndSetJsonInterface(e,t=to){var a,r,i,s,n;this._functions={},this._methods={},this._events={};let o=[],d=e.filter(e=>"error"!==e.type),p=e.filter(e=>isAbiErrorFragment(e));for(let e of d){let d=Object.assign(Object.assign({},e),{signature:""});if(isAbiFunctionFragment(d)){let e=jsonInterfaceMethodToString(d),t=encodeFunctionSignature(e);d.signature=t,a="view"===d.stateMutability,d.constant=null!==(r=void 0!==a?a:"pure"===d.stateMutability)&&void 0!==r?r:d.constant,i="payable"===d.stateMutability,d.payable=void 0!==i?i:d.payable,this._overloadedMethodAbis.set(d.name,[...null!==(s=this._overloadedMethodAbis.get(d.name))&&void 0!==s?s:[],d]);let o=null!==(n=this._overloadedMethodAbis.get(d.name))&&void 0!==n?n:[],l=this._createContractMethod(o,p);this._functions[e]={signature:t,method:l},this._methods[d.name]=this._functions[e].method,this._methods[e]=this._functions[e].method,this._methods[t]=this._functions[e].method}else if(isAbiEventFragment(d)){let e=jsonInterfaceMethodToString(d),a=encodeEventSignature(e),r=this._createContractEvent(d,t);d.signature=a,e in this._events&&"bound"!==d.name||(this._events[e]=r),this._events[d.name]=r,this._events[a]=r}o=[...o,d]}this._events.allEvents=this._createContractEvent(aQ,t),this._jsonInterface=[...o],this._errorsInterface=p}_getAbiParams(e,t){var a;try{return transformJsonDataToAbiFormat(null!==(a=e.inputs)&&void 0!==a?a:[],t)}catch(t){throw new Web3ContractError(`Invalid parameters for method ${e.name}: ${t.message}`)}}_createContractMethod(e,t){let a=e[e.length-1];return(...e)=>{var r,i;let s;let n=null!==(r=this._overloadedMethodAbis.get(a.name))&&void 0!==r?r:[],o=n[0],d=n.filter(t=>{var a;return(null!==(a=t.inputs)&&void 0!==a?a:[]).length===e.length});if(1===n.length||0===d.length)s=this._getAbiParams(o,e),tc.validate(null!==(i=a.inputs)&&void 0!==i?i:[],s);else{let t=[];for(let a of d)try{s=this._getAbiParams(a,e),tc.validate(a.inputs,s),o=a;break}catch(e){t.push(e)}if(t.length===d.length)throw new Web3ValidatorError(t)}let p={arguments:s,call:(e,a)=>contract_awaiter(this,void 0,void 0,function*(){return this._contractMethodCall(o,s,t,e,a)}),send:e=>this._contractMethodSend(o,s,t,e),estimateGas:(e,t=to)=>contract_awaiter(this,void 0,void 0,function*(){return this._contractMethodEstimateGas({abi:o,params:s,returnFormat:t,options:e})}),encodeABI:()=>encodeMethodABI(o,s),createAccessList:(e,a)=>contract_awaiter(this,void 0,void 0,function*(){return this._contractMethodCreateAccessList(o,s,t,e,a)})};return o.stateMutability,p}}_contractMethodCall(e,t,a,r,i){var s;return contract_awaiter(this,void 0,void 0,function*(){let n=getEthTxCallParams({abi:e,params:t,options:Object.assign(Object.assign({},r),{dataInputFill:this.config.contractDataInputFill}),contractOptions:Object.assign(Object.assign({},this.options),{from:null!==(s=this.options.from)&&void 0!==s?s:this.config.defaultAccount})});try{let t=yield rpc_method_wrappers_call(this,n,i,to);return decodeMethodReturn(e,t)}catch(e){throw e instanceof ContractExecutionError&&decodeContractErrorData(a,e.innerError),e}})}_contractMethodCreateAccessList(e,t,a,r,i){var s;return contract_awaiter(this,void 0,void 0,function*(){let n=getCreateAccessListParams({abi:e,params:t,options:Object.assign(Object.assign({},r),{dataInputFill:this.config.contractDataInputFill}),contractOptions:Object.assign(Object.assign({},this.options),{from:null!==(s=this.options.from)&&void 0!==s?s:this.config.defaultAccount})});try{return rpc_method_wrappers_createAccessList(this,n,i,to)}catch(e){throw e instanceof ContractExecutionError&&decodeContractErrorData(a,e.innerError),e}})}_contractMethodSend(e,t,a,r,i){var s,n;let o=null!=i?i:this.options;o=Object.assign(Object.assign({},o),{input:void 0,from:null!==(n=null!==(s=o.from)&&void 0!==s?s:this.defaultAccount)&&void 0!==n?n:void 0});let d=getSendTxParams({abi:e,params:t,options:Object.assign(Object.assign({},r),{dataInputFill:this.config.contractDataInputFill}),contractOptions:o}),p=rpc_method_wrappers_sendTransaction(this,d,to,{checkRevertBeforeSending:!1,contractAbi:this._jsonInterface});return p.on("error",e=>{e instanceof ContractExecutionError&&decodeContractErrorData(a,e.innerError)}),p}_contractMethodDeploySend(e,t,a,r){var i,s;let n=null!=r?r:this.options;n=Object.assign(Object.assign({},n),{from:null!==(s=null!==(i=n.from)&&void 0!==i?i:this.defaultAccount)&&void 0!==s?s:void 0});let o=getSendTxParams({abi:e,params:t,options:Object.assign(Object.assign({},a),{dataInputFill:this.config.contractDataInputFill}),contractOptions:n});return rpc_method_wrappers_sendTransaction(this,o,to,{transactionResolver:e=>{if(e.status===BigInt(0))throw new Web3ContractError("code couldn't be stored",e);let t=this.clone();return t.options.address=e.contractAddress,t},contractAbi:this._jsonInterface,checkRevertBeforeSending:!1})}_contractMethodEstimateGas({abi:e,params:t,returnFormat:a,options:r,contractOptions:i}){return contract_awaiter(this,void 0,void 0,function*(){let s=getEstimateGasParams({abi:e,params:t,options:Object.assign(Object.assign({},r),{dataInputFill:this.config.contractDataInputFill}),contractOptions:null!=i?i:this.options});return rpc_method_wrappers_estimateGas(this,s,C.LATEST,a)})}_createContractEvent(e,t=to){return(...a)=>{var r;let{topics:i,fromBlock:s}=encodeEventABI(this.options,e,a[0]),n=new log_subscription_LogsSubscription({address:this.options.address,topics:i,abi:e,jsonInterface:this._jsonInterface},{subscriptionManager:this.subscriptionManager,returnFormat:t});return object_isNullish(s)||this.getPastEvents(e.name,{fromBlock:s,topics:i},t).then(e=>{e.forEach(e=>n.emit("data",e))}).catch(e=>{n.emit("error",new SubscriptionError("Failed to get past events.",e))}),null===(r=this.subscriptionManager)||void 0===r||r.addSubscription(n).catch(e=>{n.emit("error",new SubscriptionError("Failed to subscribe.",e))}),n}}subscribeToContextEvents(e){let t=this;this.context=e,t.syncWithContext&&e.on(P.CONFIG_CHANGE,e=>{t.setConfig({[e.name]:e.newValue})})}};let rd=Contract,rp={addr:"0x3b3b57de",name:"0x691f3431",abi:"0x2203ab56",pubkey:"0xc8690233",text:"0x59d1d43c",contenthash:"0xbc1c58d1"},rl={main:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",goerli:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"},rm={"0x1":"main","0x5":"goerli"},rc=[{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"node",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"label",type:"bytes32"},{indexed:!1,internalType:"address",name:"owner",type:"address"}],name:"NewOwner",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"node",type:"bytes32"},{indexed:!1,internalType:"address",name:"resolver",type:"address"}],name:"NewResolver",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"node",type:"bytes32"},{indexed:!1,internalType:"address",name:"owner",type:"address"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"node",type:"bytes32"}],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"node",type:"bytes32"}],name:"recordExists",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"node",type:"bytes32"}],name:"resolver",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"node",type:"bytes32"}],name:"ttl",outputs:[{internalType:"uint64",name:"",type:"uint64"}],stateMutability:"view",type:"function"}],ru=[{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"node",type:"bytes32"},{indexed:!1,internalType:"address",name:"a",type:"address"}],name:"AddrChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"node",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"coinType",type:"uint256"},{indexed:!1,internalType:"bytes",name:"newAddress",type:"bytes"}],name:"AddressChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"node",type:"bytes32"},{indexed:!1,internalType:"bytes",name:"hash",type:"bytes"}],name:"ContenthashChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"node",type:"bytes32"},{indexed:!1,internalType:"bytes",name:"name",type:"bytes"},{indexed:!1,internalType:"uint16",name:"resource",type:"uint16"},{indexed:!1,internalType:"bytes",name:"record",type:"bytes"}],name:"DNSRecordChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"node",type:"bytes32"},{indexed:!1,internalType:"bytes",name:"name",type:"bytes"},{indexed:!1,internalType:"uint16",name:"resource",type:"uint16"}],name:"DNSRecordDeleted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"node",type:"bytes32"}],name:"DNSZoneCleared",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"node",type:"bytes32"},{indexed:!1,internalType:"bytes",name:"lastzonehash",type:"bytes"},{indexed:!1,internalType:"bytes",name:"zonehash",type:"bytes"}],name:"DNSZonehashChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"node",type:"bytes32"},{indexed:!0,internalType:"bytes4",name:"interfaceID",type:"bytes4"},{indexed:!1,internalType:"address",name:"implementer",type:"address"}],name:"InterfaceChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"node",type:"bytes32"},{indexed:!1,internalType:"string",name:"name",type:"string"}],name:"NameChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"node",type:"bytes32"},{indexed:!1,internalType:"bytes32",name:"x",type:"bytes32"},{indexed:!1,internalType:"bytes32",name:"y",type:"bytes32"}],name:"PubkeyChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"node",type:"bytes32"},{indexed:!0,internalType:"string",name:"indexedKey",type:"string"},{indexed:!1,internalType:"string",name:"key",type:"string"}],name:"TextChanged",type:"event"},{inputs:[{internalType:"bytes32",name:"node",type:"bytes32"},{internalType:"uint256",name:"contentTypes",type:"uint256"}],name:"ABI",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"node",type:"bytes32"}],name:"addr",outputs:[{internalType:"address payable",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"node",type:"bytes32"},{internalType:"uint256",name:"coinType",type:"uint256"}],name:"addr",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"node",type:"bytes32"}],name:"contenthash",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"node",type:"bytes32"},{internalType:"bytes32",name:"name",type:"bytes32"},{internalType:"uint16",name:"resource",type:"uint16"}],name:"dnsRecord",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"node",type:"bytes32"},{internalType:"bytes32",name:"name",type:"bytes32"}],name:"hasDNSRecords",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"node",type:"bytes32"},{internalType:"bytes4",name:"interfaceID",type:"bytes4"}],name:"interfaceImplementer",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"node",type:"bytes32"}],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"node",type:"bytes32"}],name:"pubkey",outputs:[{internalType:"bytes32",name:"x",type:"bytes32"},{internalType:"bytes32",name:"y",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceID",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"node",type:"bytes32"},{internalType:"string",name:"key",type:"string"}],name:"text",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"node",type:"bytes32"}],name:"zonehash",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"}],rh=new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]);function read_compressed_payload(e){var t;let a;return t=function(e){let t=0;function u16(){return e[t++]<<8|e[t++]}let a=u16(),r=1,i=[0,1];for(let e=1;e<a;e++)i.push(r+=u16());let s=u16(),n=t;t+=s;let o=0,d=0;function read_bit(){return 0==o&&(d=d<<8|e[t++],o=8),d>>--o&1}let p=2147483648-1,l=0;for(let e=0;e<31;e++)l=l<<1|read_bit();let m=[],c=0,u=2147483648;for(;;){let e=Math.floor(((l-c+1)*r-1)/u),t=0,s=a;for(;s-t>1;){let a=t+s>>>1;e<i[a]?s=a:t=a}if(0==t)break;m.push(t);let n=c+Math.floor(u*i[t]/r),o=c+Math.floor(u*i[t+1]/r)-1;for(;((n^o)&1073741824)==0;)l=l<<1&p|read_bit(),n=n<<1&p,o=o<<1&p|1;for(;n&~o&536870912;)l=1073741824&l|l<<1&p>>>1|read_bit(),n=n<<1^1073741824,o=(1073741824^o)<<1|1073741825;c=n,u=1+o-n}let f=a-4;return m.map(t=>{switch(t-f){case 3:return f+65792+(e[n++]<<16|e[n++]<<8|e[n++]);case 2:return f+256+(e[n++]<<8|e[n++]);case 1:return f+e[n++];default:return t-1}})}(function(e){let t=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach((e,a)=>t[e.charCodeAt(0)]=a);let a=e.length,r=new Uint8Array(6*a>>3);for(let i=0,s=0,n=0,o=0;i<a;i++)o=o<<6|t[e.charCodeAt(i)],(n+=6)>=8&&(r[s++]=o>>(n-=8));return r}(e)),a=0,()=>t[a++]}function read_sorted(e,t=0){let a=[];for(;;){let r=e(),i=e();if(!i)break;t+=r;for(let e=0;e<i;e++)a.push(t+e);t+=i+1}return a}function read_sorted_arrays(e){return read_array_while(()=>{let t=read_sorted(e);if(t.length)return t})}function read_mapped(e){let t=[];for(;;){let a=e();if(0==a)break;t.push(function(e,t){let a=1+t(),r=t(),i=read_array_while(t);return read_transposed(i.length,1+e,t).flatMap((e,t)=>{let[s,...n]=e;return Array(i[t]).fill().map((e,t)=>{let i=t*r;return[s+t*a,n.map(e=>e+i)]})})}(a,e))}for(;;){let a=e()-1;if(a<0)break;t.push(read_transposed(1+e(),1+a,e).map(e=>[e[0],e.slice(1)]))}return t.flat()}function read_array_while(e){let t=[];for(;;){let a=e(t.length);if(!a)break;t.push(a)}return t}function read_transposed(e,t,a){let r=Array(e).fill().map(()=>[]);for(let i=0;i<t;i++)(function(e,t){let a=Array(e);for(let i=0,s=0;i<e;i++){var r;a[i]=s+=1&(r=t())?~r>>1:r>>1}return a})(e,a).forEach((e,t)=>r[t].push(e));return r}function quote_cp(e){return`{${e.toString(16).toUpperCase().padStart(2,"0")}}`}function str_from_cps(e){let t=e.length;if(t<4096)return String.fromCodePoint(...e);let a=[];for(let r=0;r<t;)a.push(String.fromCodePoint(...e.slice(r,r+=4096)));return a.join("")}function compare_arrays(e,t){let a=e.length,r=a-t.length;for(let i=0;0==r&&i<a;i++)r=e[i]-t[i];return r}function unpack_cc(e){return e>>24&255}function unpack_cp(e){return 16777215&e}function is_hangul(e){return e>=44032&&e<55204}function decomposed(e){n||function(){let e=read_compressed_payload("AEUDTAHBCFQATQDRADAAcgAgADQAFAAsABQAHwAOACQADQARAAoAFwAHABIACAAPAAUACwAFAAwABAAQAAMABwAEAAoABQAIAAIACgABAAQAFAALAAIACwABAAIAAQAHAAMAAwAEAAsADAAMAAwACgANAA0AAwAKAAkABAAdAAYAZwDSAdsDJgC0CkMB8xhZAqfoC190UGcThgBurwf7PT09Pb09AjgJum8OjDllxHYUKXAPxzq6tABAxgK8ysUvWAgMPT09PT09PSs6LT2HcgWXWwFLoSMEEEl5RFVMKvO0XQ8ExDdJMnIgsj26PTQyy8FfEQ8AY8IPAGcEbwRwBHEEcgRzBHQEdQR2BHcEeAR6BHsEfAR+BIAEgfndBQoBYgULAWIFDAFiBNcE2ATZBRAFEQUvBdALFAsVDPcNBw13DYcOMA4xDjMB4BllHI0B2grbAMDpHLkQ7QHVAPRNQQFnGRUEg0yEB2uaJF8AJpIBpob5AERSMAKNoAXqaQLUBMCzEiACnwRZEkkVsS7tANAsBG0RuAQLEPABv9HICTUBXigPZwRBApMDOwAamhtaABqEAY8KvKx3LQ4ArAB8UhwEBAVSagD8AEFZADkBIadVj2UMUgx5Il4ANQC9AxIB1BlbEPMAs30CGxlXAhwZKQIECBc6EbsCoxngzv7UzRQA8M0BawL6ZwkN7wABAD33OQRcsgLJCjMCjqUChtw/km+NAsXPAoP2BT84PwURAK0RAvptb6cApQS/OMMey5HJS84UdxpxTPkCogVFITaTOwERAK5pAvkNBOVyA7q3BKlOJSALAgUIBRcEdASpBXqzABXFSWZOawLCOqw//AolCZdvv3dSBkEQGyelEPcMMwG1ATsN7UvYBPEGOwTJH30ZGQ/NlZwIpS3dDO0m4y6hgFoj9SqDBe1L9DzdC01RaA9ZC2UJ4zpjgU4DIQENIosK3Q05CG0Q8wrJaw3lEUUHOQPVSZoApQcBCxEdNRW1JhBirAsJOXcG+xr2C48mrxMpevwF0xohBk0BKRr/AM8u54WwWjFcHE9fBgMLJSPHFKhQIA0lQLd4SBobBxUlqQKRQ3BKh1E2HpMh9jw9DWYuE1F8B/U8BRlPC4E8nkarRQ4R0j6NPUgiSUwsBDV/LC8niwnPD4UMuXxyAVkJIQmxDHETMREXN8UIOQcZLZckJxUIIUaVYJoE958D8xPRAwsFPwlBBxMDtRwtEy4VKQUNgSTXAvM21S6zAo9WgAEXBcsPJR/fEFBH4A7pCJsCZQODJesALRUhABcimwhDYwBfj9hTBS7LCMdqbCN0A2cU52ERcweRDlcHpxwzFb8c4XDIXguGCCijrwlbAXUJmQFfBOMICTVbjKAgQWdTi1gYmyBhQT9d/AIxDGUVn0S9h3gCiw9rEhsBNQFzBzkNAQJ3Ee0RaxCVCOuGBDW1M/g6JQRPIYMgEQonA09szgsnJvkM+GkBoxJiAww0PXfuZ6tgtiQX/QcZMsVBYCHxC5JPzQycGsEYQlQuGeQHvwPzGvMn6kFXBf8DowMTOk0z7gS9C2kIiwk/AEkOoxcH1xhqCnGM0AExiwG3mQNXkYMCb48GNwcLAGcLhwV55QAdAqcIowAFAM8DVwA5Aq0HnQAZAIVBAT0DJy8BIeUCjwOTCDHLAZUvAfMpBBvDDBUA9zduSgLDsQKAamaiBd1YAo4CSTUBTSUEBU5HUQOvceEA2wBLBhPfRwEVq0rLGuNDAd9vKwDHAPsABTUHBUEBzQHzbQC3AV8LMQmis7UBTekpAIMAFWsB1wKJAN0ANQB/8QFTAE0FWfkF0wJPSQERMRgrV2EBuwMfATMBDQB5BsuNpckHHwRtB9MCEBsV4QLvLge1AQMi3xPNQsUCvd5VoWACZIECYkJbTa9bNyACofcCaJgCZgkCn4Q4GwsCZjsCZiYEbgR/A38TA36SOQY5dxc5gjojIwJsHQIyNjgKAm3HAm2u74ozZ0UrAWcA3gDhAEoFB5gMjQD+C8IADbUCdy8CdqI/AnlLQwJ4uh1c20WuRtcCfD8CesgCfQkCfPAFWQUgSABIfWMkAoFtAoAAAoAFAn+uSVhKWxUXSswC0QEC0MxLJwOITwOH5kTFkTIC8qFdAwMDrkvOTC0lA89NTE2vAos/AorYwRsHHUNnBbcCjjcCjlxAl4ECjtkCjlx4UbRTNQpS1FSFApP7ApMMAOkAHFUeVa9V0AYsGymVhjLheGZFOzkCl58C77JYIagAWSUClo8ClnycAKlZrFoJgU0AOwKWtQKWTlxEXNECmcsCmWRcyl0HGQKcmznCOp0CnBYCn5sCnriKAB0PMSoPAp3xAp6SALU9YTRh7wKe0wKgbgGpAp6fHwKeTqVjyGQnJSsCJ68CJn4CoPsCoEwCot0CocQCpi8Cpc4Cp/8AfQKn8mh8aLEAA0lqHGrRAqzjAqyuAq1nAq0CAlcdAlXcArHh1wMfTmyXArK9DQKy6Bds4G1jbUhfAyXNArZcOz9ukAMpRQK4XgK5RxUCuSp3cDZw4QK9GQK72nCWAzIRAr6IcgIDM3ECvhpzInNPAsPLAsMEc4J0SzVFdOADPKcDPJoDPb8CxXwCxkcCxhCJAshpUQLIRALJTwLJLgJknQLd0nh5YXiueSVL0AMYo2cCAmH0GfOVJHsLXpJeuxECz2sCz2wvS1PS8xOfAMatAs9zASnqA04SfksFAtwnAtuKAtJPA1JcA1NfAQEDVYyAiT8AyxbtYEWCHILTgs6DjQLaxwLZ3oQQhEmnPAOGpQAvA2QOhnFZ+QBVAt9lAt64c3cC4i/tFAHzMCcB9JsB8tKHAuvzAulweQLq+QLq5AD5RwG5Au6JAuuclqqXAwLuPwOF4Jh5cOBxoQLzAwBpA44WmZMC9xMDkW4DkocC95gC+dkC+GaaHJqruzebHgOdgwL++gEbADmfHJ+zAwWNA6ZqA6bZANHFAwZqoYiiBQkDDEkCwAA/AwDhQRdTARHzA2sHl2cFAJMtK7evvdsBiZkUfxEEOQH7KQUhDp0JnwCS/SlXxQL3AZ0AtwW5AG8LbUEuFCaNLgFDAYD8AbUmAHUDDgRtACwCFgyhAAAKAj0CagPdA34EkQEgRQUhfAoABQBEABMANhICdwEABdUDa+8KxQIA9wqfJ7+xt+UBkSFBQgHpFH8RNMCJAAQAGwBaAkUChIsABjpTOpSNbQC4Oo860ACNOME63AClAOgAywE6gTo7Ofw5+Tt2iTpbO56JOm85GAFWATMBbAUvNV01njWtNWY1dTW2NcU1gjWRNdI14TWeNa017jX9NbI1wTYCNhE1xjXVNhY2JzXeNe02LjY9Ni41LSE2OjY9Njw2yTcIBJA8VzY4Nt03IDcPNsogN4k3MAoEsDxnNiQ3GTdsOo03IULUQwdC4EMLHA8PCZsobShRVQYA6X8A6bABFCnXAukBowC9BbcAbwNzBL8MDAMMAQgDAAkKCwsLCQoGBAVVBI/DvwDz9b29kaUCb0QtsRTNLt4eGBcSHAMZFhYZEhYEARAEBUEcQRxBHEEcQRxBHEEaQRxBHEFCSTxBPElISUhBNkM2QTYbNklISVmBVIgBFLWZAu0BhQCjBcEAbykBvwGJAaQcEZ0ePCklMAAhMvAIMAL54gC7Bm8EescjzQMpARQpKgDUABavAj626xQAJP0A3etzuf4NNRA7efy2Z9NQrCnC0OSyANz5BBIbJ5IFDR6miIavYS6tprjjmuKebxm5C74Q225X1pkaYYPb6f1DK4k3xMEBb9S2WMjEibTNWhsRJIA+vwNVEiXTE5iXs/wezV66oFLfp9NZGYW+Gk19J2+bCT6Ye2w6LDYdgzKMUabk595eLBCXANz9HUpWbATq9vqXVx9XDg+Pc9Xp4+bsS005SVM/BJBM4687WUuf+Uj9dEi8aDNaPxtpbDxcG1THTImUMZq4UCaaNYpsVqraNyKLJXDYsFZ/5jl7bLRtO88t7P3xZaAxhb5OdPMXqsSkp1WCieG8jXm1U99+blvLlXzPCS+M93VnJCiK+09LfaSaBAVBomyDgJua8dfUzR7ga34IvR2Nvj+A9heJ6lsl1KG4NkI1032Cnff1m1wof2B9oHJK4bi6JkEdSqeNeiuo6QoZZincoc73/TH9SXF8sCE7XyuYyW8WSgbGFCjPV0ihLKhdPs08Tx82fYAkLLc4I2wdl4apY7GU5lHRFzRWJep7Ww3wbeA3qmd59/86P4xuNaqDpygXt6M85glSBHOCGgJDnt+pN9bK7HApMguX6+06RZNjzVmcZJ+wcUrJ9//bpRNxNuKpNl9uFds+S9tdx7LaM5ZkIrPj6nIU9mnbFtVbs9s/uLgl8MVczAwet+iOEzzBlYW7RCMgE6gyNLeq6+1tIx4dpgZnd0DksJS5f+JNDpwwcPNXaaVspq1fbQajOrJgK0ofKtJ1Ne90L6VO4MOl5S886p7u6xo7OLjG8TGL+HU1JXGJgppg4nNbNJ5nlzSpuPYy21JUEcUA94PoFiZfjZue+QnyQ80ekOuZVkxx4g+cvhJfHgNl4hy1/a6+RKcKlar/J29y//EztlbVPHVUeQ1zX86eQVAjR/M3dA9w4W8LfaXp4EgM85wOWasli837PzVMOnsLzR+k3o75/lRPAJSE1xAKQzEi5v10ke+VBvRt1cwQRMd+U5mLCTGVd6XiZtgBG5cDi0w22GKcVNvHiu5LQbZEDVtz0onn7k5+heuKXVsZtSzilkLRAUmjMXEMB3J9YC50XBxPiz53SC+EhnPl9WsKCv92SM/OFFIMJZYfl0WW8tIO3UxYcwdMAj7FSmgrsZ2aAZO03BOhP1bNNZItyXYQFTpC3SG1VuPDqH9GkiCDmE+JwxyIVSO5siDErAOpEXFgjy6PQtOVDj+s6e1r8heWVvmZnTciuf4EiNZzCAd7SOMhXERIOlsHIMG399i9aLTy3m2hRLZjJVDNLS53iGIK11dPqQt0zBDyg6qc7YqkDm2M5Ve6dCWCaCbTXX2rToaIgz6+zh4lYUi/+6nqcFMAkQJKHYLK0wYk5N9szV6xihDbDDFr45lN1K4aCXBq/FitPSud9gLt5ZVn+ZqGX7cwm2z5EGMgfFpIFyhGGuDPmso6TItTMwny+7uPnLCf4W6goFQFV0oQSsc9VfMmVLcLr6ZetDZbaSFTLqnSO/bIPjA3/zAUoqgGFAEQS4IhuMzEp2I3jJzbzkk/IEmyax+rhZTwd6f+CGtwPixu8IvzACquPWPREu9ZvGkUzpRwvRRuaNN6cr0W1wWits9ICdYJ7ltbgMiSL3sTPeufgNcVqMVWFkCPDH4jG2jA0XcVgQj62Cb29v9f/z/+2KbYvIv/zzjpQAPkliaVDzNrW57TZ/ZOyZD0nlfMmAIBIAGAI0D3k/mdN4xr9v85ZbZbbqfH2jGd5hUqNZWwl5SPfoGmfElmazUIeNL1j/mkF7VNAzTq4jNt8JoQ11NQOcmhprXoxSxfRGJ9LDEOAQ+dmxAQH90iti9e2u/MoeuaGcDTHoC+xsmEeWmxEKefQuIzHbpw5Tc5cEocboAD09oipWQhtTO1wivf/O+DRe2rpl/E9wlrzBorjJsOeG1B/XPW4EaJEFdNlECEZga5ZoGRHXgYouGRuVkm8tDESiEyFNo+3s5M5puSdTyUL2llnINVHEt91XUNW4ewdMgJ4boJfEyt/iY5WXqbA+A2Fkt5Z0lutiWhe9nZIyIUjyXDC3UsaG1t+eNx6z4W/OYoTB7A6x+dNSTOi9AInctbESqm5gvOLww7OWXPrmHwVZasrl4eD113pm+JtT7JVOvnCXqdzzdTRHgJ0PiGTFYW5Gvt9R9LD6Lzfs0v/TZZHSmyVNq7viIHE6DBK7Qp07Iz55EM8SYtQvZf/obBniTWi5C2/ovHfw4VndkE5XYdjOhCMRjDeOEfXeN/CwfGduiUIfsoFeUxXeQXba7c7972XNv8w+dTjjUM0QeNAReW+J014dKAD/McQYXT7c0GQPIkn3Ll6R7gGjuiQoZD0TEeEqQpKoZ15g/0OPQI17QiSv9AUROa/V/TQN3dvLArec3RrsYlvBm1b8LWzltdugsC50lNKYLEp2a+ZZYqPejULRlOJh5zj/LVMyTDvwKhMxxwuDkxJ1QpoNI0OTWLom4Z71SNzI9TV1iXJrIu9Wcnd+MCaAw8o1jSXd94YU/1gnkrC9BUEOtQvEIQ7g0i6h+KL2JKk8Ydl7HruvgWMSAmNe+LshGhV4qnWHhO9/RIPQzY1tHRj2VqOyNsDpK0cww+56AdDC4gsWwY0XxoucIWIqs/GcwnWqlaT0KPr8mbK5U94/301i1WLt4YINTVvCFBrFZbIbY8eycOdeJ2teD5IfPLCRg7jjcFTwlMFNl9zdh/o3E/hHPwj7BWg0MU09pPrBLbrCgm54A6H+I6v27+jL5gkjWg/iYdks9jbfVP5y/n0dlgWEMlKasl7JvFZd56LfybW1eeaVO0gxTfXZwD8G4SI116yx7UKVRgui6Ya1YpixqXeNLc8IxtAwCU5IhwQgn+NqHnRaDv61CxKhOq4pOX7M6pkA+Pmpd4j1vn6ACUALoLLc4vpXci8VidLxzm7qFBe7s+quuJs6ETYmnpgS3LwSZxPIltgBDXz8M1k/W2ySNv2f9/NPhxLGK2D21dkHeSGmenRT3Yqcdl0m/h3OYr8V+lXNYGf8aCCpd4bWjE4QIPj7vUKN4Nrfs7ML6Y2OyS830JCnofg/k7lpFpt4SqZc5HGg1HCOrHvOdC8bP6FGDbE/VV0mX4IakzbdS/op+Kt3G24/8QbBV7y86sGSQ/vZzU8FXs7u6jIvwchsEP2BpIhW3G8uWNwa3HmjfH/ZjhhCWvluAcF+nMf14ClKg5hGgtPLJ98ueNAkc5Hs2WZlk2QHvfreCK1CCGO6nMZVSb99VM/ajr8WHTte9JSmkXq/i/U943HEbdzW6Re/S88dKgg8pGOLlAeNiqrcLkUR3/aClFpMXcOUP3rmETcWSfMXZE3TUOi8i+fqRnTYLflVx/Vb/6GJ7eIRZUA6k3RYR3iFSK9c4iDdNwJuZL2FKz/IK5VimcNWEqdXjSoxSgmF0UPlDoUlNrPcM7ftmA8Y9gKiqKEHuWN+AZRIwtVSxye2Kf8rM3lhJ5XcBXU9n4v0Oy1RU2M+4qM8AQPVwse8ErNSob5oFPWxuqZnVzo1qB/IBxkM3EVUKFUUlO3e51259GgNcJbCmlvrdjtoTW7rChm1wyCKzpCTwozUUEOIcWLneRLgMXh+SjGSFkAllzbGS5HK7LlfCMRNRDSvbQPjcXaenNYxCvu2Qyznz6StuxVj66SgI0T8B6/sfHAJYZaZ78thjOSIFumNWLQbeZixDCCC+v0YBtkxiBB3jefHqZ/dFHU+crbj6OvS1x/JDD7vlm7zOVPwpUC01nhxZuY/63E7g");for(let[t,a]of(n=new Map(read_sorted_arrays(e).flatMap((e,t)=>e.map(e=>[e,t+1<<24]))),o=new Set(read_sorted(e)),d=new Map,p=new Map,read_mapped(e))){if(!o.has(t)&&2==a.length){let[e,r]=a,i=p.get(e);i||(i=new Map,p.set(e,i)),i.set(r,t)}d.set(t,a.reverse())}}();let t=[],a=[],r=!1;function add(e){let a=n.get(e);a&&(r=!0,e|=a),t.push(e)}for(let r of e)for(;;){if(r<128)t.push(r);else if(is_hangul(r)){let e=r-44032,t=e/588|0,a=e%588/28|0,i=e%28;add(4352+t),add(4449+a),i>0&&add(4519+i)}else{let e=d.get(r);e?a.push(...e):add(r)}if(!a.length)break;r=a.pop()}if(r&&t.length>1){let e=unpack_cc(t[0]);for(let a=1;a<t.length;a++){let r=unpack_cc(t[a]);if(0==r||e<=r){e=r;continue}let i=a-1;for(;;){let a=t[i+1];if(t[i+1]=t[i],t[i]=a,!i||(e=unpack_cc(t[--i]))<=r)break}e=unpack_cc(t[a])}}return t}function nfc(e){return function(e){let t=[],a=[],r=-1,i=0;for(let s of e){let e=unpack_cc(s),n=unpack_cp(s);if(-1==r)0==e?r=n:t.push(n);else if(i>0&&i>=e)0==e?(t.push(r,...a),a.length=0,r=n):a.push(n),i=e;else{let s=function(e,t){if(e>=4352&&e<4371&&t>=4449&&t<4470)return 44032+(e-4352)*588+(t-4449)*28;if(is_hangul(e)&&t>4519&&t<4547&&(e-44032)%28==0)return e+(t-4519);{let a=p.get(e);return a&&(a=a.get(t))?a:-1}}(r,n);s>=0?r=s:0==i&&0==e?(t.push(r),r=n):(a.push(n),i=e)}}return r>=0&&t.push(r,...a),t}(decomposed(e))}let Array_from=e=>Array.from(e);function group_has_cp(e,t){return e.P.has(t)||e.Q.has(t)}let Emoji=class Emoji extends Array{get is_emoji(){return!0}};function init(){let e,t;if(l)return;let a=read_compressed_payload(""),read_sorted_array=()=>read_sorted(a),read_sorted_set=()=>new Set(read_sorted_array());l=new Map(read_mapped(a)),m=read_sorted_set(),c=read_sorted_array(),u=new Set(read_sorted_array().map(e=>c[e])),c=new Set(c),f=read_sorted_set(),read_sorted_set();let r=read_sorted_arrays(a),i=a(),read_chunked=()=>new Set(read_sorted_array().flatMap(e=>r[e]).concat(read_sorted_array()));g=read_array_while(e=>{let t=read_array_while(a).map(e=>e+96);if(t.length){let r=e>=i;return t[0]-=32,t=str_from_cps(t),r&&(t=`Restricted[${t}]`),{N:t,P:read_chunked(),Q:read_chunked(),M:!a(),R:r}}}),y=read_sorted_set(),b=new Map;let s=read_sorted_array().concat(Array_from(y)).sort((e,t)=>e-t);for(let{V:e,M:t}of(s.forEach((e,t)=>{let r=a(),i=s[t]=r?s[t-r]:{V:[],M:new Map};i.V.push(e),y.has(e)||b.set(e,i)}),new Set(b.values()))){let a=[];for(let t of e){let e=g.filter(e=>group_has_cp(e,t)),r=a.find(({G:t})=>e.some(e=>t.has(e)));r||(r={G:new Set,V:[]},a.push(r)),r.V.push(t),e.forEach(e=>r.G.add(e))}let r=a.flatMap(e=>Array_from(e.G));for(let{G:e,V:i}of a){let a=new Set(r.filter(t=>!e.has(t)));for(let e of i)t.set(e,a)}}let n=new Set,o=new Set,add_to_union=e=>n.has(e)?o.add(e):n.add(e);for(let e of g){for(let t of e.P)add_to_union(t);for(let t of e.Q)add_to_union(t)}for(let e of n)b.has(e)||o.has(e)||b.set(e,1);for(let r of(_=new Set(Array_from(n).concat(Array_from(decomposed(n).map(unpack_cp)))),w=(e=[],t=read_sorted(a),function expand({S:t,B:a},r,i){if(!(4&t)||i!==r[r.length-1])for(let s of(2&t&&(i=r[r.length-1]),1&t&&e.push(r),a))for(let e of s.Q)expand(s,[...r,e],i)}(function decode(e){return{S:a(),B:read_array_while(()=>{let e=read_sorted(a).map(e=>t[e]);if(e.length)return decode(e)}),Q:e}}([]),[]),e).map(e=>Emoji.from(e)).sort(compare_arrays),A=new Map,w)){let e=[A];for(let t of r){let a=e.map(e=>{let a=e.get(t);return a||(a=new Map,e.set(t,a)),a});65039===t?e.push(...a):e=a}for(let t of e)t.V=r}}function quoted_cp(e){return(should_escape(e)?"":`${bidi_qq(safe_str_from_cps([e]))} `)+quote_cp(e)}function bidi_qq(e){return`"${e}"\u200E`}function safe_str_from_cps(e,t=quote_cp){var a;let r=[];a=e[0],init(),c.has(a)&&r.push("◌");let i=0,s=e.length;for(let a=0;a<s;a++){let s=e[a];should_escape(s)&&(r.push(str_from_cps(e.slice(i,a))),r.push(t(s)),i=a+1)}return r.push(str_from_cps(e.slice(i,s))),r.join("")}function should_escape(e){return init(),f.has(e)}function error_disallowed(e){return Error(`disallowed character: ${quoted_cp(e)}`)}function error_group_member(e,t){let a=quoted_cp(t),r=g.find(e=>e.P.has(t));return r&&(a=`${r.N} ${a}`),Error(`illegal mixture: ${e.N} + ${a}`)}function error_placement(e){return Error(`illegal placement: ${e}`)}function filter_fe0f(e){return e.filter(e=>65039!=e)}let normalize=e=>(function(e){return e.map(({input:t,error:a,output:r})=>{if(a){let r=a.message;throw Error(1==e.length?r:`Invalid label ${bidi_qq(safe_str_from_cps(t))}: ${r}`)}return str_from_cps(r)}).join(".")})(function(e,t,a){if(!e)return[];init();let r=0;return e.split(".").map(e=>{let i=function(e){let t=[];for(let a=0,r=e.length;a<r;){let r=e.codePointAt(a);a+=r<65536?1:2,t.push(r)}return t}(e),s={input:i,offset:r};r+=i.length+1;try{let e,r=s.tokens=function(e,t,a){let r=[],i=[];for(e=e.slice().reverse();e.length;){let s=function(e,t){let a,r=A,i=e.length;for(;i&&(r=r.get(e[--i]));){let{V:s}=r;s&&(a=s,t&&t.push(...e.slice(i).reverse()),e.length=i)}return a}(e);if(s)i.length&&(r.push(t(i)),i=[]),r.push(a(s));else{let t=e.pop();if(_.has(t))i.push(t);else{let e=l.get(t);if(e)i.push(...e);else if(!m.has(t))throw error_disallowed(t)}}}return i.length&&r.push(t(i)),r}(i,t,a),n=r.length;if(!n)throw Error("empty label");let o=s.output=r.flat();if(function(e){for(let t=e.lastIndexOf(95);t>0;)if(95!==e[--t])throw Error("underscore allowed only at start")}(o),!(s.emoji=n>1||r[0].is_emoji)&&o.every(e=>e<128))(function(e){if(e.length>=4&&45==e[2]&&45==e[3])throw Error(`invalid label extension: "${str_from_cps(e.slice(0,4))}"`)})(o),e="ASCII";else{let t=r.flatMap(e=>e.is_emoji?[]:e);if(t.length){if(c.has(o[0]))throw error_placement("leading combining mark");for(let e=1;e<n;e++){let t=r[e];if(!t.is_emoji&&c.has(t[0]))throw error_placement(`emoji + combining mark: "${str_from_cps(r[e-1])} + ${safe_str_from_cps([t[0]])}"`)}!function(e){let t=e[0],a=rh.get(t);if(a)throw error_placement(`leading ${a}`);let r=e.length,i=-1;for(let s=1;s<r;s++){t=e[s];let r=rh.get(t);if(r){if(i==s)throw error_placement(`${a} + ${r}`);i=s+1,a=r}}if(i==r)throw error_placement(`trailing ${a}`)}(o);let a=Array_from(new Set(t)),[i]=function(e){let t=g;for(let a of e){let e=t.filter(e=>group_has_cp(e,a));if(!e.length){if(g.some(e=>group_has_cp(e,a)))throw error_group_member(t[0],a);throw error_disallowed(a)}if(t=e,1==e.length)break}return t}(a);(function(e,t){for(let a of t)if(!group_has_cp(e,a))throw error_group_member(e,a);if(e.M){let e=decomposed(t).map(unpack_cp);for(let t=1,a=e.length;t<a;t++)if(u.has(e[t])){let r=t+1;for(let i;r<a&&u.has(i=e[r]);r++)for(let a=t;a<r;a++)if(e[a]==i)throw Error(`duplicate non-spacing marks: ${quoted_cp(i)}`);if(r-t>4)throw Error(`excessive non-spacing marks: ${bidi_qq(safe_str_from_cps(e.slice(t-1,r)))} (${r-t}/4)`);t=r}}})(i,t),function(e,t){let a;let r=[];for(let e of t){let t=b.get(e);if(1===t)return;if(t){let r=t.M.get(e);if(!(a=a?a.filter(e=>r.has(e)):Array_from(r)).length)return}else r.push(e)}if(a){for(let t of a)if(r.every(e=>group_has_cp(t,e)))throw Error(`whole-script confusable: ${e.N}/${t.N}`)}}(i,a),e=i.N}else e="Emoji"}s.type=e}catch(e){s.error=e}return s})}(e,nfc,filter_fe0f)),namehash=e=>{let t="";for(let e=0;e<32;e+=1)t+="00";if(e){let a=normalize(e),r=a.split(".");for(let e=r.length-1;e>=0;e-=1){let a=hash_sha3Raw(r[e]).slice(2);t=hash_sha3Raw(`0x${t}${a}`).slice(2)}}return`0x${t}`};var registry_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let Registry=class Registry{constructor(e,t){this.contract=new Contract(rc,null!=t?t:rl.main,e),this.context=e}getOwner(e){return registry_awaiter(this,void 0,void 0,function*(){try{let t=this.contract.methods.owner(namehash(e)).call();return t}catch(e){throw Error()}})}getTTL(e){return registry_awaiter(this,void 0,void 0,function*(){try{return this.contract.methods.ttl(namehash(e)).call()}catch(e){throw Error()}})}recordExists(e){return registry_awaiter(this,void 0,void 0,function*(){try{let t=this.contract.methods.recordExists(namehash(e)).call();return t}catch(e){throw Error()}})}getResolver(e){return registry_awaiter(this,void 0,void 0,function*(){try{return this.contract.methods.resolver(namehash(e)).call().then(e=>{if("string"==typeof e){let t=new Contract(ru,e,this.context);return t}throw Error()})}catch(e){throw Error()}})}get events(){return this.contract.events}};var resolver_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let Resolver=class Resolver{constructor(e){this.registry=e}getResolverContractAdapter(e){return resolver_awaiter(this,void 0,void 0,function*(){return this.registry.getResolver(e)})}checkInterfaceSupport(e,t){var a,r;return resolver_awaiter(this,void 0,void 0,function*(){if(tB(rp[t]))throw new ResolverMethodMissingError(null!==(a=e.options.address)&&void 0!==a?a:"",t);let i=yield e.methods.supportsInterface(rp[t]).call();if(!i)throw new ResolverMethodMissingError(null!==(r=e.options.address)&&void 0!==r?r:"",t)})}supportsInterface(e,t){var a;return resolver_awaiter(this,void 0,void 0,function*(){let r=yield this.getResolverContractAdapter(e),i=t;if(!string_isHexStrict(i)){if(i=null!==(a=sha3(t))&&void 0!==a?a:"",""===t)throw Error("Invalid interface Id");i=i.slice(0,10)}return r.methods.supportsInterface(i).call()})}getAddress(e,t=60){return resolver_awaiter(this,void 0,void 0,function*(){let a=yield this.getResolverContractAdapter(e);return yield this.checkInterfaceSupport(a,"addr"),a.methods.addr(namehash(e),t).call()})}getPubkey(e){return resolver_awaiter(this,void 0,void 0,function*(){let t=yield this.getResolverContractAdapter(e);return yield this.checkInterfaceSupport(t,"pubkey"),t.methods.pubkey(namehash(e)).call()})}getContenthash(e){return resolver_awaiter(this,void 0,void 0,function*(){let t=yield this.getResolverContractAdapter(e);return yield this.checkInterfaceSupport(t,"contenthash"),t.methods.contenthash(namehash(e)).call()})}};var ens_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let ENS=class ENS extends Web3Context{constructor(e,t){super(null!=t?t:""),this.registryAddress=null!=e?e:rl.main,this._registry=new Registry(this.getContextObject(),e),this._resolver=new Resolver(this._registry)}getResolver(e){return ens_awaiter(this,void 0,void 0,function*(){return this._registry.getResolver(e)})}recordExists(e){return ens_awaiter(this,void 0,void 0,function*(){return this._registry.recordExists(e)})}getTTL(e){return ens_awaiter(this,void 0,void 0,function*(){return this._registry.getTTL(e)})}getOwner(e){return ens_awaiter(this,void 0,void 0,function*(){return this._registry.getOwner(e)})}getAddress(e,t=60){return ens_awaiter(this,void 0,void 0,function*(){return this._resolver.getAddress(e,t)})}getPubkey(e){return ens_awaiter(this,void 0,void 0,function*(){return this._resolver.getPubkey(e)})}getContenthash(e){return ens_awaiter(this,void 0,void 0,function*(){return this._resolver.getContenthash(e)})}checkNetwork(){return ens_awaiter(this,void 0,void 0,function*(){let e=Date.now()/1e3;if(!this._lastSyncCheck||e-this._lastSyncCheck>3600){let t=yield isSyncing(this);if(!("boolean"==typeof t&&!t))throw new ENSNetworkNotSyncedError;this._lastSyncCheck=e}if(this._detectedAddress)return this._detectedAddress;let t=yield rpc_method_wrappers_getId(this,Object.assign(Object.assign({},to),{number:I.HEX})),a=rl[rm[t]];if(void 0===a)throw new ENSUnsupportedNetworkError(t);return this._detectedAddress=a,this._detectedAddress})}supportsInterface(e,t){return ens_awaiter(this,void 0,void 0,function*(){return this._resolver.supportsInterface(e,t)})}get events(){return this._registry.events}};var lib_esm_rpc_method_wrappers_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let rpc_method_wrappers_getAccounts=e=>lib_esm_rpc_method_wrappers_awaiter(void 0,void 0,void 0,function*(){let t=yield personal_rpc_methods_getAccounts(e);return t.map(converters_toChecksumAddress)}),rpc_method_wrappers_newAccount=(e,t)=>lib_esm_rpc_method_wrappers_awaiter(void 0,void 0,void 0,function*(){tc.validate(["string"],[t]);let a=yield newAccount(e,t);return converters_toChecksumAddress(a)}),rpc_method_wrappers_unlockAccount=(e,t,a,r)=>lib_esm_rpc_method_wrappers_awaiter(void 0,void 0,void 0,function*(){return tc.validate(["address","string","uint"],[t,a,r]),unlockAccount(e,t,a,r)}),rpc_method_wrappers_lockAccount=(e,t)=>lib_esm_rpc_method_wrappers_awaiter(void 0,void 0,void 0,function*(){return tc.validate(["address"],[t]),lockAccount(e,t)}),rpc_method_wrappers_importRawKey=(e,t,a)=>lib_esm_rpc_method_wrappers_awaiter(void 0,void 0,void 0,function*(){return tc.validate(["string","string"],[t,a]),importRawKey(e,t,a)}),esm_rpc_method_wrappers_sendTransaction=(e,t,a)=>lib_esm_rpc_method_wrappers_awaiter(void 0,void 0,void 0,function*(){let r=formatTransaction(t,td);return personal_rpc_methods_sendTransaction(e,r,a)}),esm_rpc_method_wrappers_signTransaction=(e,t,a)=>lib_esm_rpc_method_wrappers_awaiter(void 0,void 0,void 0,function*(){let r=formatTransaction(t,td);return personal_rpc_methods_signTransaction(e,r,a)}),esm_rpc_method_wrappers_sign=(e,t,a,r)=>lib_esm_rpc_method_wrappers_awaiter(void 0,void 0,void 0,function*(){tc.validate(["string","address","string"],[t,a,r]);let i=string_isHexStrict(t)?t:converters_utf8ToHex(t);return personal_rpc_methods_sign(e,i,a,r)}),rpc_method_wrappers_ecRecover=(e,t,a)=>lib_esm_rpc_method_wrappers_awaiter(void 0,void 0,void 0,function*(){tc.validate(["string","string"],[t,a]);let r=string_isHexStrict(t)?t:converters_utf8ToHex(t);return ecRecover(e,r,a)});var personal_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let personal_Personal=class personal_Personal extends Web3Context{getAccounts(){return personal_awaiter(this,void 0,void 0,function*(){return rpc_method_wrappers_getAccounts(this.requestManager)})}newAccount(e){return personal_awaiter(this,void 0,void 0,function*(){return rpc_method_wrappers_newAccount(this.requestManager,e)})}unlockAccount(e,t,a){return personal_awaiter(this,void 0,void 0,function*(){return rpc_method_wrappers_unlockAccount(this.requestManager,e,t,a)})}lockAccount(e){return personal_awaiter(this,void 0,void 0,function*(){return rpc_method_wrappers_lockAccount(this.requestManager,e)})}importRawKey(e,t){return personal_awaiter(this,void 0,void 0,function*(){return rpc_method_wrappers_importRawKey(this.requestManager,e,t)})}sendTransaction(e,t){return personal_awaiter(this,void 0,void 0,function*(){return esm_rpc_method_wrappers_sendTransaction(this.requestManager,e,t)})}signTransaction(e,t){return personal_awaiter(this,void 0,void 0,function*(){return esm_rpc_method_wrappers_signTransaction(this.requestManager,e,t)})}sign(e,t,a){return personal_awaiter(this,void 0,void 0,function*(){return esm_rpc_method_wrappers_sign(this.requestManager,e,t,a)})}ecRecover(e,t){return personal_awaiter(this,void 0,void 0,function*(){return rpc_method_wrappers_ecRecover(this.requestManager,e,t)})}};let rf={encodeEventSignature:encodeEventSignature,encodeFunctionCall:(e,t)=>{var a;if(!isAbiFunctionFragment(e))throw new AbiError("Invalid parameter value in encodeFunctionCall");return`${encodeFunctionSignature(e)}${parameters_api_encodeParameters(null!==(a=e.inputs)&&void 0!==a?a:[],null!=t?t:[]).replace("0x","")}`},encodeFunctionSignature:encodeFunctionSignature,encodeParameter:encodeParameter,encodeParameters:parameters_api_encodeParameters,decodeParameter:decodeParameter,decodeParameters:parameters_api_decodeParameters,decodeLog:decodeLog};var accounts_awaiter=function(e,t,a,r){return new(a||(a=Promise))(function(i,s){function fulfilled(e){try{step(r.next(e))}catch(e){s(e)}}function rejected(e){try{step(r.throw(e))}catch(e){s(e)}}function step(e){var t;e.done?i(e.value):((t=e.value)instanceof a?t:new a(function(e){e(t)})).then(fulfilled,rejected)}step((r=r.apply(e,t||[])).next())})};let initAccountsForContext=e=>{let signTransactionWithContext=(t,a)=>accounts_awaiter(void 0,void 0,void 0,function*(){let r=yield prepareTransactionForSigning(t,e),i=format({format:"bytes"},a,td);return signTransaction(r,i)}),privateKeyToAccountWithContext=e=>{let t=privateKeyToAccount(e);return Object.assign(Object.assign({},t),{signTransaction:e=>accounts_awaiter(void 0,void 0,void 0,function*(){return signTransactionWithContext(e,t.privateKey)})})},decryptWithContext=(e,t,a)=>accounts_awaiter(void 0,void 0,void 0,function*(){var r;let i=yield account_decrypt(e,t,null===(r=null==a?void 0:a.nonStrict)||void 0===r||r);return Object.assign(Object.assign({},i),{signTransaction:e=>accounts_awaiter(void 0,void 0,void 0,function*(){return signTransactionWithContext(e,i.privateKey)})})}),createWithContext=()=>{let e=create();return Object.assign(Object.assign({},e),{signTransaction:t=>accounts_awaiter(void 0,void 0,void 0,function*(){return signTransactionWithContext(t,e.privateKey)})})},t=new Wallet({create:createWithContext,privateKeyToAccount:privateKeyToAccountWithContext,decrypt:decryptWithContext});return{signTransaction:signTransactionWithContext,create:createWithContext,privateKeyToAccount:privateKeyToAccountWithContext,decrypt:decryptWithContext,recoverTransaction:recoverTransaction,hashMessage:hashMessage,sign:sign,recover:recover,encrypt:account_encrypt,wallet:t,privateKeyToAddress:privateKeyToAddress,parseAndValidatePrivateKey:parseAndValidatePrivateKey,privateKeyToPublicKey:privateKeyToPublicKey}};let Web3=class Web3 extends Web3Context{constructor(e){var t;!tB(e)&&("string"!=typeof e||""!==e.trim())&&("string"==typeof e||isSupportedProvider(e)||e.provider)||console.warn("NOTE: web3.js is running without provider. You need to pass a provider in order to interact with the network!");let a={};"string"==typeof e||isSupportedProvider(e)?a.provider=e:a=e||{},a.registeredSubscriptions=Object.assign(Object.assign({},rn),null!==(t=a.registeredSubscriptions)&&void 0!==t?t:{}),super(a);let r=initAccountsForContext(this);this._wallet=r.wallet,this._accountProvider=r,this.utils=G;let i=this,s=i.use(web3_eth_Web3Eth);this.eth=Object.assign(s,{ens:i.use(ENS,rl.main),Iban:iban_Iban,net:i.use(net_Net),personal:i.use(personal_Personal),Contract:class extends rd{constructor(e,t,a,r,s){let n,o;if(isContractInitOptions(t)&&isContractInitOptions(a))throw new InvalidMethodParamsError("Should not provide options at both 2nd and 3rd parameters");let d={},p=to;if(!tB(t)&&"object"!=typeof t&&"string"!=typeof t)throw new InvalidMethodParamsError;"string"==typeof t&&(n=t),d=isContractInitOptions(t)?t:isContractInitOptions(a)?a:{},o=t instanceof Web3Context?t:a instanceof Web3Context?a:r instanceof Web3Context?r:i.getContextObject(),s?p=s:isDataFormat(a)?p=a:isDataFormat(r)&&(p=r),super(e,n,d,o,p),super.subscribeToContextEvents(i)}},abi:rf,accounts:r})}};Web3.version="4.3.0",Web3.utils=G,Web3.modules={Web3Eth:web3_eth_Web3Eth,Iban:iban_Iban,Net:net_Net,ENS:ENS,Personal:personal_Personal};let rv=Web3},2115:e=>{"use strict";e.exports=JSON.parse('[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]')}};